{"version":3,"sources":["../video/video.js"],"names":["Sirv","define","sirvRequire","sirvModule","bHelpers","magicJS","globalVariables","globalFunctions","helper","Promise","EventEmitter","Instance","defaultsVideoOptions","moduleName","$J","$","rootDOM","addModuleCSSByName","Video","P","smv","PLAYBACK_RATES","DISABLE_CLASS","HOST","INFO","QUALITY_CONTROL","SPEED_CONTROL","NEW_IMAGE_FACTOR","DPPX","ACTIONS","NONE","PLAY","PLAY_SREEN_IN","PLAY_BY_USER","PLAY_BY_SWITCHING","PAUSE","PAUSE_BY_SWITCHING","cssID","loadCSS","rootNode","addStyle","config","libcss","loadVideoJS","resolve","libjs","loadQualitySelectorCSS","qualitySelectorcss","mainCSSID","loadQualitySelector","qualitySelectorjs","getVideoType","src","split","length","toLowerCase","calcBandwidth","hls","fps","motionFactor","parseInt","width","height","VideoInstance","node","options","type","SLIDE","TYPES","VIDEO","url","instanceNode","attr","info","HLS","currentSize","videoNode","areSourcesAdded","indexOfCurrentHls","player","thumbnail","option","currentTime","isVideoPaused","pluginResizeDebounce","playPromise","posterSize","lastAction","isPlayed","isEnded","playingState","nativeFullscreen","baseUrl","normalizeURL","replace","REG_URL_QUERY_STRING","params","disableAction","isLoadeddata","controlsFullscreen","getInfo","normalizeOptions","min","max","getOriginImageUrl","getSelectorImgUrl","data","reject","size","thumbnailPosterSelector","isNaN","parseFloat","getThumbnailPoster","obj","callbackData","srcset","then","catch","always","contains","FULLSCREEN","CLOSED","CLOSING","fullscreenState","addClass","enableAction","removeClass","gettingInfoPromise","waitGettingInfo","wait","hash","getHashCode","test","getRemoteData","generateUUID","referrerPolicy","destroyed","QuickTime","VideoFrameRate","original","sort","a","b","result","infoSize","err","getInfoSize","error","addSources","nodeWithSirvClassName","getNodeWithSirvClassName","D","head","body","all","finally","isStarted","isInView","preload","isSlideShown","createVideoNode","onStartActions","who","_isReady","OPENED","controlBar","show","bigPlayButton","paused","muted","SLIDE_SHOWN_BY","USER","play","onStopActions","PLAYING","pause","onInView","value","startFullInit","isStartedFullInit","getId","addEvent","e","stop","onBeforeFullscreenIn","toggleFullscreenButton","onAfterFullscreenIn","play_","onBeforeFullscreenOut","onAfterFullscreenOut","hide","onSecondSelectorClick","$new","append","waitToStart","start","done","loadContent","run","isShown","firstSlideAhead","calcContainerSize","startGettingInfo","createMasterManifest","mf","das","forEach","str","push","index","join","ft","getChild","ua","options_","userActions","doubleClick","isHLS","browser","uaName","getThumbnailSize","maxSize","getPosterUrl","posterImage","volumeControl","inline","html5Options","nativeTextTracks","nativeAudioTracks","nativeVideoTracks","isHSL","vhsOptions","overrideNative","smoothQualityChange","vhs","videoOptions","controls","fluid","loop","autoplay","textTrackSettings","fullscreenToggle","volumePanel","muteToggle","children","poster","playsinline","html5","qualityLevels","playbackRates","W","videojs","window","btoa","hlsQualitySelectorAutoMode","visibility","host","debounce","recalc","vType","volume","on","reason","sendEvent","event","playbackTime","duration","eventName","isFullscreen","videoSeekStart","previousTime","seekStart","seekEnd","console","log","touchScreen","mobile","target","getTagName","hasClass","off","tech_","handleTechDoubleClick_","sendContentLoadedEvent","basePoster","prefix","floatValueThumbnail","getSize","originSize","createPinchEvent","FS_OUT","FS_IN","pinchCloud","onPinchStart","OPENING","pinch","scale","onPinchMove","block","s","onResize","newSize","getType","destroy","dispose","remove","cancel","clearEvents"],"mappings":"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","sourcesContent":["Sirv.define(\n    'Video',\n    ['require','module','bHelpers','magicJS','globalVariables','globalFunctions','helper','Promise!','EventEmitter','Instance','defaultsVideoOptions'],\n    (sirvRequire,sirvModule,bHelpers,magicJS,globalVariables,globalFunctions,helper,Promise,EventEmitter,Instance,defaultsVideoOptions) => {\n        const moduleName = 'Video';\n        \n        const $J = magicJS;\n        const $ = $J.$;\n        \n        \n        /* start-removable-module-css */\n        globalFunctions.rootDOM.addModuleCSSByName(moduleName, () => {\n            return '.smv-sirv-video .js-focus-visible .vjs-menu li.vjs-menu-item:hover,.smv-sirv-video .js-focus-visible .vjs-menu li.vjs-selected:hover,.smv-sirv-video .vjs-menu li.vjs-menu-item:focus,.smv-sirv-video .vjs-menu li.vjs-menu-item:hover,.smv-sirv-video .vjs-menu li.vjs-selected,.smv-sirv-video .vjs-menu li.vjs-selected:focus,.smv-sirv-video .vjs-menu li.vjs-selected:hover{background-color:transparent;color:inherit}.smv-sirv-video .vjs-playback-rate .vjs-playback-rate-value,.smv-sirv-video .vjs-quality-selector .vjs-icon-placeholder{font-size:1.2em;line-height:2.5em;pointer-events:none}.smv-sirv-video.video-js .vjs-big-play-button,.smv-sirv-video.video-js .vjs-control-bar,.smv-sirv-video.video-js .vjs-menu-button .vjs-menu-content,.smv-sirv-video.video-js .vjs-volume-vertical{background-color:rgba(55,58,60,.8)}.smv-sirv-video{position:relative;top:0;left:0;width:100%!important;height:100%!important}.smv-sirv-video :focus{outline:0}.smv-sirv-video .vjs-poster{background-color:transparent}.smv-sirv-video .vjs-button{display:inline-block;transition:none;border:0!important;background:0 0;color:inherit;font-size:inherit;line-height:inherit;text-decoration:none;text-transform:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.smv-sirv-video .vjs-big-play-button{top:50%;left:50%;width:1.2em;height:1.2em;margin-top:-.6em;margin-left:-.6em;border:.04em solid transparent;border-radius:1em;color:inherit!important;font-size:5em;letter-spacing:0!important;line-height:1.2em;box-shadow:none}.smv-sirv-video:hover .vjs-big-play-button{border-color:transparent}.smv-sirv-video.vjs-controls-disabled .vjs-big-play-button,.smv-sirv-video.vjs-has-started .vjs-big-play-button{display:block;transition:opacity .25s}.smv-sirv-video.vjs-has-started.vjs-playing .vjs-big-play-button{opacity:0;pointer-events:none}.smv-sirv-video.vjs-has-started.vjs-paused .vjs-big-play-button{opacity:1}.smv-sirv-video .vjs-quality-selector .vjs-icon-placeholder{line-height:1}.smv-sirv-video.video-js{background-color:transparent;color:#fff;font-size:10px}.smv-sirv-video.video-js:not(.vjs-has-started) .vjs-tech{opacity:.001}.smv-sirv-video.video-js .vjs-control-bar :last-child .vjs-menu{left:100%;transform:translateX(-100%)}.smv-sirv-video.video-js .vjs-control-bar .vjs-control{color:inherit!important;box-shadow:none}.smv-sirv-video.video-js .vjs-control-bar .vjs-control .vjs-icon-placeholder{font-family:VideoJS;font-style:normal;font-weight:400;line-height:1}.smv-sirv-video.video-js .vjs-control-bar .vjs-control.vjs-quality-selector,.smv-sirv-video.video-js .vjs-control-bar .vjs-control.vjs-resolution{margin-right:.4em}.smv-sirv-video.video-js.vjs-has-started .vjs-control-bar{transition:visibility .2s,opacity .2s}.smv-sirv-video.video-js .vjs-menu-button{padding:0}.smv-sirv-video.video-js .vjs-slider{background-color:rgba(255,255,255,.2)}.smv-sirv-video.video-js .vjs-progress-control .vjs-progress-holder{transform:scaleY(.6);transition:transform .1s cubic-bezier(.4,0,1,1);font-size:1.6666666667em}.smv-sirv-video.video-js .vjs-progress-control .vjs-play-progress::before{transform:scale(0);transition:transform .1s cubic-bezier(.4,0,1,1)}.smv-sirv-video.video-js .vjs-progress-control:hover .vjs-play-progress::before,.smv-sirv-video.video-js .vjs-progress-control:hover .vjs-progress-holder{transform:none}.smv-sirv-video.video-js .vjs-load-progress{background-color:transparent}.smv-sirv-video.video-js .vjs-load-progress div{background:rgba(255,255,255,.4)}.smv-sirv-video.video-js .vjs-menu{left:50%;width:8em;transform:translateX(-50%)}.smv-sirv-video.video-js .vjs-menu .vjs-menu-item{padding:.6em .6em .3em;font-size:1.2em;text-align:left;text-transform:none}.smv-sirv-video.video-js .vjs-menu .vjs-menu-item~.vjs-menu-item{padding-top:.3em}.smv-sirv-video.video-js .vjs-menu .vjs-menu-item::before{padding:0 1em;font-family:VideoJS;font-size:.66em;content:\\'\\\\f111\\';opacity:0}.smv-sirv-video.video-js .vjs-menu .vjs-menu-item.vjs-selected::before{opacity:1}.smv-sirv-video.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical{transition:visibility .1s,opacity .1s,height .1s,width .1s,left 0s,top 0s}:root:not(.mobile-magic) .smv-sirv-video.video-js.vjs-has-started:not(:hover) .vjs-control-bar{opacity:0}.smv-disabled-action .vjs-tech{pointer-events:none!important}.smv-disabled-action .vjs-poster{pointer-events:none!important}.smv .vjs-quality-selector .vjs-menu-content .vjs-menu-title{display:none}.smv .smv-q-last .vjs-quality-selector .vjs-menu,.smv .smv-s-last .vjs-playback-rate .vjs-menu{right:0;left:auto!important;transform:none!important}';\n        });\n        /* end-removable-module-css */\n        \n        \n// see 'src/modules/defaultsVideoOptions/8.core.js' file\n\n/* global $, $J */\n/* global helper */\n/* global videojs */\n/* global Instance */\n/* global sirvRequire */\n/* global sirvModule */\n/* global globalVariables */\n/* global defaultsVideoOptions */\n/* eslint-disable indent */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint-env es6 */\n\n/*\n    videojs-brand\n*/\n\n\n// eslint-disable-next-line no-unused-vars\nconst Video = (() => {\n    const P = globalVariables.smv;\n    // Video playback rates (speed)\n    const PLAYBACK_RATES = [0.5, 1, 1.5, 2];\n\n    const DISABLE_CLASS = P + '-disabled-action';\n    const HOST = 'https://video.sirv.com';\n    const INFO = 'sirv_video_info_';\n\n    const QUALITY_CONTROL = P + '-q-last';\n    const SPEED_CONTROL = P + '-s-last';\n    const NEW_IMAGE_FACTOR = 50 * $J.DPPX;\n\n    const ACTIONS = {\n        NONE: 0,\n        PLAY: 1,\n        PLAY_SREEN_IN: 2,\n        PLAY_BY_USER: 3,\n        PLAY_BY_SWITCHING: 4,\n        PAUSE: 5,\n        PAUSE_BY_SWITCHING: 6\n    };\n\n    const cssID = 'sirv-stylesheet-vjs';\n    const loadCSS = (rootNode) => {\n        // return globalFunctions.rootDOM.addStyle(rootNode, sirvModule.config().libcss, cssID, '#' + globalFunctions.rootDOM.mainCSSID);\n        return globalFunctions.rootDOM.addStyle(rootNode, sirvModule.config().libcss, cssID); // videojs css must be added before sirv.css\n    };\n\n    const loadVideoJS = () => {\n        return new Promise((resolve) => {\n            sirvRequire([sirvModule.config().libjs], resolve);\n        });\n    };\n\n    const loadQualitySelectorCSS = (rootNode) => {\n        return globalFunctions.rootDOM.addStyle(rootNode, sirvModule.config().qualitySelectorcss, 'sirv-stylesheet-vjs-quality-selector', '#' + globalFunctions.rootDOM.mainCSSID);\n    };\n\n    const loadQualitySelector = () => {\n        return new Promise((resolve) => {\n            sirvRequire([sirvModule.config().qualitySelectorjs], resolve);\n        });\n    };\n\n    const getVideoType = (src) => {\n        src = src || '';\n        src = src.split('?')[0];\n        src = src.split('.');\n        src = src[src.length - 1];\n\n        src = src.toLowerCase();\n\n        switch (src) {\n            case '3gp':\n                src = 'video/3gpp';\n                // src = 'video/3gpp; codecs=\"mp4v.20.8, samr\"';\n                break;\n            case 'flv':\n                src = 'video/flv';\n                // src = 'video/flv; codecs=\"flv\"';\n                break;\n            case 'mp4':\n                src = 'video/mp4';\n                // src = 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"';\n                break;\n            case 'ogv':\n                src = 'video/ogg';\n                // src = 'video/ogg; codecs=\"theora, vorbis\"';\n                break;\n            case 'webm':\n                src = 'video/webm';\n                // src = 'video/webm; codecs=\"vp8, vorbis\"';\n                break;\n            default:\n                src = '';\n        }\n\n        return src;\n    };\n\n    const calcBandwidth = (hls, fps, motionFactor) => {\n        // return hls.width * hls.height * 24 / 8;\n\n        // https://www.miracletutorials.com/bitrate-hls-video/\n        // width * height * fps * motion_factor * 0.07\n        // 1 = little motion\n        // 2 = moderate motion\n        // 3 = more motion\n        // 4 = high motion\n        return parseInt(hls.width * hls.height * fps * motionFactor * 0.07, 10);\n    };\n\n    class VideoInstance extends Instance {\n        constructor(node, options) {\n            super(node, options, defaultsVideoOptions);\n\n            this.type = globalVariables.SLIDE.TYPES.VIDEO;\n            this.url = this.instanceNode.attr('data-src');\n            this.info = null;\n            this.HLS = [];\n            this.currentSize = { width: 0, height: 0 };\n            this.videoNode = null;\n            this.areSourcesAdded = false;\n            this.indexOfCurrentHls = 0;\n            this.player = null;\n            this.thumbnail = this.option('thumbnail');\n            this.currentTime = 0;\n            this.isVideoPaused = false;\n            this.fps = 30;\n            this.pluginResizeDebounce = null;\n            this.playPromise = null;\n            this.posterSize = null;\n            this.lastAction = ACTIONS.NONE;\n            this.isPlayed = false;\n            this.isEnded = false;\n\n            // because sometimes when we call this.player.start() and the video is not loaded yet the videojs throw error when we call this.player.pause()\n            this.playingState = globalVariables.VIDEO.NONE;\n\n            this.nativeFullscreen = options.nativeFullscreen;\n\n            const baseUrl = globalFunctions.normalizeURL(this.url.replace(globalVariables.REG_URL_QUERY_STRING, '$1'));\n            const params = this.url.replace(globalVariables.REG_URL_QUERY_STRING, '$2');\n            this.url = baseUrl;\n            if (params) { this.url += ('?' + params); }\n\n            this.disableAction();\n\n            this.isLoadeddata = false;\n            this.controlsFullscreen = this.option('controls.fullscreen');\n\n            // this.api = $J.extend(this.api, {\n            //     isReady: this.isReady.bind(this), // parent class\n            //     resize: this.resize.bind(this), // parent class\n            //     getOptions: this.getOptions.bind(this) // parent class\n            // });\n\n            this.getInfo();\n\n            // for shadow dom we must add it after the element will be in dom to detect where the viewer is started\n            // this.addSources();\n        }\n\n        normalizeOptions() {\n            const min  = this.option('quality.min');\n            const max = this.option('quality.max');\n\n            if (min > max) {\n                this.option('quality.max', min);\n            }\n        }\n\n        // eslint-disable-next-line class-methods-use-this\n        getOriginImageUrl() {\n            return null;\n        }\n\n        getSelectorImgUrl(data) {\n            return new Promise((resolve, reject) => {\n                const size = (data.width || data.height);\n                let thumbnailPosterSelector = (this.url.split('?')[0]) + '?thumbnail=' + size;\n\n                if ($J.DPPX > 1) {\n                    thumbnailPosterSelector = (this.url.split('?')[0]) + '?thumbnail=' + (size * $J.DPPX) + '&quality=60';\n                }\n\n                if (this.thumbnail) {\n                    if (!isNaN(parseFloat(this.thumbnail))) {\n                        thumbnailPosterSelector = this.getThumbnailPoster(thumbnailPosterSelector);\n                    } else {\n                        thumbnailPosterSelector = this.thumbnail;\n                    }\n                }\n\n                const obj = {\n                    src: thumbnailPosterSelector,\n                    callbackData: data.callbackData,\n                };\n\n                if ($J.DPPX > 1) {\n                    obj.srcset = thumbnailPosterSelector;\n                }\n\n                this.getInfo()\n                    .then(() => {\n                        // this.waitToStart.wait(() => {\n                            resolve(obj);\n                        // });\n                    })\n                    .catch(reject);\n            });\n        }\n\n        disableAction() {\n            if (this.always && $J.contains([globalVariables.FULLSCREEN.CLOSED, globalVariables.FULLSCREEN.CLOSING], this.fullscreenState)) {\n                this.instanceNode.addClass(DISABLE_CLASS);\n            }\n        }\n\n        enableAction() {\n            if (this.always) {\n                this.instanceNode.removeClass(DISABLE_CLASS);\n            }\n        }\n\n        getInfo() {\n            if (!this.gettingInfoPromise) {\n                this.gettingInfoPromise = new Promise((resolve, reject) => {\n                    this.waitGettingInfo.wait(() => {\n                        let url = this.url;\n                        const hash = $J.getHashCode((this.url.split('?')[0]).replace(/^http(s)?:\\/\\//, ''));\n\n                        if (/\\?/.test(url)) {\n                            url += '&';\n                        } else {\n                            url += '?';\n                        }\n\n                        // url += ('nometa&info=' + INFO + hash + '_main');\n                        // we need meta because we need fps\n                        url += ('info=' + INFO + hash + '_main');\n\n                        helper.getRemoteData(url, 'video_info_' + helper.generateUUID(), this.referrerPolicy)\n                            .then((data) => {\n                                if (!this.destroyed) {\n                                    this.info = data;\n\n                                    if (this.info.QuickTime && this.info.QuickTime.VideoFrameRate) {\n                                        this.fps = this.info.QuickTime.VideoFrameRate;\n                                    }\n\n                                    this.HLS = this.info.original.HLS || [];\n\n                                    if (this.HLS.length > 1) {\n                                        this.HLS.sort((a, b) => {\n                                            let result = 0;\n\n                                            if (a.width < b.width) {\n                                                result = -1;\n                                            } else if (a.width > b.width) {\n                                                result = 1;\n                                            } else if (a.height < b.height) {\n                                                result = -1;\n                                            } else if (a.height > b.height) {\n                                                result = 1;\n                                            }\n\n                                            return result;\n                                        });\n                                    }\n\n                                    this.infoSize = {\n                                        width: this.info.original.width,\n                                        height: this.info.original.height\n                                    };\n                                    resolve(this.infoSize);\n                                }\n                            }).catch((err) => {\n                                if (!this.destroyed) {\n                                    reject(err);\n                                }\n                            });\n                    });\n                });\n            }\n\n            return this.gettingInfoPromise;\n        }\n\n        getInfoSize() {\n            return new Promise((resolve, reject) => {\n                this.getInfo()\n                    .then(() => { resolve({ size: this.infoSize }); })\n                    .catch((err) => { reject({ error: err }); });\n            });\n        }\n\n        addSources() {\n            const nodeWithSirvClassName = globalFunctions.getNodeWithSirvClassName(this.instanceNode) || $J.D.node.head || $J.D.node.body;\n\n            Promise.all([\n                loadCSS($J.D.node.head || $J.D.node.body),\n                loadCSS(nodeWithSirvClassName),\n                loadVideoJS(),\n                loadQualitySelectorCSS(nodeWithSirvClassName),\n                loadQualitySelector()\n            ]).finally(() => {\n                this.areSourcesAdded = true;\n                if (this.isStarted) {\n                    if (this.isInView && (this.preload || this.isSlideShown)) {\n                        this.createVideoNode();\n                    }\n                }\n            });\n        }\n\n        onStartActions(who) {\n            if (this._isReady) {\n                if (this.player) {\n                    if (this.isInView) {\n                        if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED && this.always && this.option('controls.enable')) {\n                            this.player.controlBar.show();\n                            this.player.bigPlayButton.show();\n                        }\n\n                        if (this.option('autoplay') && this.player.paused() && (this.fullscreenState === globalVariables.FULLSCREEN.OPENED || !this.always)) {\n                            this.player.muted(true);\n\n                            if (this.isPlayed) {\n                                this.lastAction = ACTIONS.PLAY_BY_SWITCHING;\n                            } else if (who === globalVariables.SLIDE_SHOWN_BY.USER) {\n                                this.lastAction = ACTIONS.PLAY;\n                            }\n\n                            this.play();\n                        }\n                    }\n                }\n            } else if (this.isStarted) {\n                if (this.isInView && this.isSlideShown && !this.preload && this.areSourcesAdded) {\n                    this.createVideoNode();\n                }\n            }\n        }\n\n        onStopActions() {\n            if (this.player) {\n                if (!this.player.paused() && this.playingState === globalVariables.VIDEO.PLAYING) {\n                    this.lastAction = ACTIONS.PAUSE_BY_SWITCHING;\n                    this.pause();\n                }\n            }\n        }\n\n        onInView(value) {\n            if (value) {\n                if (this._isReady) {\n                    if (this.player) {\n                        if (this.isSlideShown && value) {\n                            if (this.option('autoplay') || this.playingState !== globalVariables.VIDEO.NONE && !this.isVideoPaused) {\n                                this.lastAction = ACTIONS.PLAY_SREEN_IN;\n                                this.play();\n                            }\n                        }\n                    }\n                } else if (this.isStarted) {\n                    if (!this.isInView && (this.preload || this.isSlideShown) && this.areSourcesAdded) {\n                        this.isInView = true;\n                        this.createVideoNode();\n                    }\n                }\n            } else if (this.player) {\n                this.isVideoPaused = this.playingState === globalVariables.VIDEO.PAUSE;\n                if (!this.player.paused() && this.playingState === globalVariables.VIDEO.PLAYING) {\n                    this.lastAction = ACTIONS.PAUSE;\n                    this.pause();\n                }\n            }\n        }\n\n        startFullInit(options) {\n            if (this.isStartedFullInit) { return; }\n            super.startFullInit(options);\n\n            this.normalizeOptions();\n\n            this.thumbnail = this.option('thumbnail');\n\n            this.getId('video-');\n\n            this.instanceNode.addClass('sirv-video');\n            this.instanceNode.addEvent('mousedown', (e) => { e.stop(); });\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        onBeforeFullscreenIn(data) {\n            this.controlsFullscreen = false;\n            if (this.player) {\n                this.isVideoPaused = this.playingState === globalVariables.VIDEO.PAUSE;\n                // if (!this.player.paused() && this.playingState === globalVariables.VIDEO.PLAYING) {\n                //     this.currentTime = this.player.currentTime();\n                //     this.pause();\n                // }\n\n                this.toggleFullscreenButton();\n            }\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        onAfterFullscreenIn(data) {\n            this.enableAction();\n\n            if (this.isSlideShown && this.isInView && this.player) {\n                if (this.player.paused()) {\n                    if (this.always) {\n                        if (this.option('controls.enable')) {\n                            this.player.controlBar.show();\n                            this.player.bigPlayButton.show();\n                        }\n                    }\n\n                    // if (this.option('autoplay') || this.playingState !== globalVariables.VIDEO.NONE && !this.isVideoPaused) {\n                    // if ((this.option('autoplay') || this.playingState !== globalVariables.VIDEO.NONE) && !this.isVideoPaused) {\n                    if (this.option('autoplay') && !this.isVideoPaused) {\n                        this.player.currentTime(this.currentTime);\n                        this.playingState = globalVariables.VIDEO.PLAY;\n\n                        // from v 7.2.3; The method 'play_' fix bug with chenching container\n                        this.player.play_();\n                    }\n                }\n            }\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        onBeforeFullscreenOut(data) {\n            this.disableAction();\n\n            if (this.option('controls.fullscreen')) {\n                this.controlsFullscreen = true;\n            }\n\n            if (this.player) {\n                this.isVideoPaused = this.playingState === globalVariables.VIDEO.PAUSE;\n                // if (!this.player.paused() && this.playingState === globalVariables.VIDEO.PLAYING) {\n                //     this.currentTime = this.player.currentTime();\n                //     this.pause();\n                // }\n\n                this.toggleFullscreenButton();\n            }\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        onAfterFullscreenOut(data) {\n            if (this.isSlideShown && this.isInView) {\n                if (this.player) {\n                    if (this.always && this.option('controls.enable')) {\n                        this.player.controlBar.hide();\n                        this.player.bigPlayButton.hide();\n                    }\n\n                    // if (this.option('autoplay') || this.playingState !== globalVariables.VIDEO.NONE && !this.isVideoPaused) {\n                    // if ((this.option('autoplay') || this.playingState !== globalVariables.VIDEO.NONE) && !this.isVideoPaused) {\n                    if (this.option('autoplay') && !this.isVideoPaused) {\n                        // this.player.currentTime(this.currentTime);\n                        this.lastAction = ACTIONS.PLAY;\n                        this.play();\n                    }\n                }\n            }\n        }\n\n        onSecondSelectorClick() {\n            if (this.player) {\n                if (this.isSlideShown && this.isInView) {\n                    if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED || !this.always) {\n                        if (this.player.paused()) {\n                            this.lastAction = ACTIONS.PLAY;\n                            this.play();\n                        } else if (this.playingState === globalVariables.VIDEO.PLAYING && this.isLoadeddata) {\n                            this.pause();\n                        }\n                    }\n                }\n            }\n        }\n\n        createVideoNode() {\n            if (!this.videoNode) {\n                this.videoNode = $J.$new('video', { 'class': P + '-sirv-video', preload: 'none' });\n                this.videoNode.addClass('video-js');\n\n                this.instanceNode.append(this.videoNode);\n                this.waitToStart.start();\n                this.done();\n            }\n        }\n\n        play() {\n            if (this.player && !this.playPromise) {\n                this.playingState = globalVariables.VIDEO.PLAY;\n                this.playPromise = this.player.play();\n            }\n        }\n\n        pause() {\n            if (this.player) {\n                // videojs play promise does not have 'finally' method for ie11\n                // we have launch videojs player without promise because we have bug with standard play method when we are changing videojs player's time\n                (this.playPromise || new Promise(resolve => resolve(null))).then(() => {\n                    this.player.pause();\n                    this.playPromise = null;\n                }).catch(() => {\n                    this.player.pause();\n                    this.playPromise = null;\n                });\n            }\n        }\n\n        loadContent() { this.createVideoNode(); }\n\n        run(isShown, preload, firstSlideAhead) {\n            const result = super.run(isShown, preload, firstSlideAhead);\n\n            if (result) {\n                this.calcContainerSize();\n\n                if (this.isInView && (this.preload || this.isSlideShown) && this.areSourcesAdded) {\n                    this.createVideoNode();\n                }\n\n                this.startGettingInfo();\n            }\n\n            return result;\n        }\n\n        createMasterManifest() {\n            const result = ['#EXTM3U'];\n            const mf = this.option('motionFactor');\n            const das = this.option('dynamicAdaptiveStreaming');\n\n            this.HLS.forEach((HLS) => {\n                let str = '#EXT-X-STREAM-INF:PROGRAM-ID=1,';\n\n                if (das) {\n                    str += ('BANDWIDTH=' + calcBandwidth(HLS, this.fps, mf) + ',');\n                }\n\n                str += ('RESOLUTION=' + HLS.width + 'x' + HLS.height);\n                result.push(str);\n                result.push(HOST + HLS.index);\n            });\n\n            return result.join('\\n');\n        }\n\n        toggleFullscreenButton() {\n            const ft = this.player.controlBar.getChild('FullscreenToggle');\n            const ua = this.player.options_.userActions;\n\n            if (this.controlsFullscreen) {\n                ua.doubleClick = true;\n                ft.show();\n            } else {\n                ua.doubleClick = false;\n                ft.hide();\n            }\n        }\n\n        isHLS() {\n            return this.HLS.length > 0 && $J.browser.uaName !== 'ie';\n        }\n\n        getThumbnailSize() {\n            const maxSize = this.isHLS() ? this.HLS[this.HLS.length - 1].height : this.info.height || this.info.original.height || 140;\n\n            let size = maxSize;\n\n            if (this.currentSize.height < size) {\n                size = this.currentSize.height;\n            }\n\n            size *= $J.DPPX;\n\n            if (size > maxSize) {\n                size = maxSize;\n            }\n\n            return size;\n        }\n\n        getPosterUrl() {\n            return this.getThumbnailPoster((this.url.split('?')[0]) + '?thumbnail=' + this.posterSize);\n        }\n\n        done() {\n            if (!this._isReady) {\n                this.posterSize = this.getThumbnailSize();\n                const posterImage = this.getPosterUrl();\n\n                // Position volume control verically, if it's enabled.\n                let volumeControl = { inline: false };\n                if (this.option('controls.volume') === false) {\n                    volumeControl = false;\n                }\n\n                const html5Options = {\n                    nativeTextTracks: false,\n                    nativeAudioTracks: false,\n                    nativeVideoTracks: false\n                };\n\n                const isHSL = this.isHLS();\n                const vhsOptions = {\n                    overrideNative: isHSL && $J.browser.uaName !== 'safari'\n                };\n\n                html5Options.smoothQualityChange = true;\n                html5Options.vhs = vhsOptions;\n\n                const videoOptions = {\n                    controls: this.option('controls.enable'),\n                    fluid: false,\n                    muted: this.option('volume') === 0 || this.option('autoplay'),\n                    loop: this.option('loop'),\n                    autoplay: this.option('autoplay') && this.isSlideShown,\n                    preload: this.option('autoplay') || this.option('preload') ? 'auto' : 'none',\n\n                    textTrackSettings: false,\n\n                    controlBar: {\n                        fullscreenToggle: true, // we will toggle it by itself\n                        volumePanel: volumeControl,\n                        muteToggle: false,\n\n                        children: [\n                            'playToggle',\n                            'currentTimeDisplay',\n                            'timeDivider',\n                            'durationDisplay',\n                            'progressControl',\n                            'liveDisplay',\n                            'remainingTimeDisplay',\n                            'volumePanel',\n                            'customControlSpacer',\n                            'playbackRateMenuButton',\n                            'chaptersButton',\n                            'descriptionsButton',\n                            'subsCapsButton',\n                            'audioTrackButton',\n                            'fullscreenToggle'\n                        ]\n                    },\n\n                    poster: posterImage,\n                    playsinline: true,\n\n                    html5: html5Options,\n\n                    userActions: {\n                        doubleClick: true\n                    },\n\n                    qualityLevels: {},\n                    // errorDisplay: false // it does not work\n                };\n\n                if (this.option('controls.quality')) {\n                    this.instanceNode.addClass(QUALITY_CONTROL);\n                } else if (this.option('controls.speed')) {\n                    this.instanceNode.addClass(SPEED_CONTROL);\n                }\n\n                if (this.option('controls.speed')) {\n                    videoOptions.playbackRates = PLAYBACK_RATES;\n                }\n\n                if (isHSL) {\n                    this.player = $J.W.node.videojs(this.videoNode.node, videoOptions);\n\n                    if ($J.browser.uaName !== 'safari') {\n                        this.player.src({\n                            src: 'data:application/x-mpegURL;base64,' + window.btoa(this.createMasterManifest()),\n                            type: 'application/x-mpegURL'\n                        });\n                    }\n\n                    this.player.hlsQualitySelectorAutoMode({\n                        visibility: this.option('controls.quality'),\n                        hls: this.HLS,\n                        host: HOST,\n                        max: this.option('quality.max'),\n                        min: this.option('quality.min')\n                    });\n\n                    this.pluginResizeDebounce = helper.debounce(() => { this.player.hlsQualitySelectorAutoMode.recalc(); }, 600);\n                } else {\n                    videoOptions.src = this.url;\n\n                    const vType = getVideoType(this.url);\n\n                    this.videoNode.append(\n                        $J.$new('source', {\n                            src: this.url,\n                            type: vType\n                        })\n                    );\n\n                    this.player = videojs(this.videoNode.node, videoOptions);\n                }\n\n                this.player.volume(parseInt(this.option('volume'), 10) / 100);\n                this.toggleFullscreenButton();\n\n                this.player.on('loadeddata', () => {\n                    this.isLoadeddata = true;\n                });\n\n                this.player.on('play', () => {\n                    this.isVideoPaused = false;\n                    // const isPaused = this.playingState !== globalVariables.VIDEO.NONE;\n                    this.playingState = globalVariables.VIDEO.PLAYING;\n                    if (!this.isSlideShown || !this.isInView) {\n                        this.lastAction = ACTIONS.PAUSE;\n                        this.pause();\n                    } else {\n                        let reason = 'user';\n                        if (this.lastAction === ACTIONS.PLAY_SREEN_IN) {\n                            reason = 'viewport';\n                        } else if (this.lastAction === ACTIONS.PLAY) {\n                            reason = 'autoplay';\n                        } else if (this.lastAction === ACTIONS.PLAY_BY_SWITCHING) {\n                            reason = 'itemchange';\n                        }\n                        this.lastAction = ACTIONS.NONE;\n\n                        if (this.isPlayed) {\n                            this.sendEvent('resume', {\n                                event: {\n                                    reason: reason,\n                                    playbackTime: this.player.currentTime()\n                                }\n                            });\n                        } else {\n                            this.isPlayed = true;\n                            this.sendEvent('play', { event: { reason: reason } });\n                        }\n                    }\n                });\n\n                this.player.on('pause', () => {\n                    if (this.player.currentTime() === this.player.duration()) { return; }\n                    this.playingState = globalVariables.VIDEO.PAUSE;\n\n                    let reason = 'user';\n                    if (this.lastAction === ACTIONS.PAUSE) {\n                        reason = 'viewport';\n                    } else if (this.lastAction === ACTIONS.PAUSE_BY_SWITCHING) {\n                        reason = 'itemchange';\n                    }\n                    this.lastAction = ACTIONS.NONE;\n\n                    this.sendEvent('pause', {\n                        event: {\n                            reason: reason,\n                            playbackTime: this.player.currentTime()\n                        }\n                    });\n                });\n\n                this.player.on('ended', () => {\n                    this.isPlayed = false;\n                    this.isEnded = true;\n                    this.playingState = globalVariables.VIDEO.PAUSE;\n                    this.sendEvent('end');\n                });\n\n                this.player.on('fullscreenchange', () => {\n                    let eventName = 'fullscreenOut';\n\n                    if (this.player.isFullscreen()) {\n                        eventName = 'fullscreenIn';\n                    }\n\n                    this.sendEvent(eventName, { event: { playbackTime: this.player.currentTime() } });\n                });\n\n                let videoSeekStart = null;\n                let previousTime = 0;\n                let currentTime = 0;\n\n                this.player.on('timeupdate', () => {\n                    previousTime = currentTime;\n                    currentTime = this.player.currentTime();\n                });\n\n                this.player.on('seeking', () => {\n                    if (videoSeekStart === null) {\n                        videoSeekStart = previousTime;\n                    }\n                });\n\n                this.player.on('seeked', () => {\n                    if (this.isEnded) {\n                        this.isEnded = false;\n                    } else {\n                        this.sendEvent('seek', {\n                            event: {\n                                seekStart: videoSeekStart,\n                                seekEnd: this.player.currentTime()\n                            }\n                        });\n                    }\n\n                    videoSeekStart = null;\n                });\n\n                this.player.on('error', (event) => {\n                    // eslint-disable-next-line no-console\n                    console.log('error', event);\n                });\n\n                if ($J.browser.touchScreen && $J.browser.mobile) {\n                    this.player.on('touchstart', (e) => {\n                        if ($J.$(e.target).getTagName() === 'video' && this.player.hasClass('vjs-user-active')) {\n                            if (this.player.paused()) {\n                                this.lastAction = ACTIONS.PLAY;\n                                this.play();\n                            } else {\n                                this.pause();\n                            }\n                        }\n                    });\n                }\n\n                this.player.on('ready', () => {\n                    // This hack disables fullscreen on double-click without visual glitch.\n                    // TODO: Use more proper way to disable fullscreen on double-click.\n                    if (!this.option('controls.fullscreen')) {\n                        this.player.off(this.player.tech_, 'dblclick', this.player.handleTechDoubleClick_);\n                    }\n\n                    if (this.option('controls.enable') && this.fullscreenState !== globalVariables.FULLSCREEN.OPENED && this.always) {\n                        this.player.controlBar.hide();\n                        this.player.bigPlayButton.hide();\n                    }\n\n                    if (this.isSlideShown && this.isInView && this.option('autoplay')) {\n                        if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED || !this.always) {\n                            this.player.muted(true);\n                            this.lastAction = ACTIONS.PLAY;\n                            this.play();\n                            this.player.muted(true);\n                        }\n                    }\n\n                    super.done();\n\n                    this.sendContentLoadedEvent();\n                });\n            }\n        }\n\n        getThumbnailPoster(basePoster) {\n            let result = basePoster;\n            if (!result) {\n                result = '';\n            }\n\n            if (this.thumbnail || this.thumbnail === 0) {\n                const prefix = '&video.thumbPos=';\n                const floatValueThumbnail = parseFloat(this.thumbnail);\n\n                if (!isNaN(floatValueThumbnail) && floatValueThumbnail < this.info.original.duration) {\n                    result += prefix + this.thumbnail;\n                // eslint-disable-next-line\n                } else if (/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/i.test(this.thumbnail)) {\n                    result = this.thumbnail;\n                }\n            }\n\n            return result;\n        }\n\n        calcContainerSize() {\n            const size = this.instanceNode.getSize();\n\n            if (!size.height || !size.width) {\n                const originSize = { width: 0, height: 0 };\n\n                originSize.width = this.info.original.width;\n                originSize.height = this.info.original.height;\n\n                if (!size.height) {\n                    this.currentSize.width = size.width;\n                    this.currentSize.height = originSize.height / originSize.width * size.width;\n                } else {\n                    this.currentSize.height = size.height;\n                    this.currentSize.width = originSize.width / originSize.height * size.height;\n                }\n            } else {\n                this.currentSize = size;\n            }\n        }\n\n        createPinchEvent() {\n            // difference between scale\n            const FS_OUT = -0.08;\n            const FS_IN = 0.11;\n\n            super.createPinchEvent(this.instanceNode);\n\n            this.pinchCloud.onPinchStart = (e) => {\n                if ($J.contains([globalVariables.FULLSCREEN.OPENING, globalVariables.FULLSCREEN.CLOSING], this.fullscreenState)) { return; }\n                this.pinchCloud.pinch = true;\n                this.pinchCloud.scale = e.scale;\n                this.sendEvent('pinchStart');\n            };\n\n            this.pinchCloud.onPinchMove = (e) => {\n                if (this.pinchCloud.pinch && !this.pinchCloud.block) {\n                    const s = e.scale - this.pinchCloud.scale;\n                    if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED) {\n                        if (s < FS_OUT) {\n                            this.pinchCloud.block = true;\n                            this.sendEvent('fullscreenOut');\n                        }\n                    } else if (e.scale >= FS_IN) {\n                        this.pinchCloud.block = true;\n                        this.sendEvent('fullscreenIn');\n                    }\n                }\n            };\n        }\n\n        onResize() {\n            if (this.player) {\n                if (!this.isSlideShown || !this.isInView) {\n                    if (!this.player.paused() && this.playingState === globalVariables.VIDEO.PLAYING) {\n                        this.pause();\n                    }\n                }\n\n                if (this.pluginResizeDebounce) {\n                    this.pluginResizeDebounce();\n                }\n\n                if (this.playingState === globalVariables.VIDEO.NONE) {\n                    this.calcContainerSize();\n                    const newSize = this.getThumbnailSize();\n                    if (newSize > this.posterSize && newSize - this.posterSize >= NEW_IMAGE_FACTOR) {\n                        this.posterSize = newSize;\n                        this.player.poster(this.getPosterUrl());\n                    }\n                }\n\n                return true;\n            }\n\n            return false;\n        }\n\n        getType() {\n            return this.type;\n        }\n\n        destroy() {\n            if (this.player) {\n                this.player.off();\n                this.player.dispose();\n                this.player = null;\n            }\n\n            if (this.videoNode) {\n                this.videoNode.remove();\n                this.videoNode = null;\n            }\n\n            if (this.pluginResizeDebounce) {\n                this.pluginResizeDebounce.cancel();\n                this.pluginResizeDebounce = null;\n            }\n\n            this.instanceNode.clearEvents();\n            this.instanceNode.removeClass('sirv-video');\n            this.instanceNode.removeClass(DISABLE_CLASS);\n            this.instanceNode.removeClass(QUALITY_CONTROL);\n            this.instanceNode.removeClass(SPEED_CONTROL);\n            this.playPromise = null;\n\n            this.HLS = [];\n\n            super.destroy();\n\n            return true;\n        }\n    }\n\n    return VideoInstance;\n})();\n\nreturn Video;\n\n    }\n);\n"],"file":"video.js"}