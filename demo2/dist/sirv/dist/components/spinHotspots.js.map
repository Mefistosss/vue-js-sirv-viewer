{"version":3,"sources":["../classes/spinHotspots.js"],"names":["Sirv","define","bHelpers","magicJS","globalFunctions","EventEmitter","Hotspots","helper","Promise","moduleName","$J","$","SpinHotspots","options","rows","columns","rowsRevers","columnsRevers","originImageSize","row","col","hotspotsSettings","setOptions","extend","getFrameIndex","result","createHotspotsSettings","dataSettings","firstFrame","index","l","map","Map","settings","objEach","frames","frame","pointerPositionPercentage","top","isPercentage","pointer","y","left","x","item","set","parseInt","push","length","createHotspots","hotspotsData","Array","isArray","hotspotSettings","getStartHotspotSettings","addHotspot","hotspotData","slice","updateAndShow","tempHotspotData","forEach","startSettings","browser","uaName","value","entries","next","setFramePosition","frameIndex","sett","get","hs","hotspots","isEnabled","setHotspotSettings","isHotspotShown","setPointerPosition","showNeededElements","isBoxAlwaysVisible","setBaseBoxSize","box","getSize","setBoxPosition","isTooltipAlwaysVisible","setTooltipPosition","show","hide","hideNeededElements","flag","activeHotspots","hideBox","hoveredHotspots","hideTooltip","changeHotspotsPosition","showAll","position","enable","setStateById","setState","removeHotspot","splice","destroy"],"mappings":"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","sourcesContent":["Sirv.define(\n    'SpinHotspots',\n    ['bHelpers','magicJS','globalFunctions','EventEmitter','Hotspots','helper','Promise!'],\n    (bHelpers,magicJS,globalFunctions,EventEmitter,Hotspots,helper,Promise) => {\n        const moduleName = 'SpinHotspots';\n        \n        const $J = magicJS;\n        const $ = $J.$;\n        \n        \n        /* eslint-env es6 */\n/* global Hotspots, helper*/\n/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-loop-func */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"SpinHotspots\" }] */\n\nclass SpinHotspots extends Hotspots {\n    constructor() {\n        super();\n\n        this.options = {\n            rows: 1,\n            columns: 36,\n            rowsRevers: false,\n            columnsRevers: false,\n            originImageSize: {}\n        };\n\n        this.row = null;\n        this.col = null;\n        this.hotspotsSettings = [];\n    }\n\n    setOptions(options) {\n        this.options = $J.extend(this.options, options || {});\n    }\n\n    getFrameIndex() {\n        let result;\n\n        if (this.options.rowsRevers && this.options.columnsRevers) {\n            result = (this.options.rows - this.row - 1) * this.options.columns + (this.options.columns - this.col);\n        } else if (this.options.rowsRevers) {\n            result = (this.options.rows - this.row - 1) * this.options.columns + this.col + 1;\n        } else if (this.options.columnsRevers) {\n            result = this.row * this.options.columns + (this.options.columns - this.col);\n        } else {\n            result = this.row * this.options.columns + this.col + 1;\n        }\n\n        return result;\n    }\n\n    createHotspotsSettings(dataSettings) {\n        let firstFrame = true;\n        for (let index = 0, l = dataSettings.length; index < l; index++) {\n            const map = new Map();\n            let settings = {};\n\n            helper.objEach(dataSettings[index].frames, (frame) => {\n                settings = dataSettings[index].frames[frame];\n                settings.pointerPositionPercentage = {\n                    top: helper.isPercentage('' + dataSettings[index].frames[frame].pointer.y),\n                    left: helper.isPercentage('' + dataSettings[index].frames[frame].pointer.x)\n                };\n\n                helper.objEach(dataSettings[index], (item) => {\n                    if (item !== 'frames') {\n                        if (!(item === 'data' && !firstFrame)) {\n                            settings[item] = dataSettings[index][item];\n                            firstFrame = false;\n                        }\n                    }\n                });\n\n                map.set(parseInt(frame, 10), settings);\n            });\n\n            this.hotspotsSettings.push(map);\n            firstFrame = true;\n        }\n    }\n\n    createHotspots(hotspotsData) {\n        if (!Array.isArray(hotspotsData)) {\n            hotspotsData = [hotspotsData];\n        }\n\n        this.createHotspotsSettings(hotspotsData);\n        const hotspotSettings = this.getStartHotspotSettings();\n        super.createHotspots(hotspotSettings);\n    }\n\n    addHotspot(hotspotData) {\n        if (!Array.isArray(hotspotData)) {\n            hotspotData = [hotspotData];\n        }\n\n        this.createHotspotsSettings(hotspotData);\n        const hotspotSettings = this.getStartHotspotSettings();\n\n        super.createHotspots(hotspotSettings.slice(hotspotSettings.length - hotspotData.length));\n\n        this.updateAndShow();\n    }\n\n    getStartHotspotSettings() {\n        const tempHotspotData = [];\n\n        this.hotspotsSettings.forEach((map) => {\n            let startSettings = null;\n\n            if ($J.browser.uaName === 'ie') {\n                map.forEach((value) => {\n                    if (!startSettings) {\n                        startSettings = value;\n                    }\n                });\n            } else if (map.entries().next().value) {\n                startSettings = map.entries().next().value[1];\n            }\n\n            if (startSettings) {\n                tempHotspotData.push(startSettings);\n            }\n        });\n\n        return tempHotspotData;\n    }\n\n    setFramePosition(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n\n    updateAndShow() {\n        const frameIndex = this.getFrameIndex();\n        this.hotspotsSettings.forEach((hotspotSettings, index) => {\n            const sett = hotspotSettings.get(frameIndex);\n            const hs = this.hotspots[index];\n\n            if (sett && hs.isEnabled()) {\n                hs.setHotspotSettings(sett);\n\n                if (hs.isHotspotShown()) {\n                    hs.setPointerPosition();\n\n                    this.showNeededElements();\n\n                    if (hs.isBoxAlwaysVisible()) {\n                        hs.setBaseBoxSize(hs.box.getSize());\n                        hs.setBoxPosition();\n                    }\n\n                    if (hs.isTooltipAlwaysVisible()) {\n                        hs.setTooltipPosition();\n                    }\n                } else {\n                    this.show(index);\n                }\n            } else {\n                this.hide(index);\n            }\n        });\n    }\n\n    hideNeededElements(flag) {\n        this.activeHotspots.forEach((hs) => {\n            if (!hs.isBoxAlwaysVisible()) {\n                hs.hideBox(flag);\n            }\n        });\n\n        this.hoveredHotspots.forEach((hs) => {\n            if (hs.isTooltipAlwaysVisible()) {\n                hs.hideTooltip(flag);\n            }\n        });\n    }\n\n    changeHotspotsPosition(row, col) {\n        if (this.row !== row || this.col !== col) {\n            this.setFramePosition(row, col);\n            this.updateAndShow();\n        }\n    }\n\n    showAll() {\n        const position = this.getFrameIndex();\n        this.hotspotsSettings.forEach((map, index) => {\n            if (map.get(position)) {\n                this.show(index);\n            }\n        });\n    }\n\n    enable(index) {\n        if (this.hotspotsSettings[index]) {\n            const hs = this.hotspots[index];\n            hs.enable();\n            if (this.hotspotsSettings[index].get(this.getFrameIndex())) {\n                hs.show();\n            }\n        }\n    }\n\n    setStateById(index, settings) {\n        if (this.hotspots[index]) {\n            this.hotspots[index].setState(settings, !this.hotspotsSettings[index].get(this.getFrameIndex()));\n        }\n    }\n\n    removeHotspot(index) {\n        if (this.hotspots[index]) {\n            this.hotspotsSettings.splice(index, 1);\n            super.removeHotspot(index);\n        }\n    }\n\n    destroy() {\n        super.destroy();\n        this.options = null;\n        this.row = null;\n        this.col = null;\n        this.hotspotsSettings = null;\n    }\n}\n\nreturn SpinHotspots;\n\n    }\n);\n"],"file":"spinHotspots.js"}