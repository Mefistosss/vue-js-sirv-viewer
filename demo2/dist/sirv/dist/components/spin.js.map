{"version":3,"sources":["../spin/spin.js"],"names":["Sirv","define","bHelpers","magicJS","globalVariables","globalFunctions","helper","Promise","EventEmitter","Zoominstance","ResponsiveImage","Hint","ProgressLoader","SpinHotspots","moduleName","$J","$","rootDOM","addModuleCSSByName","defaultOptions","swapSides","type","defaults","wheel","initialize","freeDrag","tappingFirst","thumbnail","gifParams","zoom","enable","ratio","oneOf","minimum","tiles","pan","inactivity","autospin","resume","duration","hint","message","text","onStart","effect","onVisible","onInactive","row","start","loop","increment","reverse","sensitivity","column","mobileDefaults","SpinResponsiveImage","source","o","col","_createImageData","img","callbackData","data","getThumbnail","imageSettings","INTRO_QUEUE","CUBICBEZIER","DEFAULTDURATION","isNull","v","getBresenhamsLine","point1","point2","result","x","y","plotLineLow","x0","y0","x1","y1","dx","dy","yi","D","push","plotLineHigh","xi","Math","abs","getLineSegment","from","to","forward","length","arr","currentIndex","getArrayIndex","getQueue","sides","side","forEach","s","getLoopSegment","startIndex","count","getEndIndex","value","tmp","endIndex","dir","concat","getLine","axelerate","max","l","getCount","round","FX","cubicBezierAtTime","point","index","getOptions","options","opt","deepExtend","degree","isBackward","justFirstLine","current","jumpCount","firstSide","secondSide","api","lib","getRightIndex","twitch","otherSide","floor","sphere","intro","copiedOpt","full","firstSideOpt","secondSideOpt","item","circleOption","custom","convert","points","r","i","map","LOADING_QUEUE","_insideLib","getStep","getIndexes","flag","step","ceil","createArray","images","line","getRightIdexes","startPos","callback","indexOfLine","rightIndex","schemaOfImages","rowLength","colLength","startRow","all","schema","j","len","getSideOpt","startCol","otherLength","otherStart","_","indexesOfCols","fastLine","sideOpt","_i","indexes","otherIndexes","ImagesMap","getPointsString","checkIndex","getRoot","url","split","join","getImageUrl","absoluteURL","baseURL","imageUrl","test","ImagesMap_","startColumn","currentColumn","currentRow","nextColumn","nextRow","futureColumn","futureRow","imgMap","isAvailableOfLoading","isStartedFullInit","imageInfoPromise","loadingMap","queue","spinLib","getUrl","infoImg","imageInfoId","generateUUID","setEvents","createImageInfo","getItemFromObject","key1","hashKeys","layers","key2","normalizeURL","infoId","referrerPolicy","setParent","loadImageInfo","resolve","reject","getImageInfo","then","info","createQueue","size","getOriginSize","catch","err","error","startFullInit","extend","checkLayers","swapLayers","objEach","key","rows","rowIndex","rowIncrement","_key","frame","frameIndex","columnIncrement","reverseColumn","reverseRow","createImages","setFirstImage","setImageSettings","scale","option","srcset","quality","src","dppx","hdQuality","getImage","val1","val2","defined","imageOptions","getMap","arr2","firstIsLoaded","partIsLoaded","allIsLoaded","allCheck","lens","emit","checkOfFirstPartImagesLoading","checkOtherImagesLoading","on","e","stopAll","_data","isCurrent","console","log","getHintType","getCountOfRows","c","getCountOfFrames","isLoaded","isExist","position","getCountOfImages","pixelPerFrame","width","min","cols","loopColumn","pow","columnSpeed","pixelPerRow","height","loopRow","rowSpeed","_arr","adjustURL","sr","sc","loadImage","loadFirstImage","shift","loadFirstPartOfImages","loadOtherImages","loadImages","cc","sendLoad","isImagesExist","name","loadingSchema","firstPartOfImages","areLoaded","indexOf","otherImages","prepareFutureImage","direction","contains","setPreparedNextImage","setPreparedFutureImage","isReady","resetPreparedImage","getCurrentImage","getOriginImageUrl","jump","axis","checkImg","res","getNextIndex","setNextAnimationFrame","imagesBuffer","getNextBufferIndex","fromIndex","check","createAnimation","typeOfBuffer","jfl","a","clearFramesQueue","cancelLoadingImage","getStartRow","getStartColumn","getCurrentRow","getCurrentColumn","getImagesBuffer","destroy","last","off","SPIN_CONF_VER","P","smv","CSS_CLASS_NAME","BRAND_LANDING","ActivatedCurtain","parentNode","activeNode","activatedCurtain","$new","addClass","setCss","top","left","state","show","setCssProp","hide","removeClass","activateCurtain","append","deactivateCurtain","remove","addTapEvents","addEvent","action","addPinchEvent","handler","removePinchEvent","removeEvent","checkProps","obj","common","mobile","local","fnStopTouchMove","stopDefaults","Spin","node","SLIDE","TYPES","SPIN","canvas","canvasContainer","coreNode","instanceNode","ctx","isSmoothing","smooseTimeout","minSizeOfFrame","minSizeOfRow","isDragMove","longTapTimer","imagesMap","isInited","loader","openedImg","cssId","boxBoundaries","hotspots","animationFX","loadedImages","currentSize","currentImageSize","standardSize","lastImg","startLoadingTime","isOver","isSpinActivated","browser","canvasPromise","firstImageLoaded","firstPartOfImagesLoaded","isInfoLoaded","customActionWas","isAutoplayPaused","reflectDirection","configURL","attr","imageBaseURL","replace","configHash","getHashCode","configPath","imageInfoCallbackName","sessionId","location","href","now","hotspotsData","fullscreenStartTime","meta","isFullscreen","nativeFullscreen","infoSettings","autospinResumeTimer","isHidden","sessionStartTime","animationCloud","touchDragCloud","slideDragEventStart","startTimeForZommEvent","resizeAnimationTimer","debounce","animate","keyPressHandlerForShiftButton","firstUserInteraction","userColumn","userRow","placeholder","querySelector","replaceTextParamURLFromMetadata","trackUnload","sendStats","disableScrollOnMobile","docFullSize","getFullSize","placeholderSize","getSize","resizeWindowTimer","windowResizeCallback","clearTimeout","setTimeout","isInitialized","bind","play","pause","rotate","rotateXY","rotateX","rotateY","jumpRows","jumpCols","currentFrame","createHotspotsClass","getInfo","createMap","isHDQualitySet","_isReady","isZoomed","frames","jumpTo","getCurrentFrame","isActive","makeGlobalOptions","optionsInstance","fromJSON","set","fromString","makeOptions","time","additionalData","useBeacon","account","config","event","eventTime","origin","gettingInfoPromise","waitGettingInfo","wait","cfCallbackName","stringHas","getRemoteData","destroyed","_file","settings","main","accountInfo","branded","W","contentType","_isplaceholder","isPlaceholder","status","m","p1","t","getDPPX","roundImageSize","infoSize","upscale","showHint","always","FULLSCREEN","OPENING","OPENED","fullscreenState","onStartActions","isStarted","initNameEvent","isInView","onStopActions","zoomOut","stopSmoothing","stopAnimation","deactivateSpin","setUserFrame","onInView","preload","isSlideShown","normalizeOptions","getId","stop","isSingle","setOptions","columnsRevers","rowsRevers","columns","initAnimation","touchScreen","getThumbnailData","getSocialButtonData","isSpin","turnOnOff","activateSpin","hideActiveHotspotBox","isHotspotActivated","createPinchEvent","OPEN_ZOOM","FS_OUT","FS_IN","saveValue","baseMin","compensation","maxCompensation","minCompensation","basePercent","setDefaultsValues","getBaseScale","pinchCloud","onPinchStart","CLOSING","pinch","U","sendEvent","onPinchResize","block","setBasePercent","centerPoint","onPinchMove","isFullscreenEnabled","openLens","setScale","onPinchEnd","onStopContext","onSecondSelectorClick","setGlobalEvents","pos","isFullscreenActionEnded","param","setDefaultZoomOptions","MIN_RATIO","defaultZoomOptions","trigger","isThumbnailGif","init","initFnEvent","run","isShown","firstSlideAhead","initCanvas","startGettingInfo","getContext","alt","getRightAlt","w","h","addCSS","id","calcProportionSize","setImageSize","zIndex","setCanvasSize","loadContent","draw","waitToStart","description","dataAlt","progress","setCanvas","finally","setFramePosition","updateAndShow","showNeededElements","calcMinSizeForDrag","done","sendContentLoadedEvent","isShowing","setImage","getProgressState","originSize","setOriginImageSize","getSelectorImgUrl","defOpt","originUrl","image","paramsFromQueryString","getInfoSize","onHotspotActivate","onHotspotDeactivate","animateWithDelay","createHint","hintMessage","horizontal","vertical","hintClass","hintOptions","html","additionalClass","autohide","getImageClassContainer","createZoom","zoomContainer","setLensContainer","onZoomGetImage","checkImage","dontLoad","onZoomCancelLoadingOfTiles","onZoomBeforeShow","zoomClassName","hideAll","onZoomShown","clientX","clientPosition","clientY","pageX","pagePosition","pageY","onZoomHidden","showAll","setLongTapEvents","pe","navigator","pointerEnabled","move","touchDown","p","getPageXY","customMove","getZoomSize","originWidth","originHeight","longTap","toLevel","isZoomSizeExist","zoomSize","lensImgWidth","lensImgHeight","serverWidth","serverHeight","undefined","showCenter","setMaxOpacity","setBrowserEvents","setZoomEvents","getRect","nodeWithSirvClassName","getNodeWithSirvClassName","head","body","showSirvAd","viewerSize","CSS_CURSOR_ZOOM_IN","getHotspots","setInstanceComponentNode","setContainerSize","getBoundingClientRect","setDrag","setMouseWheel","_resolve","canvasOpacityHandler","_timer","makeQueryblePromise","resolve1","propertyName","clearCanvas","clearRect","neededSize","imageData","maxSize","imageSmoothingQuality","changeHotspotsPosition","drawImage","smoothing","distance","speed","animateAction","multi","sphereValues","minSize","onAnyDrag","lastPoint","lastPartOfDistance","canMoveAxis","lastTime","fns","otherAxis","next","prev","up","down","startTime","rotateDebounce","G","COEFFICIENT_OF_FRICTION","FRICTION_FORCE","DIRECTIONS","onDrag","addPoint","_axis","_speed","_distance","_direction","getPoints","getCountOfItems","frictionForce","weight","sizeOfItem","getTime","getDirection","dragstart","hideNeededElements","timeStamp","dragend","values","countOfItems","timeOfAnimation","timeOfAnimation2","animationValues","cancel","Date","items","animateTo","setFrame","currentAxis","dragmove","directions","currentDistance","absCurrentDistance","currentSpeed","cloud","eventAdded","dirs","startObj","transition","getTransition","inCubic","onBeforeRender","ds","onComplete","delta","correction","spinOnWheel","wheelStep","wheelDebounce","isMouse","_shiftButtonIsPressed","oe","keyCode","shiftButtonIsPressed","isX","deltaY","deltaX","parseInt","autoplayDuration","autoplayType","fromAPI","isAutospin","isMoving","isPaused","hintTimer","delay","nameOfEvent","infinite","userInteraction","getMovingTime","isStopped","timer","delayTimer","framesLength","clear","end","getSpeed","typeOfAnimation","_options","cb","_move","onBeforeFullscreenIn","opacity","visibility","onAfterFullscreenIn","isPending","screenSize","onBeforeFullscreenOut","onAfterFullscreenOut","instanceOptions","checkValue","countOfCols","countOfRows","normalizeValue","typeOf","isNaN","trim","zoomIn","setCallback","fn","minZoomFactor","cs","getOrientation","getType","onResize","getContainerForBoundengClientRect","del","removeCSS"],"mappings":"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","sourcesContent":["Sirv.define(\n    'Spin',\n    ['bHelpers','magicJS','globalVariables','globalFunctions','helper','Promise!','EventEmitter','Zoominstance','ResponsiveImage','Hint','ProgressLoader','SpinHotspots'],\n    (bHelpers,magicJS,globalVariables,globalFunctions,helper,Promise,EventEmitter,Zoominstance,ResponsiveImage,Hint,ProgressLoader,SpinHotspots) => {\n        const moduleName = 'Spin';\n        \n        const $J = magicJS;\n        const $ = $J.$;\n        \n        \n        /* start-removable-module-css */\n        globalFunctions.rootDOM.addModuleCSSByName(moduleName, () => {\n            return '.sirv-spin{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important;display:inline-block;position:relative;width:100%;max-width:100%;height:100%;padding:0!important;transform:translate3d(0,0,0);outline:0;outline:0!important;color:#000;font-size:0!important;line-height:100%!important;text-decoration:none;overflow:hidden;vertical-align:middle;visibility:visible;-webkit-backface-visibility:hidden;backface-visibility:hidden;user-select:none;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none!important}.sirv-spin::before{display:inline-block;height:0;content:\\'\\';vertical-align:top}.sirv-spin .spin-canvas-container{position:absolute}.sirv-spin .spin-canvas-container,.sirv-spin canvas{top:0;right:0;bottom:0;left:0;margin:auto}.sirv-spin canvas{transition:opacity 1s linear,filter 2s linear;opacity:0;z-index:1}.sirv-spin canvas.smv-shown{opacity:1!important}.sirv-spin canvas.smv-zoomed-in{visibility:hidden!important}.sirv-spin-message{display:block;position:absolute;top:50%;left:33%;width:33%;padding:6px;border:1px solid #aaa;border-radius:15px;background-color:#fff;background-image:none;color:#000;font-size:10px;text-align:center;border-collapse:separate;box-shadow:0 0 10px #000;overflow:hidden;z-index:100}.sirv-hint .spin-hint-animation{display:none;position:relative;width:40px;height:40px;margin-right:10px;transform-style:preserve-3d;vertical-align:middle;perspective:200px}.sirv-hint .sirv-hint-message .spin-hint-animation::before{display:inline-block;position:absolute;top:0;right:0;bottom:0;left:0;width:40%;height:30%;margin:auto;transform-origin:50% 50% -15px;border:1px solid #fff;box-shadow:inset 0 0 1px 1px rgba(255,255,255,.5);content:\\'\\';box-sizing:border-box}.sirv-hint.spin-hint-horizontal-animation .sirv-hint-message .spin-hint-animation::before{transform:translateZ(0) rotateY(0);-webkit-animation:sirv-spin-hint-horizontal-rotate 3s infinite linear;animation:sirv-spin-hint-horizontal-rotate 3s infinite linear}@-webkit-keyframes sirv-spin-hint-horizontal-rotate{0%{transform:translateZ(0) rotateY(0)}5%{transform:translateZ(100px) rotateY(0)}7%{transform:translateZ(75px) rotateY(0)}20%{transform:translateZ(75px) rotateY(0)}30%{transform:translateZ(75px) rotateY(45deg)}40%{transform:translateZ(75px) rotateY(0)}50%{transform:translateZ(75px) rotateY(-45deg)}60%{transform:translateZ(75px) rotateY(0)}63%{transform:translateZ(75px) rotateY(0)}68%{transform:translateZ(-25px) rotateY(0)}70%{transform:translateZ(0) rotateY(0)}80%{transform:translateZ(0) rotateY(0)}100%{transform:translateZ(0) rotateY(0)}}@keyframes sirv-spin-hint-horizontal-rotate{0%{transform:translateZ(0) rotateY(0)}5%{transform:translateZ(100px) rotateY(0)}7%{transform:translateZ(75px) rotateY(0)}20%{transform:translateZ(75px) rotateY(0)}30%{transform:translateZ(75px) rotateY(45deg)}40%{transform:translateZ(75px) rotateY(0)}50%{transform:translateZ(75px) rotateY(-45deg)}60%{transform:translateZ(75px) rotateY(0)}63%{transform:translateZ(75px) rotateY(0)}68%{transform:translateZ(-25px) rotateY(0)}70%{transform:translateZ(0) rotateY(0)}80%{transform:translateZ(0) rotateY(0)}100%{transform:translateZ(0) rotateY(0)}}.sirv-hint.spin-hint-vertical-animation .spin-hint-message .spin-hint-animation::before{transform:translateZ(0) rotateX(0);-webkit-animation:sirv-spin-hint-vertical-rotate 3s infinite linear;animation:sirv-spin-hint-vertical-rotate 3s infinite linear}@-webkit-keyframes sirv-spin-hint-vertical-rotate{0%{transform:translateZ(0) rotateX(0)}5%{transform:translateZ(100px) rotateX(0)}7%{transform:translateZ(75px) rotateX(0)}20%{transform:translateZ(75px) rotateX(0)}30%{transform:translateZ(75px) rotateX(45deg)}40%{transform:translateZ(75px) rotateX(0)}50%{transform:translateZ(75px) rotateX(-45deg)}60%{transform:translateZ(75px) rotateX(0)}63%{transform:translateZ(75px) rotateX(0)}68%{transform:translateZ(-25px) rotateX(0)}70%{transform:translateZ(0) rotateX(0)}80%{transform:translateZ(0) rotateX(0)}100%{transform:translateZ(0) rotateX(0)}}@keyframes sirv-spin-hint-vertical-rotate{0%{transform:translateZ(0) rotateX(0)}5%{transform:translateZ(100px) rotateX(0)}7%{transform:translateZ(75px) rotateX(0)}20%{transform:translateZ(75px) rotateX(0)}30%{transform:translateZ(75px) rotateX(45deg)}40%{transform:translateZ(75px) rotateX(0)}50%{transform:translateZ(75px) rotateX(-45deg)}60%{transform:translateZ(75px) rotateX(0)}63%{transform:translateZ(75px) rotateX(0)}68%{transform:translateZ(-25px) rotateX(0)}70%{transform:translateZ(0) rotateX(0)}80%{transform:translateZ(0) rotateX(0)}100%{transform:translateZ(0) rotateX(0)}}.sirv-hint.spin-hint-horizontal-animation.spin-hint-vertical-animation .sirv-hint-message .spin-hint-animation::before{transform:translateZ(0) rotateX(0) rotateY(0);-webkit-animation:sirv-spin-hint-double-rotate 5s infinite linear;animation:sirv-spin-hint-double-rotate 5s infinite linear}@-webkit-keyframes sirv-spin-hint-double-rotate{0%{transform:translateZ(0) rotateX(0) rotateY(0)}4%{transform:translateZ(100px) rotateX(0) rotateY(0)}5%{transform:translateZ(75px) rotateX(0) rotateY(0)}10%{transform:translateZ(75px) rotateX(0) rotateY(0)}19%{transform:translateZ(75px) rotateX(0) rotateY(45deg)}28%{transform:translateZ(75px) rotateX(0) rotateY(0)}37%{transform:translateZ(75px) rotateX(0) rotateY(-45deg)}45%{transform:translateZ(75px) rotateX(0) rotateY(0)}54%{transform:translateZ(75px) rotateX(45deg) rotateY(0)}63%{transform:translateZ(75px) rotateX(0) rotateY(0)}72%{transform:translateZ(75px) rotateX(-45deg) rotateY(0)}81%{transform:translateZ(75px) rotateX(0) rotateY(0)}85%{transform:translateZ(-25px) rotateX(0) rotateY(0)}86%{transform:translateZ(0) rotateX(0) rotateY(0)}90%{transform:translateZ(0) rotateX(0) rotateY(0)}100%{transform:translateZ(0) rotateX(0) rotateY(0)}}@keyframes sirv-spin-hint-double-rotate{0%{transform:translateZ(0) rotateX(0) rotateY(0)}4%{transform:translateZ(100px) rotateX(0) rotateY(0)}5%{transform:translateZ(75px) rotateX(0) rotateY(0)}10%{transform:translateZ(75px) rotateX(0) rotateY(0)}19%{transform:translateZ(75px) rotateX(0) rotateY(45deg)}28%{transform:translateZ(75px) rotateX(0) rotateY(0)}37%{transform:translateZ(75px) rotateX(0) rotateY(-45deg)}45%{transform:translateZ(75px) rotateX(0) rotateY(0)}54%{transform:translateZ(75px) rotateX(45deg) rotateY(0)}63%{transform:translateZ(75px) rotateX(0) rotateY(0)}72%{transform:translateZ(75px) rotateX(-45deg) rotateY(0)}81%{transform:translateZ(75px) rotateX(0) rotateY(0)}85%{transform:translateZ(-25px) rotateX(0) rotateY(0)}86%{transform:translateZ(0) rotateX(0) rotateY(0)}90%{transform:translateZ(0) rotateX(0) rotateY(0)}100%{transform:translateZ(0) rotateX(0) rotateY(0)}}.smv-progress-loader{bottom:0;left:0;margin-bottom:5px;margin-left:5px}';\n        });\n        /* end-removable-module-css */\n        \n        /* eslint-env es6 */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-extra-semi */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n\n\nconst defaultOptions = {\n    // Swap rows and columns, i.e. \"2 rows x 36 columns\" spin behaves like \"36 rows x 2 columns\".\n    swapSides: { type: 'boolean', defaults: false },\n    wheel: { type: 'boolean', defaults: true },\n    initialize: { type: 'string', 'enum': ['load', 'hover', 'click', 'tap'], defaults: 'load' },\n    freeDrag: { type: 'boolean', defaults: false },\n    tappingFirst: { type: 'boolean', defaults: false },\n\n    thumbnail: {\n        // thumbnail.type\n        type: { type: 'string', 'enum': ['image', 'gif'], defaults: 'image' },\n        // thumbnail.gifParams\n        gifParams: { type: 'string', defaults: '' }\n    },\n\n    zoom: {\n        // zoom.enable\n        enable: { type: 'boolean', defaults: true },\n        // zoom.ratio\n        ratio: {\n            oneOf: [\n                { type: 'number', minimum: 0 },\n                { type: 'string', 'enum': ['max'] }\n            ],\n\n            defaults: 2.5\n        },\n        // zoom.tiles\n        tiles: { type: 'boolean', defaults: true },\n        // zoom.pan\n        pan: { type: 'boolean', defaults: true }\n    },\n\n    inactivity: { type: 'number', minimum: 1000, defaults: 3000 },\n\n    autospin: {\n        // autospin.enable\n        enable: { type: 'boolean', defaults: false },\n        // autospin.type\n        type: { type: 'string', 'enum': ['row', 'sphere', 'full', 'helix'], defaults: 'sphere' },\n        // autospin.resume\n        resume: { type: 'number', minimum: 0, defaults: 3000 },\n        // autospin.duration\n        duration: { type: 'number', minimum: 0, defaults: 3600 }\n    },\n\n    hint: {\n        message: {\n            // hint.message.enable\n            enable: { type: 'boolean', defaults: true },\n            // hint.message.text\n            text: { type: 'string', defaults: 'Drag to spin' }\n        },\n\n        onStart: {\n            // hint.onStart.enable\n            enable: { type: 'boolean', defaults: true },\n            // hint.onStart.effect\n            effect: {\n                oneOf: [\n                    { type: 'string', 'enum': ['intro', 'twitch', 'spin', 'momentum', 'sphere', 'none'] },\n                    { type: 'boolean', 'enum': [false] }\n                ],\n                defaults: 'intro'\n            }\n        },\n\n        onVisible: {\n            // hint.onVisible.enable\n            enable: { type: 'boolean', defaults: true },\n            // hint.onVisible.effect\n            effect: {\n                oneOf: [\n                    { type: 'string', 'enum': ['intro', 'twitch', 'spin', 'momentum', 'sphere', 'none'] },\n                    { type: 'boolean', 'enum': [false] }\n                ],\n                defaults: 'twitch'\n            }\n        },\n\n        onInactive: {\n            // hint.onInactive.enable\n            enable: { type: 'boolean', defaults: true },\n            // hint.onInactive.effect\n            effect: {\n                oneOf: [\n                    { type: 'string', 'enum': ['intro', 'twitch', 'spin', 'momentum', 'sphere', 'none'] },\n                    { type: 'boolean', 'enum': [false] }\n                ],\n                defaults: 'twitch'\n            }\n        }\n    },\n\n    row: {\n        // Row/Column from which to start spin. 'auto' means to fetch these from the image filename (img.src)\n        // row.start\n        start: { type: 'number', minimum: 1, defaults: 1 },\n        // should the spin loop rows (y)\n        // row.loop\n        loop: { type: 'boolean', defaults: false },\n        // whether photos are taken in the reverse order\n        // row.increment\n        increment: { type: 'number', minimum: 1, defaults: 1 },\n        // whether photos are taken in the reverse order\n        // row.reverse\n        reverse: { type: 'boolean', defaults: false },\n        //row.sensitivity\n        sensitivity: { type: 'number', 'minimum': 1, 'maximum': 100, defaults: 50 }, // speed of spin (1 - 100)\n    },\n\n    column: {\n        // Row/Column from which to start spin. 'auto' means to fetch these from the image filename (img.src)\n        // col.start\n        start: { type: 'number', minimum: 1, defaults: 1 },\n        // should the spin loop columns in row (x)\n        // col.loop\n        loop: { type: 'boolean', defaults: true },\n        // whether photos are taken in the reverse order\n        // col.increment\n        increment: { type: 'number', minimum: 1, defaults: 1 },\n        // whether photos are taken in the reverse order\n        // col.reverse\n        reverse: { type: 'boolean', defaults: false },\n        //column.sensitivity\n        sensitivity: { type: 'number', 'minimum': 1, 'maximum': 100, defaults: 50 }, // speed of spin (1 - 100)\n    }\n};\n\nconst mobileDefaults = {\n    // hint: {\n    //     message: {\n    //         text: { type: 'string', defaults: 'Tap to spin' }\n    //     }\n    // }\n};\n\n/* eslint-env es6 */\n/* global ResponsiveImage */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"SpinResponsiveImage\" }] */\n\n\nclass SpinResponsiveImage extends ResponsiveImage {\n    constructor(source, o, col, row) {\n        super(source, o);\n        this.col = col;\n        this.row = row;\n    }\n\n    _createImageData(img, callbackData) {\n        const data = super._createImageData(img, callbackData);\n\n        data.col = this.col;\n        data.row = this.row;\n\n        return data;\n    }\n\n    getThumbnail(imageSettings) {\n        const data = super.getThumbnail(imageSettings);\n\n        data.col = this.col;\n        data.row = this.row;\n\n        return data;\n    }\n}\n\n/* eslint-env es6 */\n/* global helper */\n/* eslint operator-assignment: 0 */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"INTRO_QUEUE\" }] */\n\n\nconst INTRO_QUEUE = (() => {\n    const CUBICBEZIER = $([0.45, 0.19, 0.56, 0.86]);\n    const DEFAULTDURATION = 600;\n\n    const isNull = (v) => { return v === null; };\n\n    const getBresenhamsLine = (point1, point2) => {\n        const result = { x:[], y: [] };\n\n        const plotLineLow = (x0, y0, x1, y1) => {\n            const dx = x1 - x0;\n            let dy = y1 - y0;\n            let yi = 1;\n            let x, y = y0;\n            let D;\n\n            if (dy < 0) {\n                yi = -1;\n                dy = -dy;\n            }\n\n            D = 2 * dy - dx;\n\n            for (x = x0; x <= x1; x++) {\n                result.x.push(x);\n                result.y.push(y);\n\n                if (D > 0) {\n                    y = y + yi;\n                    D = D - 2 * dx;\n                }\n\n                D = D + 2 * dy;\n            }\n        };\n\n        const plotLineHigh = (x0, y0, x1, y1) => {\n            let dx = x1 - x0;\n            const dy = y1 - y0;\n            let xi = 1;\n            let y;\n            let x = x0;\n            let D;\n\n            if (dx < 0) {\n                xi = -1;\n                dx = -dx;\n            }\n\n            D = 2 * dx - dy;\n            x = x0;\n\n            for (y = y0; y <= y1; y++) {\n                result.x.push(x);\n                result.y.push(y);\n\n                if (D > 0) {\n                    x = x + xi;\n                    D = D - 2 * dy;\n                }\n\n                D = D + 2 * dx;\n            }\n        };\n\n        if (Math.abs(point2.y - point1.y) < Math.abs(point2.x - point1.x)) {\n            if (point1.x > point2.x) {\n                plotLineLow(point2.x, point2.y, point1.x, point1.y);\n            } else {\n                plotLineLow(point1.x, point1.y, point2.x, point2.y);\n            }\n        } else if (point1.y > point2.y) {\n            plotLineHigh(point2.x, point2.y, point1.x, point1.y);\n        } else {\n            plotLineHigh(point1.x, point1.y, point2.x, point2.y);\n        }\n\n        return result;\n    };\n\n    const getLineSegment = (from, to, forward, length, loop) => {\n        const arr = [];\n        let start = false;\n        let currentIndex = from;\n\n        while (currentIndex !== to || !start && loop) {\n            start = true;\n            if (forward) {\n                currentIndex += 1;\n            } else {\n                currentIndex -= 1;\n            }\n\n            currentIndex = helper.getArrayIndex(currentIndex, length);\n            arr.push(currentIndex);\n        }\n\n        return arr;\n    };\n\n    const getQueue = (source, sides) => {\n        let side = 'col';\n\n        if (isNull(sides.row)) { side = 'row'; }\n\n        const result = [];\n\n        source.forEach((v) => {\n            const s = { col: sides.column, row: sides.row };\n            s[side] = v;\n            result.push(s);\n        });\n\n        return result;\n    };\n\n    const getLoopSegment = (startIndex, count, length, loop) => {\n        const getEndIndex = (value) => {\n            let result;\n\n            if (loop) {\n                result = helper.getArrayIndex(value, length);\n            } else {\n                result = value;\n                if (result < 0) { result = 0; }\n                if (result > length - 1) { result = length - 1; }\n            }\n\n            return result;\n        };\n\n        let tmp = [startIndex];\n        let endIndex;\n        let dir = true;\n\n        [startIndex + count, startIndex - count, startIndex].forEach((value) => {\n            endIndex = getEndIndex(value);\n            tmp = tmp.concat(getLineSegment(tmp[tmp.length - 1], endIndex, dir, length, loop));\n            dir = !dir;\n        });\n\n        return tmp;\n    };\n\n    const getLine = (from, length, loop) => {\n        let result = [];\n\n        if (loop) {\n            result = getLineSegment(from, helper.getArrayIndex(from + length, length), true, length, loop);\n        } else {\n            result = getLoopSegment(from, length, length, false);\n        }\n        return result;\n    };\n\n    const axelerate = (arr) => {\n        const max = 6;\n        const l = arr.length;\n        const getCount = (value) => {\n            return Math.round((max - 1) * $J.FX.cubicBezierAtTime(value / l, DEFAULTDURATION, CUBICBEZIER)) + 1;\n        };\n        const result = [];\n\n        arr.forEach((point, index) => {\n            let count = getCount(index);\n\n            while (count > 0) {\n                count -= 1;\n                result.push(point);\n            }\n        });\n\n        return result;\n    };\n\n    const getOptions = (options) => {\n        const opt = helper.deepExtend({\n            degree: 30,\n            swapSides: false,\n            axelerate: false,\n            isBackward: false,\n\n            justFirstLine: false,\n\n            row: {\n                length: 1,\n                loop: false,\n                current: 1,\n                jumpCount: 0\n            },\n\n            column: {\n                length: 36,\n                loop: true,\n                current: 1,\n                jumpCount: 0\n            },\n\n            firstSide: 'column',\n            secondSide: 'row'\n        }, options || {});\n\n        ['row', 'column'].forEach((value) => {\n            if (opt[value].current > opt[value].length - 1) {\n                opt[value].current = 0;\n            }\n        });\n\n        if (opt.swapSides) {\n            opt.secondSide = opt.firstSide;\n            opt.firstSide = 'row';\n        }\n\n        return opt;\n    };\n\n    const api = {\n        lib: {\n            getRightIndex: (index, length, loop) => {\n                let result;\n\n                if (loop) {\n                    result = helper.getArrayIndex(index, length);\n                } else {\n                    if (index >= length) {\n                        index = length - 1;\n                    } else if (index < 0) {\n                        index = 0;\n                    }\n                    result = index;\n                }\n                return result;\n            }\n        },\n\n        twitch: (options) => {\n            const opt = getOptions(options);\n            const count = { column: 0, row: 0 };\n            let tmp;\n            let result = [];\n\n            [opt.firstSide, opt.secondSide].forEach((side) => {\n                const otherSide = (side === opt.firstSide) ? opt.secondSide : opt.firstSide;\n\n                if (opt[side].length > 1) {\n                    count[side] = Math.floor(opt[side].length / 360 * opt.degree) || 1;\n                }\n\n                if (count[side]) {\n                    tmp = {};\n                    tmp[side] = null;\n                    tmp[otherSide] = opt[otherSide].current;\n                    result = result.concat(getQueue(getLoopSegment(opt[side].current, count[side], opt[side].length, opt[side].loop), tmp));\n                }\n            });\n\n            return result;\n        },\n\n        sphere: (options) => {\n            const opt = getOptions(options);\n            let result = [];\n\n            (opt.justFirstLine ? [opt.firstSide] : [opt.firstSide, opt.secondSide]).forEach((side) => {\n                const otherSide = (side === opt.firstSide) ? opt.secondSide : opt.firstSide;\n                const tmp = {};\n\n                if (opt[side].length === 1) { return; }\n\n                tmp[side] = null;\n                tmp[otherSide] = opt[otherSide].current;\n\n                const arr = getQueue(getLine(opt[side].current, opt[side].length, opt[side].loop), tmp);\n                if (opt.isBackward) { arr.reverse(); }\n                result = result.concat(arr);\n            });\n\n            if (opt.axelerate) {\n                result = axelerate(result);\n            }\n\n            return result;\n        },\n\n        intro: (options) => {\n            const opt = getOptions(options);\n            const copiedOpt = {\n                swapSides: opt.swapSides,\n                justFirstLine: true,\n                isBackward: opt.isBackward,\n                row: helper.deepExtend({}, opt.row),\n                column: helper.deepExtend({}, opt.column)\n            };\n            let result = [];\n\n            result = api.sphere(copiedOpt);\n            result = result.concat(api.twitch(copiedOpt));\n\n            return result;\n        },\n\n        full: (options) => {\n            let arr;\n            const opt = getOptions(options);\n            const l = opt[opt.secondSide].length;\n\n            if (l > 1) {\n                arr = getLine(opt[opt.secondSide].current, l, opt[opt.secondSide].loop);\n            } else {\n                arr = [opt[opt.secondSide].current];\n            }\n\n            const firstSideOpt = helper.deepExtend({}, opt[opt.firstSide]);\n            const secondSideOpt = helper.deepExtend({}, opt[opt.secondSide]);\n            let result = [];\n\n            arr.forEach((item) => {\n                const circleOption = {\n                    swapSides: opt.swapSides,\n                    justFirstLine: true,\n                };\n\n                secondSideOpt.current = item;\n\n                circleOption[opt.firstSide] = firstSideOpt;\n                circleOption[opt.secondSide] = secondSideOpt;\n\n                result = result.concat(api.sphere(circleOption));\n            });\n\n            if (opt.isBackward) {\n                result.reverse();\n            }\n\n            return result;\n        },\n\n        custom: (options) => {\n            const opt = getOptions(options);\n\n            const point1 = {\n                x: opt.column.current,\n                y: opt.row.current\n            };\n\n            const point2 = {\n                x: opt.column.current + opt.column.jumpCount,\n                y: opt.row.current + opt.row.jumpCount\n            };\n\n            const convert = (points) => {\n                const r = [];\n\n                if (points.x[0] !== point1.x) { points.x.reverse(); }\n                if (points.y[0] !== point1.y) { points.y.reverse(); }\n\n                for (let i = 0, l = points.x.length; i < l; i++) {\n                    r.push({\n                        col: points.x[i],\n                        row: points.y[i]\n                    });\n                }\n\n                return r;\n            };\n            let result = [];\n\n            result = getBresenhamsLine(point1, point2);\n            result = convert(result);\n            result = $(result).map((point) => {\n                return {\n                    col: api.lib.getRightIndex(point.col, opt.column.length, opt.column.loop),\n                    row: api.lib.getRightIndex(point.row, opt.row.length, opt.row.loop)\n                };\n            });\n\n            return result;\n        }\n    };\n\n    return api;\n})();\n\n/* eslint-env es6 */\n/* global helper */\n/* eslint-disable no-loop-func */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"LOADING_QUEUE\" }] */\n\n\nconst LOADING_QUEUE = (() => {\n    const _insideLib = {\n        getStep: (l) => {\n            let result = 1;\n\n            if (l > 24) {\n                result = Math.floor(l / 24);\n                if (result > 3) {\n                    result = 3;\n                }\n            }\n\n            return result;\n        },\n\n        getIndexes: (length) => {\n            const result = [];\n            const arr = [];\n            let i;\n            let tmp;\n            let flag = true;\n            let step = _insideLib.getStep(length);\n\n            do {\n                tmp = [];\n                for (i = 0; i < length; i += step) {\n                    if (!arr[i]) {\n                        tmp.push(i);\n                        arr[i] = 1;\n                    }\n                }\n\n                if (step === 1) { flag = false; }\n                result.push(tmp);\n\n                step = Math.ceil(step / 2);\n            } while (step >= 1 && flag);\n\n            return result;\n        },\n\n        // print: (arr) => {\n        //     let str = '';\n\n        //     arr.forEach((_arr, index) => {\n        //         let str2;\n        //         if (index < 10) {\n        //             str2 = index + ' - ';\n        //         } else {\n        //             str2 = index + '- ';\n        //         }\n\n        //         _arr.forEach(v => {\n        //             str2 += v + ' ';\n        //         });\n\n        //         str2 += '\\n';\n        //         str += str2;\n        //     });\n\n        //     console.log(str);\n        // },\n\n        createArray: (images) => {\n            const result = [];\n\n            images.forEach((line) => {\n                const arr = [];\n\n                line.forEach(() => {\n                    arr.push(0);\n                });\n\n                result.push(arr);\n            });\n\n            return result;\n        },\n\n        getRightIdexes: (arr, startPos, length, callback) => {\n            arr.forEach((indexOfLine) => {\n                const index = indexOfLine + startPos;\n                const rightIndex = helper.getArrayIndex(index, length);\n\n                if (index < length || rightIndex < startPos) {\n                    callback(rightIndex);\n                }\n            });\n        },\n\n        getOptions: (options) => {\n            // images[row][col]\n            /*\n                options {\n                    images: 36,\n                    startRow: 0,\n                    startCol: 0\n                }\n            */\n\n            const opt = helper.deepExtend({}, options);\n\n            opt.schemaOfImages = _insideLib.createArray(opt.images);\n            opt.rowLength = opt.images.length;\n            opt.colLength = opt.images[opt.startRow].length;\n\n            return opt;\n        },\n\n        all: (images, schema, index) => {\n            const result = [];\n\n            for (let i = 0, l = images.length; i < l; i++) {\n                for (let j = 0, len = images[i].length; j < len; j++) {\n                    if (!schema[i][j]) {\n                        result.push([i, j]);\n                        schema[i][j] = index + 1;\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        getSideOpt: (opt) => {\n            let tmp;\n            const result = {\n                length: opt.colLength,\n                start: opt.startCol,\n                otherLength: opt.rowLength,\n                otherStart: opt.startRow\n            };\n\n            if (opt.swapSides) {\n                tmp = result.length;\n                result.length = result.otherLength;\n                result.otherLength = tmp;\n\n                tmp = result.start;\n                result.start = result.otherStart;\n                result.otherStart = tmp;\n            }\n\n            return result;\n        }\n    };\n\n    const api = {\n        _: _insideLib,\n\n        all: (options) => {\n            const result = [];\n            const opt = _insideLib.getOptions(options);\n            const indexesOfCols = _insideLib.getIndexes(opt.colLength);\n            let tmp = [];\n            const index = 1;\n\n            opt.images.forEach((line, i) => {\n                const l = line.length;\n                _insideLib.getRightIdexes(indexesOfCols[0], opt.startCol, l, (col) => {\n                    const row = helper.getArrayIndex(i + opt.startRow, opt.rowLength);\n\n                    tmp.push([row, col]);\n                    opt.schemaOfImages[row][col] = 1;\n                });\n            });\n            result.push(tmp);\n\n            tmp = [];\n            result.push(tmp.concat(_insideLib.all(opt.images, opt.schemaOfImages, index)));\n            // _insideLib.print(opt.schemaOfImages);\n\n            return result;\n        },\n\n        fastLine: (options) => {\n            const result = [];\n            const opt = _insideLib.getOptions(options);\n            const sideOpt = _insideLib.getSideOpt(opt);\n            let tmp = [];\n            const index = 1;\n\n            for (let i = 0, l = sideOpt.length; i < l; i++) {\n                const _i = helper.getArrayIndex(i + sideOpt.start, sideOpt.length);\n                if (opt.swapSides) {\n                    tmp.push([_i, opt.startCol]);\n                    opt.schemaOfImages[_i][opt.startCol] = index;\n                } else {\n                    tmp.push([opt.startRow, _i]);\n                    opt.schemaOfImages[opt.startRow][_i] = index;\n                }\n            }\n            result.push(tmp);\n\n            tmp = [];\n            result.push(tmp.concat(_insideLib.all(opt.images, opt.schemaOfImages, index)));\n            // _insideLib.print(opt.schemaOfImages);\n\n            return result;\n        },\n\n        line: (options) => {\n            const result = [];\n            const opt = _insideLib.getOptions(options);\n            const sideOpt = _insideLib.getSideOpt(opt);\n            const indexes = _insideLib.getIndexes(sideOpt.length);\n            let tmp = [];\n            let index = 1;\n\n            _insideLib.getRightIdexes(indexes[0], sideOpt.start, sideOpt.length, (i) => {\n                if (opt.swapSides) {\n                    tmp.push([i, opt.startCol]);\n                    opt.schemaOfImages[i][opt.startCol] = 1;\n                } else {\n                    tmp.push([opt.startRow, i]);\n                    opt.schemaOfImages[opt.startRow][i] = 1;\n                }\n            });\n            result.push(tmp);\n\n            tmp = [];\n            while (index < indexes.length) {\n                if (indexes[index]) {\n                    _insideLib.getRightIdexes(indexes[index], sideOpt.start, sideOpt.length, (i) => {\n                        if (opt.swapSides) {\n                            tmp.push([i, opt.startCol]);\n                            opt.schemaOfImages[i][opt.startCol] = index + 1;\n                        } else {\n                            tmp.push([opt.startRow, i]);\n                            opt.schemaOfImages[opt.startRow][i] = index + 1;\n                        }\n                    });\n                }\n\n                index += 1;\n            }\n\n            result.push(tmp.concat(_insideLib.all(opt.images, opt.schemaOfImages, index)));\n            // _insideLib.print(opt.schemaOfImages);\n\n            return result;\n        },\n\n        sphere: (options) => {\n            const result = [];\n            const opt = _insideLib.getOptions(options);\n            const sideOpt = _insideLib.getSideOpt(opt);\n\n            const indexes = _insideLib.getIndexes(sideOpt.length);\n            const otherIndexes = _insideLib.getIndexes(sideOpt.otherLength);\n            const max = Math.max(indexes.length, otherIndexes.length);\n            let tmp = [];\n            let index = 1;\n\n\n            _insideLib.getRightIdexes(indexes[0], sideOpt.start, sideOpt.length, (i) => {\n                if (opt.swapSides) {\n                    tmp.push([i, opt.startCol]);\n                    opt.schemaOfImages[i][opt.startCol] = 1;\n                } else {\n                    tmp.push([opt.startRow, i]);\n                    opt.schemaOfImages[opt.startRow][i] = 1;\n                }\n            });\n\n            _insideLib.getRightIdexes(otherIndexes[0], sideOpt.otherStart, sideOpt.otherLength, (i) => {\n                if (opt.swapSides) {\n                    if (!opt.schemaOfImages[opt.startRow][i]) {\n                        tmp.push([opt.startRow, i]);\n                        opt.schemaOfImages[opt.startRow][i] = 1;\n                    }\n                } else if (!opt.schemaOfImages[i][opt.startCol]) {\n                    tmp.push([i, opt.startCol]);\n                    opt.schemaOfImages[i][opt.startCol] = 1;\n                }\n            });\n            result.push(tmp);\n\n            tmp = [];\n            while (index < max) {\n                if (indexes[index]) {\n                    _insideLib.getRightIdexes(indexes[index], sideOpt.start, sideOpt.length, (i) => {\n                        if (opt.swapSides) {\n                            tmp.push([i, opt.startCol]);\n                            opt.schemaOfImages[i][opt.startCol] = index + 1;\n                        } else {\n                            tmp.push([opt.startRow, i]);\n                            opt.schemaOfImages[opt.startRow][i] = index + 1;\n                        }\n                    });\n                }\n\n                if (otherIndexes[index]) {\n                    _insideLib.getRightIdexes(otherIndexes[index], sideOpt.otherStart, sideOpt.otherLength, (i) => {\n                        if (opt.swapSides) {\n                            tmp.push([opt.startRow, i]);\n                            opt.schemaOfImages[opt.startRow][i] = index + 1;\n                        } else {\n                            tmp.push([i, opt.startCol]);\n                            opt.schemaOfImages[i][opt.startCol] = index + 1;\n                        }\n                    });\n                }\n\n                index += 1;\n            }\n\n            result.push(tmp.concat(_insideLib.all(opt.images, opt.schemaOfImages, index)));\n            // _insideLib.print(opt.schemaOfImages);\n\n            return result;\n        }\n    };\n\n    return api;\n})();\n\n/* eslint-env es6 */\n/* global EventEmitter */\n/* global helper */\n/* global SpinResponsiveImage, INTRO_QUEUE, LOADING_QUEUE */\n/* eslint no-multi-assign: 0 */\n/* eslint operator-assignment: 0 */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"ImagesMap\" }] */\n/* eslint class-methods-use-this: \"off\" */\n\nconst ImagesMap = (() => {\n    const getPointsString = (row, col) => {\n        return row + '.' + col;\n    };\n\n    const checkIndex = (index, increment) => {\n        return index % increment === 0;\n    };\n\n    const getRoot = (url) => {\n        let result = [];\n        result = $(url.split('//'));\n\n        url = result[1];\n        result = result[0];\n\n        url = url.split('/')[0];\n\n        result = [result, url];\n\n        result = result.join('//');\n\n        return result;\n    };\n\n\n    const getImageUrl = (absoluteURL, baseURL, imageUrl) => {\n        let result;\n\n        if (/^\\//.test(imageUrl)) {\n            result = absoluteURL + imageUrl;\n        } else {\n            result = baseURL + '/' + imageUrl;\n        }\n\n        return result;\n    };\n\n    class ImagesMap_ extends EventEmitter {\n        constructor(o) {\n            super();\n            this.o = o;\n\n            this.startColumn = 0;\n            this.startRow = 0;\n            this.currentColumn = 0;\n            this.currentRow = 0;\n            this.nextColumn = 0;\n            this.nextRow = 0;\n            this.futureColumn = 0;\n            this.futureRow = 0;\n\n            this.imgMap = [];\n\n            this.isAvailableOfLoading = true;\n\n            this.images = [];\n            this.isStartedFullInit = false;\n            this.imageInfoPromise = null;\n\n            this.loadingMap = {\n                queue: []\n            };\n\n            this.url = helper.spinLib.getUrl(this.o.url);\n            this.absoluteURL = getRoot(this.url);\n\n            this.infoImg = null;\n            this.imageInfoId = 'img-' + helper.generateUUID();\n\n            this.setEvents();\n        }\n\n        createImageInfo() {\n            const getItemFromObject = () => {\n                const key1 = $J.hashKeys(this.o.layers)[0];\n                const key2 = $J.hashKeys(this.o.layers[key1])[0];\n\n                return this.o.layers[key1][key2];\n            };\n\n            if (!this.infoImg) {\n                this.infoImg = new SpinResponsiveImage(globalFunctions.normalizeURL(getImageUrl(this.absoluteURL, this.url, getItemFromObject())), {\n                    imageSettings: this.o.imageSettings,\n                    infoId: this.imageInfoId,\n                    round: true,\n                    referrerPolicy: this.o.referrerPolicy\n                }, null, null);\n                this.infoImg.setParent(this);\n            }\n\n            return this.infoImg;\n        }\n\n        loadImageInfo() {\n            if (!this.imageInfoPromise) {\n                this.imageInfoPromise = new Promise((resolve, reject) => {\n                    this.createImageInfo(); // this.infoImg\n\n                    this.infoImg.getImageInfo()\n                        .then((info) => {\n                            if (this.isStartedFullInit) {\n                                this.createQueue();\n                            }\n                            resolve({ size: this.infoImg.getOriginSize() });\n                        })\n                        .catch((err) => {\n                            reject({ error: err });\n                        });\n                });\n            }\n\n            return this.imageInfoPromise;\n        }\n\n        startFullInit(o) {\n            if (this.isStartedFullInit) { return; }\n            this.isStartedFullInit = true;\n\n            this.o = $J.extend(this.o, o);\n\n            this.o.layers = helper.spinLib.checkLayers(this.o.layers);\n            this.o.layers = helper.spinLib.swapLayers(this.o.layers, this.o.swapSides);\n\n            helper.objEach(this.o.layers, (key, rows, rowIndex) => {\n                if (checkIndex(rowIndex, this.o.rowIncrement)) {\n                    const arr = [];\n                    helper.objEach(rows, (_key, frame, frameIndex) => {\n                        if (checkIndex(frameIndex, this.o.columnIncrement)) {\n                            arr.push(globalFunctions.normalizeURL(getImageUrl(this.absoluteURL, this.url, frame)));\n                        }\n                    });\n                    this.imgMap.push(arr);\n                }\n            });\n\n            helper.spinLib.reverse(this.o.reverseColumn, this.o.reverseRow, this.imgMap);\n\n            this.createImages(this.imgMap);\n            this.setFirstImage();\n\n            if (this.imageInfoPromise) {\n                this.infoImg.getImageInfo()\n                    .then((info) => {\n                        if (!this.loadingMap.queue.length) {\n                            this.createQueue();\n                        }\n                    })\n                    .catch((err) => {\n                        // empty\n                    });\n            }\n        }\n\n        setImageSettings(options) {\n            if (!options) { options = {}; }\n            if (!options.imageSettings) { options.imageSettings = {}; }\n            if (!options.imageSettings.scale) { options.imageSettings.scale = {}; }\n            if (!options.callbackData) { options.callbackData = {}; }\n\n            options.imageSettings.scale.option = 'fill';\n\n            if (!options.srcset) { options.srcset = {}; }\n\n            if (this.o.quality !== null) {\n                if (!options.src) { options.src = {}; }\n                options.src = this.o.quality;\n            }\n\n            if (options.dppx >= 1.5) {\n                options.srcset.quality = this.o.hdQuality;\n            } else if (this.o.quality !== null) {\n                options.srcset.quality = this.o.quality;\n            }\n\n            return options;\n        }\n\n        getImage(row, col) {\n            let val1;\n            let val2;\n\n            if ($J.defined(row)) {\n                val1 = row;\n                val2 = col;\n            } else {\n                val1 = this.currentRow;\n                val2 = this.currentColumn;\n            }\n\n            return this.images[val1][val2];\n        }\n\n        getThumbnail(imageOptions) {\n            return this.getImage(this.startRow, this.startColumn).getThumbnail(imageOptions);\n        }\n\n        getMap() {\n            const arr = [];\n\n            this.imgMap.forEach((row) => {\n                const arr2 = [];\n                row.forEach((col) => { arr2.push(false); });\n                arr.push(arr2);\n            });\n\n            return arr;\n        }\n\n        setEvents() {\n            let firstIsLoaded = false;\n            let partIsLoaded = false;\n            let allIsLoaded = false;\n            const allCheck = (data) => {\n                if (firstIsLoaded && partIsLoaded && allIsLoaded || data.lens) { return; }\n\n                if (!firstIsLoaded && data.col === this.currentColumn && data.row === this.currentRow) {\n                    firstIsLoaded = true;\n                    this.emit('mapFirstImageLoaded', { data: data });\n                }\n\n                if (!partIsLoaded && this.loadingMap.checkOfFirstPartImagesLoading(data.row, data.col)) {\n                    partIsLoaded = true;\n                    this.emit('mapImagesReady');\n                }\n\n                if (!allIsLoaded && this.loadingMap.checkOtherImagesLoading(data.row, data.col)) {\n                    allIsLoaded = true;\n                }\n\n                if (firstIsLoaded && partIsLoaded && allIsLoaded) {\n                    this.emit('mapAllImagesLoaded');\n                }\n            };\n\n            this.on('imageOnload', (e) => {\n                e.stopAll();\n                const _data = $J.extend({ isCurrent: (e.data.col === this.currentColumn && e.data.row === this.currentRow) }, e.data);\n\n                this.emit('mapImageLoaded', { data: _data });\n\n                allCheck(_data);\n            });\n\n            this.on('imageOnerror', (e) => {\n                e.stopAll();\n                e.data.error = true;\n                this.emit('mapImageLoaded', { data: e.data });\n\n                allCheck(e.data);\n                console.log('image error');\n            });\n        }\n\n        getHintType() {\n            let result;\n            const r = this.getCountOfRows();\n            const c = this.getCountOfFrames();\n\n            if (r > 1 && c > 1) {\n                result = 'multi-row';\n            } else if (r > 1) {\n                result = 'col';\n            } else {\n                result = 'row';\n            }\n\n            return result;\n        }\n\n        isLoaded(imageOptions) {\n            const img = this.getImage();\n\n            imageOptions = this.setImageSettings(imageOptions);\n\n            return img.isLoaded(imageOptions);\n        }\n\n        isExist(imageOptions) {\n            const img = this.getImage();\n\n            imageOptions = this.setImageSettings(imageOptions);\n\n            return img.isExist(imageOptions);\n        }\n\n        isCurrent(position) {\n            return position.row === this.currentRow && position.col === this.currentColumn;\n        }\n\n        getCountOfImages() {\n            return this.getCountOfFrames() * this.getCountOfRows();\n        }\n\n        getCountOfFrames() {\n            const result = this.images[0].length || 0;\n            return result;\n        }\n\n        getCountOfRows() {\n            const result = this.images.length;\n            return result;\n        }\n\n        pixelPerFrame(width) {\n            let min = width;\n            const cols = this.getCountOfFrames();\n            if (cols > 1) {\n                if (!this.o.loopColumn) {\n                    min = min / 2;\n                }\n                min = min / cols;\n            } else {\n                min = min / this.getCountOfRows();\n            }\n\n            // eslint-disable-next-line\n            min = min / Math.pow(this.o.columnSpeed / 50, 2);\n\n            return min;\n        }\n\n        pixelPerRow(height) {\n            let min = height;\n            const rows = this.getCountOfRows();\n\n            if (rows > 1) {\n                if (!this.o.loopRow) {\n                    min = min / 2;\n                }\n                min = min / rows;\n            } else {\n                min = min / this.getCountOfFrames();\n            }\n\n            // eslint-disable-next-line\n            min = min / Math.pow(this.o.rowSpeed / 50, 2);\n\n            return min;\n        }\n\n        createImages(arr) {\n            for (let i = 0, l = arr.length; i < l; i++) {\n                const _arr = [];\n                for (let j = 0, len = arr[i].length; j < len; j++) {\n                    const img = new SpinResponsiveImage(globalFunctions.adjustURL(arr[i][j]), {\n                        imageSettings: this.o.imageSettings,\n                        infoId: this.imageInfoId,\n                        round: true,\n                        referrerPolicy: this.o.referrerPolicy\n                    }, j, i);\n                    img.setParent(this);\n\n                    _arr.push(img);\n                }\n\n                this.images.push(_arr);\n            }\n        }\n\n        setFirstImage() {\n            let sr = this.o.startRow;\n            let sc = this.o.startColumn;\n\n            if (this.o.reverseRow) { sr = this.images.length + 1 - sr; }\n            if (this.o.reverseColumn) { sc = this.images[0].length + 1 - sc; }\n\n            this.currentRow = sr - 1;\n            this.currentColumn = sc - 1;\n\n            if (this.currentRow > this.images.length - 1) {\n                this.currentRow = 0;\n            }\n\n            if (this.currentColumn > this.images[0].length - 1) {\n                this.currentColumn = 0;\n            }\n\n            this.startColumn = this.futureColumn = this.nextColumn = this.currentColumn;\n            this.startRow = this.futureRow = this.nextRow = this.currentRow;\n        }\n\n        loadImage(imageOptions, row, col) {\n            const img = this.getImage(row, col);\n            imageOptions = this.setImageSettings(imageOptions);\n            img.getImage(imageOptions);\n        }\n\n        loadFirstImage(imageOptions) {\n            if (!this.loadingMap.queue.length) { return; }\n\n            const point = this.loadingMap.queue[0].shift();\n\n            this.loadImage(imageOptions, point[0], point[1]);\n        }\n\n        loadFirstPartOfImages(imageOptions) {\n            if (!this.loadingMap.queue.length) { return; }\n\n            this.loadingMap.queue[0].forEach((point) => {\n                this.loadImage(imageOptions, point[0], point[1]);\n            });\n        }\n\n        loadOtherImages(imageOptions) {\n            if (this.isAvailableOfLoading && this.loadingMap.queue.length) {\n                imageOptions = this.setImageSettings(imageOptions);\n\n                this.loadingMap.queue[1].forEach((point) => {\n                    this.loadImage(imageOptions, point[0], point[1]);\n                });\n            }\n        }\n\n        loadImages(imageOptions) {\n            const cc = this.currentColumn;\n            if (this.isAvailableOfLoading) {\n                imageOptions = this.setImageSettings(imageOptions);\n                if (this.o.swapSides) {\n                    this.images.forEach((line) => {\n                        const img = line[cc];\n\n                        if (!img.isExist(imageOptions)) {\n                            img.getImage(imageOptions);\n                        } else {\n                            img.sendLoad(imageOptions);\n                        }\n                    });\n                } else {\n                    this.images.forEach((line) => {\n                        line.forEach((img) => {\n                            if (!img.isExist(imageOptions)) {\n                                img.getImage(imageOptions);\n                            } else {\n                                img.sendLoad(imageOptions);\n                            }\n                        });\n                    });\n                }\n            }\n        }\n\n        isImagesExist(imageOptions) {\n            let j;\n\n            imageOptions = this.setImageSettings(imageOptions);\n\n            for (let i = 0, l = this.images.length; i < l; i++) {\n                for (j = 0; j < this.images[i].length; j++) {\n                    if (!this.images[i][j].isExist(imageOptions)) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        // isImageExist(imageOptions) {\n        //     return this.images[this.currentRow][this.currentColumn]\n        //         .isExist(imageOptions.width, imageOptions.height, imageOptions.additionalImageSettings ? imageOptions.additionalImageSettings.tile : null);\n        // }\n\n        createQueue() {\n            let name;\n\n            switch (this.o.loadingSchema) {\n                case 'momentum':\n                    name = 'fastLine';\n                    break;\n                case 'full':\n                    name = 'all';\n                    break;\n                case 'row':\n                case 'spin':\n                    name = 'line';\n                    break;\n                case 'sphere':\n                case 'intro':\n                case 'twitch':\n                    name = 'sphere';\n                    break;\n                default:\n                    name = 'all';\n            }\n\n            this.loadingMap.queue = LOADING_QUEUE[name]({\n                swapSides: this.o.swapSides,\n                images: this.images,\n                startRow: this.currentRow,\n                startCol: this.currentColumn\n            });\n\n            this.loadingMap.checkOfFirstPartImagesLoading = (() => {\n                let firstPartOfImages = [];\n\n                this.loadingMap.queue[0].forEach((indexes) => {\n                    firstPartOfImages.push(getPointsString(indexes[0], indexes[1]));\n                });\n\n                firstPartOfImages.shift(); // first image\n\n                let count = firstPartOfImages.length;\n                let areLoaded = false;\n\n                if (!count) { areLoaded = true; }\n\n                return (row, col) => {\n                    if (!areLoaded) {\n                        if (firstPartOfImages.indexOf(getPointsString(row, col)) >= 0) {\n                            count -= 1;\n                            if (count === 0) {\n                                firstPartOfImages = [];\n                                areLoaded = true;\n                            }\n                        }\n                    }\n\n                    return areLoaded;\n                };\n            })();\n\n            this.loadingMap.checkOtherImagesLoading = (() => {\n                let otherImages = [];\n\n                this.loadingMap.queue[1].forEach((indexes) => {\n                    otherImages.push(getPointsString(indexes[0], indexes[1]));\n                });\n\n                let count;\n                let areLoaded = false;\n\n                count = otherImages.length;\n\n                if (!count) { areLoaded = true; }\n\n                return (row, col) => {\n                    if (!areLoaded) {\n                        if (otherImages.indexOf(getPointsString(row, col)) >= 0) {\n                            count -= 1;\n                            if (count === 0) {\n                                otherImages = [];\n                                areLoaded = true;\n                            }\n                        }\n                    }\n\n                    return areLoaded;\n                };\n            })();\n        }\n\n        prepareFutureImage(direction, count) {\n            if (!count) { count = 1; }\n\n            let index;\n            let length;\n            let loop;\n\n            if ($J.contains(['next', 'prev'], direction)) {\n                loop = this.o.loopColumn;\n                index = this.futureColumn;\n                length = this.getCountOfFrames();\n                if (direction === 'next') {\n                    index += count;\n                } else {\n                    index -= count;\n                }\n\n                this.futureColumn = INTRO_QUEUE.lib.getRightIndex(index, length, loop);\n            } else {\n                loop = this.o.loopRow;\n                index = this.futureRow;\n                length = this.getCountOfRows();\n                if (direction === 'down') {\n                    index += count;\n                } else {\n                    index -= count;\n                }\n                // loop = false;\n                this.futureRow = INTRO_QUEUE.lib.getRightIndex(index, length, loop);\n            }\n        }\n\n        setPreparedNextImage() {\n            this.futureColumn = this.currentColumn = this.nextColumn;\n            this.futureRow = this.currentRow = this.nextRow;\n\n            this.emit('frameChange', { data: {\n                column: this.currentColumn,\n                row: this.currentRow\n            } });\n        }\n\n        setPreparedFutureImage() {\n            const img = this.getImage(this.futureRow, this.futureColumn);\n            if (img && img.isReady()) {\n                this.currentColumn = this.futureColumn;\n                this.currentRow = this.futureRow;\n\n                this.emit('frameChange', { data: {\n                    column: this.currentColumn,\n                    row: this.currentRow\n                } });\n            }\n        }\n\n        resetPreparedImage() {\n            this.futureColumn = this.nextColumn = this.currentColumn;\n            this.futureRow = this.nextRow = this.currentRow;\n        }\n\n        getCurrentImage(imageOptions) {\n            imageOptions = this.setImageSettings(imageOptions);\n\n            const c = this.currentColumn;\n            const r = this.currentRow;\n\n            let img = this.getImage(r, c);\n            img = img.getImage(imageOptions);\n\n            return img;\n        }\n\n        getOriginImageUrl() {\n            const c = this.currentColumn;\n            const r = this.currentRow;\n\n            let url = this.getImage(r, c);\n            url = url.getOriginImageUrl();\n\n            return url;\n        }\n\n        jump(axis, value /* count or index */, direction) {\n            let result = false;\n            let row;\n            let col;\n            const checkImg = (r, c) => {\n                let res = false;\n                if (this.getImage(r, c).isReady()) {\n                    this.nextRow = r;\n                    this.nextColumn = col;\n                    this.setPreparedNextImage();\n                    res = true;\n                }\n                return res;\n            };\n\n            switch (axis) {\n                case 'row':\n                    row = helper.spinLib.getNextIndex(this.currentRow, value, direction, this.getCountOfRows(), this.o.loopRow);\n                    col = this.currentColumn;\n                    result = checkImg(row, col);\n                    break;\n                case 'col':\n                    col = helper.spinLib.getNextIndex(this.currentColumn, value, direction, this.getCountOfFrames(), this.o.loopColumn);\n                    row = this.currentRow;\n                    result = checkImg(row, col);\n                    break;\n\n                // no default\n            }\n\n            return result;\n        }\n\n        setNextAnimationFrame(index) {\n            const point = this.imagesBuffer[index];\n            const img = this.getImage(point.row, point.col);\n\n            if (img && img.isReady()) {\n                this.nextColumn = point.col;\n                this.nextRow = point.row;\n            }\n        }\n\n        getNextBufferIndex(fromIndex) {\n            let count = 0;\n            const l = this.imagesBuffer.length;\n            const check = (point) => {\n                const img = this.getImage(point.row, point.col);\n                let result = false;\n\n                if (img && img.isReady()) {\n                    result = true;\n                }\n\n                return result;\n            };\n            let point;\n\n            do {\n                count += 1;\n                fromIndex += 1;\n\n                if (fromIndex >= l) {\n                    count = 0;\n                } else {\n                    point = this.imagesBuffer[fromIndex];\n                }\n            } while (count > 0 && (!point || !check(point)));\n\n            return count;\n        }\n\n        createAnimation(typeOfBuffer, isBackward) {\n            let jfl = false;\n            let a = false;\n            let cols = 0;\n            let rows = 0;\n\n            switch (typeOfBuffer) {\n                case 'as-row':\n                    typeOfBuffer = 'sphere';\n                    jfl = true;\n                    break;\n                case 'as-sphere':\n                    typeOfBuffer = 'sphere';\n                    break;\n                case 'as-full':\n                    typeOfBuffer = 'full';\n                    break;\n                case 'as-helix':\n                    // TODO do the effect\n                    typeOfBuffer = 'sphere';\n                    break;\n                case 'intro':\n                    typeOfBuffer = 'intro';\n                    jfl = true;\n                    break;\n                case 'twitch':\n                    typeOfBuffer = 'twitch';\n                    break;\n                case 'spin':\n                    typeOfBuffer = 'sphere';\n                    jfl = true;\n                    break;\n                case 'momentum':\n                    typeOfBuffer = 'sphere';\n                    jfl = true;\n                    a = true;\n                    break;\n                case 'sphere':\n                    typeOfBuffer = 'sphere';\n                    break;\n                default:\n                    cols = typeOfBuffer.cols;\n                    rows = typeOfBuffer.rows;\n                    typeOfBuffer = 'custom';\n            }\n\n            this.imagesBuffer = INTRO_QUEUE[typeOfBuffer]({\n                justFirstLine: jfl,\n                swapSides: this.o.swapSides,\n                axelerate: a,\n                isBackward: isBackward,\n                count: typeOfBuffer,\n\n                row: {\n                    length: this.getCountOfRows(),\n                    loop: this.o.loopRow,\n                    current: this.currentRow,\n                    jumpCount: rows\n                },\n\n                column: {\n                    length: this.getCountOfFrames(),\n                    loop: this.o.loopColumn,\n                    current: this.currentColumn,\n                    jumpCount: cols\n                }\n            });\n\n            return this.imagesBuffer.length;\n        }\n\n        clearFramesQueue() {\n            this.imagesBuffer = [];\n        }\n\n        cancelLoadingImage(imageOptions) {\n            const img = this.getImage();\n            if (img) {\n                imageOptions = this.setImageSettings(imageOptions);\n                img.cancelLoadingImage(imageOptions);\n            }\n        }\n\n        getStartRow() {\n            return this.startRow;\n        }\n\n        getStartColumn() {\n            return this.startColumn;\n        }\n\n        getCurrentRow() {\n            return this.currentRow;\n        }\n\n        getCurrentColumn() {\n            return this.currentColumn;\n        }\n\n        getImagesBuffer() {\n            return this.imagesBuffer;\n        }\n\n        destroy(last) {\n            this.isAvailableOfLoading = false;\n            this.resetPreparedImage();\n            this.clearFramesQueue();\n\n            this.images.forEach((row) => {\n                row.forEach((frame) => {\n                    frame.destroy();\n                });\n            });\n\n            this.off('imageOnload');\n            this.off('imageOnerror');\n\n            this.loadingMap = { queue: [] };\n            this.imgMap = [];\n            this.images = $([]);\n            this.currentColumn = 0;\n            this.currentRow = 0;\n            super.destroy();\n        }\n    }\n\n    return ImagesMap_;\n})();\n\n/* eslint-env es6 */\n/* global defaultOptions, ImagesMap, SpinHotspots, Animation, Zoominstance, helper, ResponsiveImage, ProgressLoader, Hint, $J, globalFunctions, globalVariables */\n/* eslint-disable indent */\n/* eslint-disable no-lonely-if */\n/* eslint-disable class-methods-use-this */\n/* eslint operator-assignment: 0 */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"Spin\" }] */\n\n\nconst SPIN_CONF_VER = 1;\nconst P = globalVariables.smv;\nconst CSS_CLASS_NAME = P + '-spin';\nconst BRAND_LANDING = 'https://sirv.com/about-spin/?utm_source=client&utm_medium=sirvembed&utm_content=typeofembed(spin)&utm_campaign=branding';\n\n// const calcScalePosition = (scale, size) => {\n//     return (size - size * scale) / 2;\n// };\n\nclass ActivatedCurtain {\n    constructor(parentNode, activeNode) {\n        this.parentNode = parentNode;\n        this.activeNode = activeNode;\n\n        this.activatedCurtain = $J.$new('div').addClass('spin-activated-curtain').setCss({\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            'z-index': 999999999\n        });\n\n        this.state = 0; // 0 - deactivated, 1 - activated\n    }\n\n    show() {\n        if (this.state) {\n            this.activatedCurtain.setCssProp('display', 'block');\n            this.activeNode.addClass(P + '-activated');\n        }\n    }\n\n    hide() {\n        if (this.state) {\n            this.activatedCurtain.setCssProp('display', 'none');\n            this.activeNode.removeClass(P + '-activated');\n        }\n    }\n\n    activateCurtain() {\n        if (!this.state) {\n            this.state = 1;\n            this.activeNode.addClass(P + '-sleeping');\n            this.parentNode.append(this.activatedCurtain);\n        }\n    }\n\n    deactivateCurtain() {\n        if (this.state) {\n            this.state = 0;\n            this.activeNode.removeClass(P + '-sleeping');\n            this.activatedCurtain.remove();\n        }\n    }\n\n    addTapEvents(callback) {\n        this.activatedCurtain.addEvent('tap', (e) => {\n            if (this.state) {\n                e.action = 'activate';\n                callback(e);\n            }\n        });\n\n        this.activeNode.addEvent('tap', (e) => {\n            if (this.state) {\n                e.action = 'deactivate';\n                callback(e);\n            }\n        });\n    }\n\n    addPinchEvent(handler) {\n        this.activeNode.addEvent('pinch', handler);\n    }\n\n    removePinchEvent(handler) {\n        this.activeNode.removeEvent('pinch', handler);\n    }\n\n    destroy() {\n        this.state = 1;\n        this.hide();\n        this.deactivateCurtain();\n\n        this.removePinchEvent();\n\n        this.activeNode.removeEvent('tap');\n        this.activatedCurtain.remove();\n        this.activatedCurtain.removeEvent('tap');\n        this.activatedCurtain = null;\n    }\n}\n\nconst checkProps = (obj) => {\n    if (!obj.common) { obj.common = {}; }\n    if (!obj.common.common) { obj.common.common = {}; }\n    if (!obj.common.mobile) { obj.common.mobile = {}; }\n    if (!obj.local) { obj.local = {}; }\n    if (!obj.local.common) { obj.local.common = ''; }\n    if (!obj.local.mobile) { obj.local.mobile = ''; }\n\n    return obj;\n};\n\nconst fnStopTouchMove = (e) => { e.stopDefaults(); };\n\nclass Spin extends Zoominstance {\n    constructor(node, options) {\n        super(node, options, defaultOptions);\n\n        this.type = globalVariables.SLIDE.TYPES.SPIN;\n        // this.instanceOptions = this.makeOptions();\n        this.canvas = null;\n\n        this.canvasContainer = $J.$new('div').addClass('spin-canvas-container');\n        this.coreNode = $J.$new('div').addClass('sirv-spin');\n        this.instanceNode.append(this.coreNode);\n\n        // this.additionalCanvases = [];\n        this.ctx = null;\n\n        this.isSmoothing = false;\n        this.smooseTimeout = null;\n        this.minSizeOfFrame = 0;\n        this.minSizeOfRow = 0;\n\n        this.size = { width: 0, height: 0 };\n        this.isDragMove = false;\n        this.longTapTimer = false;\n\n        this.imagesMap = null;\n\n        this.isInited = false;\n\n        this.loader = null;\n\n        this.hint = null;\n        this.openedImg = null;\n\n        this.scale = 1;\n        this.cssId = -1;\n\n        this.boxBoundaries = null;\n\n        this.hotspots = null;\n\n        this.animationFX = null;\n\n        this.loadedImages = [];\n\n        this.currentSize = { width: 0, height: 0 };\n        this.currentImageSize = { width: 0, height: 0 };\n        this.standardSize = { width: 0, height: 0 };\n        this.lastImg = null;\n\n        this.startLoadingTime = null;\n\n        this.isOver = false;\n        this.isSpinActivated = !$J.browser.mobile;\n\n        this.canvasPromise = null;\n\n        this.firstImageLoaded = false;\n        this.firstPartOfImagesLoaded = false;\n        this.isInfoLoaded = false;\n\n        this.customActionWas = false;\n        this.isAutoplayPaused = false;\n\n        // the variable is inside option which is hidden\n        this.reflectDirection = false;\n\n        this.configURL = this.instanceNode.attr('data-src') || this.instanceNode.attr('data-config') || '';\n        this.imageBaseURL = globalFunctions.normalizeURL(this.configURL.replace(/([^#?]+)\\/.*$/, '$1/'));\n        this.absoluteURL = this.imageBaseURL.replace(/(^https?:\\/\\/[^/]*).*/, '$1/');\n        this.configHash = $J.getHashCode(this.configURL.replace(/^http(s)?:\\/\\//, ''));\n        this.configPath = '/' + this.configURL.replace(this.absoluteURL, '');\n        this.imageInfoCallbackName = 'sirv_spin_image_info_';\n\n        this.sessionId = $J.getHashCode(this.configURL.replace(/^http(s)?:\\/\\//, '')\n                + $J.D.node.location.href.replace(/^http(s)?:\\/\\//, '') + $J.now()\n        );\n\n        this.layers = {};\n        this.imageSettings = {};\n        this.hotspotsData = [];\n        this.fullscreenStartTime = 0;\n        this.meta = {};\n        this.isFullscreen = options.isFullscreen;\n        this.nativeFullscreen = options.nativeFullscreen;\n        this.infoSettings = {};\n        this.autospinResumeTimer = null;\n\n        this.isHidden = false;\n        this.sessionStartTime = 0;\n\n        this.animationCloud = null;\n        this.touchDragCloud = null;\n        this.slideDragEventStart = false;\n\n        this.dppx = null;\n        this.startTimeForZommEvent = null;\n\n        this.resizeAnimationTimer = helper.debounce(() => { this.animate('inactive'); }, 1000);\n        this.keyPressHandlerForShiftButton = null;\n\n        this.firstUserInteraction = false;\n\n        this.userColumn = 0;\n        this.userRow = 0;\n        this.placeholder = this.instanceNode.node.querySelector('img');\n        if (this.placeholder) {\n            this.placeholder = $(this.placeholder);\n        }\n\n        this.replaceTextParamURLFromMetadata();\n\n        this.trackUnload = () => {\n            this.sendStats('Page Unload', $J.now() - this.sessionStartTime, { message: 'Stopped' }, true);\n        };\n\n        // Handle window resize to prevent page dragging on mobile devices when spin fills the entire page.\n        this.disableScrollOnMobile = () => {\n            const docFullSize = $J.D.getFullSize();\n            const placeholderSize = this.instanceNode.getSize();\n\n            if (Math.abs(placeholderSize.height - docFullSize.height) <= 50) {\n                this.instanceNode.addEvent('touchmove', fnStopTouchMove);\n            } else {\n                this.instanceNode.removeEvent('touchmove', fnStopTouchMove);\n            }\n        };\n\n        this.resizeWindowTimer = null;\n        this.windowResizeCallback = () => {\n            clearTimeout(this.resizeWindowTimer);\n            this.resizeWindowTimer = setTimeout(() => {\n                this.disableScrollOnMobile();\n            }, 10);\n        };\n\n        this.api = $J.extend(this.api, {\n            isInitialized: this.isInitialized.bind(this), // new\n            play: this.play.bind(this),\n            pause: this.pause.bind(this),\n            rotate: this.rotateXY.bind(this),\n            rotateX: this.rotateX.bind(this),\n            rotateY: this.rotateY.bind(this),\n            jump: this.jump.bind(this),\n            jumpRows: this.jumpRows.bind(this), // new\n            jumpCols: this.jumpCols.bind(this), // new\n            // resize: this.resize.bind(this), // parent class\n            // zoomIn: this.zoomIn.bind(this), // parent class\n            // zoomOut: this.zoomOut.bind(this), // parent class\n            // isZoomed: this.isZoomed.bind(this), // new, parent class\n            // isReady: this.isReady.bind(this), // parent class\n            // getOptions: this.getOptions.bind(this), // parent class\n            // hotspots: {}, // parent class, hotspots api\n            currentFrame: this.currentFrame.bind(this)\n        });\n\n        this.createHotspotsClass(SpinHotspots);\n        this.getInfo().then(() => {\n            if ($J.browser.mobile && this.option('tappingFirst')) {\n                this.activatedCurtain = new ActivatedCurtain(this.instanceNode, this.coreNode);\n            } else {\n                this.isSpinActivated = true;\n            }\n\n            this.createMap(this.quality, this.hdQuality, this.isHDQualitySet);\n        }).catch((e) => {});\n    }\n\n    // API\n    isInitialized() {\n        return this.isInited;\n    }\n\n    // API\n    rotateXY(x, y) {\n        if (this._isReady && !this.isZoomed()) {\n            return this.rotate(x, y);\n        }\n\n        return false;\n    }\n\n    // API\n    rotateX(frames) {\n        if (this._isReady && !this.isZoomed()) {\n            return this.rotate(frames, null);\n        }\n\n        return false;\n    }\n\n    // API\n    rotateY(frames) {\n        if (this._isReady && !this.isZoomed()) {\n            return this.rotate(null, frames);\n        }\n\n        return false;\n    }\n\n    /**\n     * Jump up/down by certain number of rows\n     * @param  {int} rows Number of rows to jump\n     * @return\n     */\n    // API\n    jump(rows) {\n        return this.jumpRows(rows);\n    }\n\n    // API\n    jumpRows(frame) {\n        if (this._isReady && !this.isZoomed()) {\n            return this.jumpTo(frame, 'row');\n        }\n\n        return false;\n    }\n\n    // API\n    jumpCols(frame) {\n        if (this._isReady && !this.isZoomed()) {\n            return this.jumpTo(frame, 'col');\n        }\n\n        return false;\n    }\n\n    /**\n     * Retrieve current visible frame\n     * @return\n     */\n    // API\n    currentFrame() {\n        if (this._isReady) {\n            return this.getCurrentFrame();\n        }\n\n        return null;\n    }\n\n    // API\n    isActive() {\n        return this.isSpinActivated;\n    }\n\n    makeGlobalOptions(optionsInstance) {\n        const o = this.options.options;\n        optionsInstance.fromJSON(o.common.common);\n        helper.objEach(this.infoSettings, (key, value) => {\n            if (!$J.contains(['images', 'hotspots'], key)) {\n                optionsInstance.set(key, value);\n            }\n        });\n        optionsInstance.fromString(o.local.common);\n        optionsInstance.fromString(this.instanceNode.attr('data-options') || '');\n\n        return optionsInstance;\n    }\n\n    makeOptions() {\n        this.options.options = checkProps(this.options.options);\n        return super.makeOptions();\n    }\n\n    sendStats(name, time, additionalData, useBeacon) {\n        const data = {\n            account: this.config.account,\n            useBeacon: !!useBeacon,\n            event: name,\n            eventTime: time,\n            sessionId: this.sessionId,\n            origin: this.configPath\n        };\n\n        if (additionalData) {\n            data.data = additionalData;\n        }\n\n        this.emit('stats', { data: data });\n    }\n\n    getInfo() {\n        if (!this.gettingInfoPromise) {\n            this.gettingInfoPromise = new Promise((resolve, reject) => {\n                this.waitGettingInfo.wait(() => {\n                    const cfCallbackName = 'sirv_spin_info_v' + SPIN_CONF_VER + '_' + this.configHash;\n                    const url = this.configURL + ($J.stringHas(this.configURL, '?') ? '&' : '?') + 'info=' + cfCallbackName;\n\n                    helper.getRemoteData(url, cfCallbackName, this.referrerPolicy)\n                        .then((config) => {\n                            if (!this.destroyed) {\n                                if (config.layers) {\n                                    this.config = config;\n                                    this.layers = this.config.layers;\n                                    this.meta = this.config._file.meta || null;\n                                    this.infoSettings = this.config.settings;\n                                    this.hotspotsData = this.config.settings.hotspots || [];\n                                    this.imageSettings = this.config.settings.images.main;\n                                    this.accountInfo = {\n                                        account: this.config.account,\n                                        branded: this.config.branded\n                                    };\n\n                                    this.sessionStartTime = $J.now();\n                                    this.sendStats('sessionStart', this.sessionStartTime);\n\n                                    $J.W.addEvent('beforeunload', this.trackUnload);\n\n                                    resolve();\n                                } else if (config.contentType && /image/.test(config.contentType) || config._isplaceholder) {\n                                    reject({\n                                        error: 'changeSpinToImage',\n                                        isPlaceholder: config._isplaceholder,\n                                        account: config.account\n                                    });\n                                } else {\n                                    reject({ error: { status: 404 } });\n                                }\n                            }\n                        })\n                        .catch((err) => {\n                            if (!this.destroyed) {\n                                reject({ error: err });\n                            }\n                        });\n                });\n            });\n        }\n\n        return this.gettingInfoPromise;\n    }\n\n    replaceTextParamURLFromMetadata() {\n        if (this.imageSettings.text && this.imageSettings.text.text) {\n            this.imageSettings.text.text = this.imageSettings.text.text.replace(/\\$\\{spin\\.(title|description)\\}/g, (m, p1) => {\n                const t = this.meta[p1] || '';\n                if (typeof t === 'string') {\n                    return t;\n                }\n                return p1;\n            });\n\n            if (this.imageSettings.text.text === '') {\n                delete this.imageSettings.text;\n            }\n        }\n    }\n\n    getDPPX(size) {\n        const side = size.height > size.width ? 'height' : 'width';\n        const tmp = {};\n\n        tmp[side] = size[side];\n\n        this.dppx = helper.getDPPX(ResponsiveImage.roundImageSize(tmp)[side], this.infoSize[side], this.upscale);\n    }\n\n    showHint() {\n        let result = false;\n\n        if (this.hint) {\n            if (\n                    (!this.always || $J.contains([globalVariables.FULLSCREEN.OPENING, globalVariables.FULLSCREEN.OPENED], this.fullscreenState)) &&\n                    (!this.option('autospin.enable') || !this.firstUserInteraction) // do not show hint again after first user interaction if the autospin.enable is true\n                ) {\n                result = true;\n                this.hint.show();\n            }\n        }\n\n        return result;\n    }\n\n    onStartActions() {\n        if (this._isReady) {\n            this.animate('slideIn');\n        } else {\n            if (this.isStarted) {\n                if (this.isInited && !this.initNameEvent) {\n                    this.loadFirstPartOfImages();\n                } else {\n                    // if (this.isInView || this.preload) {\n                    if (this.isInView) {\n                        this.loadFirstImage();\n                    }\n                }\n            }\n        }\n    }\n\n    onStopActions() {\n        this.zoomOut();\n        this.stopSmoothing();\n        this.stopAnimation();\n        this.deactivateSpin();\n        this.setUserFrame();\n\n        this.customActionWas = false;\n\n        if (this.hint) {\n            this.hint.hide();\n        }\n\n        super.onStopActions();\n    }\n\n    onInView(value) {\n        if (value) {\n            if (!this.isInView) {\n                if (this._isReady) {\n                    this.isInView = true;\n                    this.animate('inView');\n                } else {\n                    if (this.preload || this.isSlideShown) {\n                        this.isInView = true;\n                        if (this.isInited) {\n                            if (this.isSlideShown && !this.initNameEvent) {\n                                this.loadFirstPartOfImages();\n                            }\n                        } else {\n                            this.loadFirstImage();\n                        }\n                    }\n                }\n            }\n        } else {\n            if (this.isInView && this._isReady) {\n                if (this.option('autospin.enable')) {\n                    this.animationCloud.pause();\n                } else {\n                    this.stopAnimation();\n                    this.setUserFrame();\n                }\n                this.deactivateSpin();\n            }\n        }\n    }\n\n    startFullInit(options) {\n        if (this.isStartedFullInit) { return; }\n\n        // if (options) {\n        //     this.instanceOptions = options.options;\n        //     options.options = this.makeOptions();\n        // }\n\n        super.startFullInit(options);\n\n        this.getInfo().then(() => {\n            this.normalizeOptions();\n            this.getId('spin-');\n\n            const option = this.option;\n\n            this.imagesMap.startFullInit({\n                swapSides: option('swapSides'),\n                startColumn: option('column.start'),\n                startRow: option('row.start'),\n                reverseColumn: option('column.reverse'),\n                reverseRow: option('row.reverse'),\n                loopColumn: option('column.loop'),\n                loopRow: option('row.loop'),\n                rowSpeed: option('row.sensitivity'),\n                columnSpeed: option('column.sensitivity'),\n                columnIncrement: option('column.increment'),\n                rowIncrement: option('row.increment')\n            });\n\n            this.loadedImages = this.imagesMap.getMap();\n\n            this.loader = new ProgressLoader(this.coreNode, { max: this.imagesMap.getCountOfImages(), 'class': 'spin-loader' });\n            this.loader.setParent(this);\n\n            this.coreNode.addEvent('btnclick tap', (e) => { e.stop(); });\n\n            this.on('isSingleSlide', (e) => {\n                e.stop();\n\n                if (this.activatedCurtain) {\n                    if (e.data.isSingle) {\n                        this.activatedCurtain.deactivateCurtain();\n                    } else {\n                        this.activatedCurtain.activateCurtain();\n                    }\n                }\n            });\n\n            if (this.hotspots) {\n                this.hotspots.setOptions({\n                    columnsRevers: this.option('column.reverse'),\n                    rowsRevers: this.option('row.reverse'),\n                    rows: this.imagesMap.getCountOfRows(),\n                    columns: this.imagesMap.getCountOfFrames(),\n                });\n            }\n\n            this.initAnimation();\n        }).catch(() => {});\n\n        if ($J.browser.touchScreen) {\n            this.on('dragEvent', (e) => {\n                if (e.data.type === 'dragstart') {\n                    this.slideDragEventStart = true;\n                    if (this.touchDragCloud) {\n                        this.touchDragCloud.removeEvent();\n                    }\n                } else if (e.data.type === 'dragend') {\n                    this.slideDragEventStart = false;\n                    if (this.touchDragCloud) {\n                        this.touchDragCloud.addEvent();\n                    }\n                }\n            });\n        }\n    }\n\n    getThumbnailData(opt) {\n        return this.imagesMap.getThumbnail(opt);\n    }\n\n    setUserFrame() {\n        this.jumpTo(this.userRow, 'row');\n        this.jumpTo(this.userColumn, 'col');\n    }\n\n    getSocialButtonData(data, isSpin) {\n        let url = null;\n\n        if (isSpin) {\n            url = this.instanceNode.attr('data-src');\n        } else {\n            url = super.getSocialButtonData(data);\n        }\n\n        return url;\n    }\n\n    turnOnOff() {\n        if (!$J.browser.mobile || !this.activatedCurtain) { return; }\n\n        this.activatedCurtain.addTapEvents((e) => {\n            if (e.action === 'activate') {\n                if (!this.isSpinActivated) {\n                    e.stop();\n                    this.activateSpin();\n                }\n\n                if (this.hotspots) { this.hotspots.hideActiveHotspotBox(true); }\n            } else {\n                if (this.isSpinActivated) {\n                    e.stop();\n                    this.stopSmoothing();\n                    this.stopAnimation();\n\n                    if (this.hotspots && this.hotspots.isHotspotActivated()) {\n                        this.hotspots.hideActiveHotspotBox(true);\n                    } else {\n                        this.deactivateSpin();\n                    }\n                }\n            }\n        });\n    }\n\n    activateSpin() {\n        if (!this.isSpinActivated) {\n            this.isSpinActivated = true;\n            if ($J.browser.mobile) {\n                this.stopAnimation();\n                this.customActionWas = true;\n                if (this.hint) { this.hint.hide(); }\n                if (this.activatedCurtain) {\n                    this.activatedCurtain.hide();\n                }\n            }\n        }\n    }\n\n    deactivateSpin() {\n        if (this.isSpinActivated) {\n            this.isSpinActivated = false;\n            if ($J.browser.mobile) {\n                if (!this.customActionWas) { this.showHint(); }\n                if (this.activatedCurtain) {\n                    this.activatedCurtain.show();\n                }\n\n                // this.customActionWas = false;\n                // this.animate('inactive');\n            }\n        }\n    }\n\n    // setActiveAction() {\n    //     if ($J.browser.mobile) { return; }\n\n    //     this.canvasContainer.addEvent('mouseover', e => {\n    //         if (this.isSlideShown) {\n    //             this.isOver = true;\n    //             if (this._isReady) {\n    //                 this.activateSpin();\n    //             }\n    //         }\n    //     });\n\n    //     this.canvasContainer.addEvent('mouseout', e => {\n    //         if (this.isSlideShown) {\n    //             this.isOver = false;\n    //             this.deactivateSpin();\n    //         }\n    //     });\n    // }\n\n    createPinchEvent() {\n        // difference between scale\n        const OPEN_ZOOM = 1.1;\n        const FS_OUT = 0.2;\n        const FS_IN = 2;\n        let saveValue;\n        let scale;\n        let baseMin;\n        let compensation;\n        let maxCompensation;\n        let minCompensation;\n        let max;\n        let min;\n        let basePercent;\n\n        const setDefaultsValues = () => {\n            maxCompensation = 1;\n            minCompensation = 1;\n            baseMin = this.zoom.getBaseScale().x;\n            max = 1;\n            min = baseMin;\n            saveValue = 1 - baseMin;\n        };\n\n        super.createPinchEvent(this.coreNode);\n\n        this.pinchCloud.onPinchStart = (e) => {\n            if ($J.contains([globalVariables.FULLSCREEN.OPENING, globalVariables.FULLSCREEN.CLOSING], this.fullscreenState)) { return; }\n            this.pinchCloud.pinch = true;\n            clearTimeout(this.longTapTimer);\n            this.stopSmoothing();\n            this.stopAnimation();\n            if (this.touchDragCloud) {\n                this.touchDragCloud.removeEvent();\n            }\n            if (this.hotspots) { this.hotspots.hideActiveHotspotBox(true); }\n\n            this.customActionWas = true;\n            basePercent = false;\n            this.pinchCloud.scale = e.scale;\n            compensation = 1;\n\n            if (this.openedImg) {\n                compensation = this.zoom.scale.x;\n                if (baseMin === $J.U) {\n                    setDefaultsValues();\n                }\n\n                compensation /= baseMin;\n            }\n            this.sendEvent('pinchStart');\n        };\n\n        this.pinchCloud.onPinchResize = (e) => {\n            if (this.pinchCloud.pinch && !this.pinchCloud.block) {\n                if (this.zoom && this.fullscreenState === globalVariables.FULLSCREEN.OPENED && this.openedImg) {\n                    this.pinchCloud.scale = e.scale;\n                    this.zoom.setBasePercent(e.centerPoint);\n                }\n            }\n        };\n\n        this.pinchCloud.onPinchMove = (e) => {\n            if (this.pinchCloud.pinch && !this.pinchCloud.block) {\n                if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED || !this.isFullscreenEnabled) {\n                    if (!this.openedImg) {\n                        if (e.scale > OPEN_ZOOM) {\n                            this.firstUserInteraction = true;\n                            this.openLens(e.centerPoint.x, e.centerPoint.y, false, 'zero');\n\n                            setDefaultsValues();\n                            compensation = 1;\n                        } else if (e.scale < FS_OUT) {\n                            this.pinchCloud.block = true;\n                            this.sendEvent('fullscreenOut');\n                        }\n                    } else if (this.zoom) {\n                        if (!basePercent) {\n                            basePercent = true;\n                            this.zoom.setBasePercent(e.centerPoint);\n                        } else {\n                            scale = e.scale;\n                            scale *= baseMin;\n\n                            if (max < scale) {\n                                max = scale;\n\n                                min = baseMin;\n                                minCompensation = 1;\n\n                                maxCompensation = saveValue / (max - baseMin);\n                            }\n\n                            if (min > scale) {\n                                min = scale;\n\n                                max = 1;\n                                maxCompensation = 1;\n\n                                minCompensation = baseMin / min;\n                            }\n\n                            scale *= compensation;\n\n                            scale = (baseMin + (scale - baseMin) * maxCompensation) * minCompensation;\n\n                            this.zoom.setScale(scale, e.centerPoint.x, e.centerPoint.y);\n                        }\n                        this.pinchCloud.scale = e.scale;\n                    }\n                } else if (e.scale >= FS_IN) {\n                    this.pinchCloud.block = true;\n                    this.sendEvent('fullscreenIn');\n                }\n            }\n        };\n\n        this.pinchCloud.onPinchEnd = (e) => {\n            if (this.pinchCloud.pinch) {\n                this.pinchCloud.pinch = false;\n                if (this.openedImg) {\n                    this.activateSpin();\n                }\n\n                setTimeout(() => {\n                    if (this.touchDragCloud) {\n                        this.touchDragCloud.addEvent();\n                    }\n                }, 16);\n\n                this.sendEvent('pinchEnd');\n            }\n\n            if (this.openedImg) {\n                this.pinchCloud.removeEvent();\n            }\n\n            this.pinchCloud.block = false;\n            this.pinchCloud.scale = 0;\n        };\n    }\n\n    onStopContext() {\n        this.stopSmoothing();\n        this.stopAnimation();\n        if (this.hint) { this.hint.hide(); }\n    }\n\n    onSecondSelectorClick() {\n        this.zoomOut();\n    }\n\n    setGlobalEvents() {\n        this.on('zoomUp', (e) => {\n            const pos = e.data;\n            e.stop();\n\n            if (this._isReady && this.zoom) {\n                if (!this.isDragMove && this.isFullscreenActionEnded()) {\n                    this.firstUserInteraction = true;\n                    this.openLens(pos.x, pos.y);\n                }\n            }\n        });\n\n        this.on('zoomDown', (e) => {\n            e.stop();\n\n            if (this._isReady && this.zoom && this.isZoomed()) {\n                this.zoom.hide();\n            }\n        });\n    }\n\n    normalizeOptions() {\n        if (!this.option('autospin.enable')) {\n            this.option('autospin.duration', 0);\n        }\n\n        if (this.option('swapSides')) {\n            ['start', 'loop', 'increment', 'reverse', 'sensitivity'].forEach((param) => {\n                const tmp = this.option('row.' + param);\n                this.option('row.' + param, this.option('column.' + param));\n                this.option('column.' + param, tmp);\n            });\n        }\n\n        ['onStart', 'onVisible', 'onInactive'].forEach((v) => {\n            const o = 'hint.' + v + '.effect';\n            if (this.option(o) === 'none') {\n                this.option(o, false);\n            }\n        });\n\n        if ($J.browser.mobile) {\n            if (this.option('initialize') !== 'load') {\n                this.option('initialize', 'tap');\n            }\n        }\n\n        this.setDefaultZoomOptions();\n\n        if (this.option('zoom.enable') && this.option('zoom.ratio') !== 'max' && this.option('zoom.ratio') < globalVariables.MIN_RATIO) {\n            this.option('zoom.enable', false);\n        }\n    }\n\n    setDefaultZoomOptions() {\n        super.setDefaultZoomOptions();\n\n        this.defaultZoomOptions = $J.extend(this.defaultZoomOptions, {\n            tiles: this.option('zoom.tiles'),\n            pan: this.option('zoom.pan'),\n            trigger: $J.browser.mobile ? 'dblclick' : 'click',\n            type: 'inner',\n            height: 'auto',\n        });\n    }\n\n    loadFirstPartOfImages() {\n        if (!this.firstPartOfImagesLoaded) {\n            this.firstPartOfImagesLoaded = true;\n            this.startLoadingTime = $J.now();\n\n            this.imagesMap.loadFirstPartOfImages({\n                width: this.currentImageSize.width,\n                height: this.currentImageSize.height,\n                dppx: this.dppx\n            });\n\n            if (this.loader) {\n                this.loader.show();\n            }\n        }\n    }\n\n    isThumbnailGif() {\n        return this.option('thumbnail.type') === 'gif';\n    }\n\n    init() {\n        if (!this.infoSize || this.isInited) { return; }\n\n        this.isInited = true;\n\n        // this.setActiveAction();\n\n        this.initNameEvent = null;\n        this.initFnEvent = (e) => {\n            e.stop();\n            this.coreNode.removeEvent(e.type, this.initFnEvent);\n            if (this.activatedCurtain) {\n                this.activatedCurtain.activatedCurtain.removeEvent(this.initNameEvent, this.initFnEvent);\n            }\n            this.loadFirstPartOfImages();\n        };\n\n        switch (this.option('initialize')) {\n            case 'hover':\n                this.initNameEvent = 'mouseover';\n                break;\n            case 'click':\n                this.initNameEvent = 'btnclick';\n                break;\n            case 'tap':\n                this.initNameEvent = 'tap';\n                break;\n            default:\n        }\n\n        if (this.initNameEvent) {\n            this.coreNode.addEvent(this.initNameEvent, this.initFnEvent);\n            if (this.activatedCurtain) {\n                this.activatedCurtain.activatedCurtain.addEvent(this.initNameEvent, this.initFnEvent);\n            }\n            this.loadFirstImage();\n        } else {\n            if (this.isInView && this.isSlideShown) {\n                this.loadFirstPartOfImages();\n            }\n        }\n\n        this.sendEvent('init');\n    }\n\n    run(isShown, preload, firstSlideAhead) {\n        const result = super.run(isShown, preload, firstSlideAhead);\n\n        if (result) {\n            $J.W.addEvent('resize', this.windowResizeCallback);\n            this.initCanvas();\n            this.startGettingInfo();\n        }\n\n        return result;\n    }\n\n    initCanvas() {\n        this.canvas = $J.$new('canvas');\n\n        if (this.canvas.node.getContext) {\n            this.ctx = this.canvas.node.getContext('2d');\n\n            // for (let i = 0; i < 2; i++) {\n            //     const canvas = $J.$new('canvas');\n            //     this.additionalCanvases.push({\n            //         node: canvas,\n            //         ctx: canvas.node.getContext('2d')\n            //     });\n            // }\n        }\n\n        const alt = this.getRightAlt();\n        if (alt) {\n            this.canvas.attr('role', 'img');\n            this.canvas.attr('aria-label', alt);\n            this.canvas.attr('alt', alt);\n        }\n\n        let w = this.infoSize.width;\n        let h = this.infoSize.height;\n        const size = this.coreNode.getSize();\n\n        if (w < size.width) { w = size.width; }\n        if (h < size.height) { h = size.height; }\n\n        // broke html if image less then viewer\n        // I do not know why I added it\n        // this.coreNode.setCss({\n        //     'max-width': w + 'px',\n        //     'max-height': h + 'px'\n        // });\n\n        if (size.height === 0) {\n            this.cssId = $J.addCSS('#' + this.id + ' .' + CSS_CLASS_NAME + ':before', { 'padding-top': ((this.infoSize.height / this.infoSize.width) * 100) + '%' }, this.id + '-css');\n            size.height = size.width * (this.infoSize.height / this.infoSize.width);\n        }\n\n        this.currentSize = helper.spinLib.calcProportionSize(size, this.infoSize);\n        this.getDPPX(this.currentSize);\n        this.standardSize.width = this.currentSize.width;\n        this.standardSize.height = this.currentSize.height;\n        this.setImageSize();\n\n        this.canvas.setCss({\n            top: '0',\n            left: '0',\n            zIndex: 10,\n            position: 'absolute'\n        });\n        this.setCanvasSize();\n        this.canvasContainer.append(this.canvas);\n        this.coreNode.append(this.canvasContainer);\n\n        if (this.isInView && (this.preload || this.isSlideShown)) {\n            this.loadFirstImage();\n        }\n    }\n\n    loadContent() { this.loadFirstImage(); }\n\n    loadFirstImage() {\n        if (!this.firstImageLoaded && this.isInfoLoaded) {\n            // fix for if the viewer was with display none\n            if (!this.currentImageSize.width || !this.currentImageSize.height) {\n                this.currentSize = helper.spinLib.calcProportionSize(this.coreNode.getSize(), this.infoSize);\n                this.getDPPX(this.currentSize);\n\n                if (this.currentSize.width && this.currentSize.height) {\n                    this.setImageSize();\n                    if (this.isStarted && this.currentImageSize.width && this.currentImageSize.height) {\n                        this.setCanvasSize();\n                        this.draw();\n                    }\n                }\n            }\n\n            if (!this.currentImageSize.width || !this.currentImageSize.height) { return; }\n\n            this.waitToStart.start();\n            this.firstImageLoaded = true;\n            this.imagesMap.loadFirstImage({\n                width: this.currentImageSize.width,\n                height: this.currentImageSize.height,\n                dppx: this.dppx\n            });\n        }\n    }\n\n    getRightAlt() {\n        let description = null;\n        if (!this.dataAlt && this.meta && this.meta.description) {\n            description = this.meta.description;\n        } else {\n            description = this.dataAlt;\n        }\n\n        return description;\n    }\n\n    createMap(quality, hdQuality, isHDQualitySet) {\n        const option = this.option;\n        let loadingSchema = null;\n\n        if (option('autospin.enable')) {\n            loadingSchema = option('autospin.type');\n        } else if (option('hint.onStart.enable') && option('hint.onStart.effect')) {\n            loadingSchema = option('hint.onStart.effect');\n        }\n\n        this.imagesMap = new ImagesMap({\n            url: this.configURL,\n            imageSettings: this.imageSettings,\n            layers: this.layers,\n            swapSides: option('swapSides'),\n            startColumn: option('column.start'),\n            startRow: option('row.start'),\n            reverseColumn: option('column.reverse'),\n            reverseRow: option('row.reverse'),\n            loopColumn: option('column.loop'),\n            loopRow: option('row.loop'),\n            rowSpeed: option('row.sensitivity'),\n            columnSpeed: option('column.sensitivity'),\n            columnIncrement: option('column.increment'),\n            rowIncrement: option('row.increment'),\n            loadingSchema: loadingSchema,\n            quality: quality,\n            hdQuality: hdQuality,\n            isHDQualitySet: isHDQualitySet,\n            referrerPolicy: this.referrerPolicy\n        });\n        this.imagesMap.setParent(this);\n\n        this.userColumn = this.imagesMap.getStartColumn();\n        this.userRow = this.imagesMap.getStartRow();\n\n        this.on('mapFirstImageLoaded', (e) => {\n            e.stopAll();\n\n            if (this.placeholder) {\n                this.placeholder.setCssProp('display', 'none');\n            }\n\n            if (!this.isInited) {\n                if (this.firstImageLoaded) {\n                    this.draw();\n                    this.canvas.setCssProp('transition', 'none');\n                    this.canvas.getSize();\n                    this.canvas.setCssProp('transition', '');\n                }\n\n                if (this.loader) { this.loader.progress(); }\n\n                this.setCanvas().finally(() => { this.init(); });\n            }\n\n            if (this.hotspots) {\n                const img = this.imagesMap.getCurrentImage({ width: this.currentSize.width, height: this.currentSize.height });\n                this.hotspots.setFramePosition(img.row, img.col);\n                this.hotspots.updateAndShow();\n\n                if (this.isInView && this.isSlideShown) {\n                    this.hotspots.showNeededElements();\n                }\n            }\n        });\n\n        this.on('mapImagesReady', (e) => {\n            e.stopAll();\n            this.imagesMap.loadOtherImages({\n                width: this.currentImageSize.width,\n                height: this.currentImageSize.height,\n                dppx: this.dppx\n            });\n            this.calcMinSizeForDrag();\n            const now = $J.now();\n            this.sendStats('framesPreloaded', now - this.sessionStartTime, { duration: now - this.startLoadingTime });\n\n            this.done();\n            this.sendContentLoadedEvent();\n        });\n\n        this.on('mapImageLoaded', (e) => {\n            e.stopAll();\n\n            if (this.loader) {\n                if (!this.loadedImages[e.data.row][e.data.col]) {\n                    this.loadedImages[e.data.row][e.data.col] = true;\n                    this.loader.progress();\n                }\n            }\n\n            if (!e.data.error) {\n                if (e.data.isCurrent) {\n                    if (e.data.callbackData.lens) {\n                        // if (this.option('zoom.magnify.enable') && this.zoom) { // the option was removed\n                        if (this.zoom) {\n                            if ((this.zoom.isShown() || this.zoom.isShowing()) && this.openedImg) {\n                                if (this.openedImg.col === e.data.col && this.openedImg.row === e.data.row) {\n                                    this.zoom.setImage(e.data);\n                                }\n                            }\n                        }\n                    } else {\n                        if (this.lastImg && (this.lastImg.width !== e.data.width || this.lastImg.height !== e.data.height) && this.firstImageLoaded) {\n                            this.draw();\n                        }\n                    }\n                }\n            }\n        });\n\n        this.on('mapAllImagesLoaded', (e) => {\n            e.stopAll();\n\n            const now = $J.now();\n            this.sendStats('framesLoaded', now - this.sessionStartTime, {\n                duration: now - this.startLoadingTime\n            });\n\n            if (this.loader && this.loader.getProgressState() !== 2) {\n                this.loader.hide();\n            }\n        });\n\n        this.on('frameChange', (e) => {\n            e.stop();\n\n            if (this._isReady) {\n                this.sendEvent('frameChange', {\n                    row: e.data.row,\n                    column: e.data.column\n                });\n            }\n        });\n\n        this.imagesMap.loadImageInfo()\n            .then((originSize) => {\n                this.isInfoLoaded = true;\n                const size = $J.extend({}, originSize.size);\n                this.infoSize = size;\n\n                if (this.hotspots) {\n                    this.hotspots.setOriginImageSize(this.infoSize.width, this.infoSize.height);\n                }\n            })\n            .catch((err) => {\n                this.isInfoLoaded = true;\n            });\n    }\n\n    getSelectorImgUrl(data) {\n        return new Promise((resolve, reject) => {\n            this.getInfo()\n                .then(() => {\n                    this.imagesMap.loadImageInfo()\n                        .then((originSize) => {\n                            this.waitToStart.wait(() => {\n                                const defOpt = this.imagesMap.setImageSettings({ dppx: this.dppx });\n                                if (defOpt.src) { data.src = defOpt.src; }\n                                data.srcset = defOpt.srcset;\n\n                                if (this.option('thumbnail.type') === 'gif') {\n                                    data.originUrl = this.configURL.split('?')[0];\n                                    data.imageSettings = { image: 24 };\n                                    if (this.option('thumbnail.gifParams')) {\n                                        data.imageSettings = helper.paramsFromQueryString(this.option('thumbnail.gifParams'));\n                                    }\n                                }\n\n                                resolve($J.extend(this.imagesMap.getThumbnail(data), {\n                                    alt: this.getRightAlt()\n                                }));\n                            });\n                        })\n                        .catch(reject);\n                })\n                .catch(reject);\n        });\n    }\n\n    getInfoSize() {\n        return new Promise((resolve, reject) => {\n            this.getInfo()\n                .then(() => {\n                    this.imagesMap.loadImageInfo()\n                        .then(resolve)\n                        .catch(reject);\n                })\n                .catch(reject);\n        });\n    }\n\n    onHotspotActivate(data) {\n        this.customActionWas = true;\n        this.stopAnimation();\n        super.onHotspotActivate(data);\n    }\n\n    onHotspotDeactivate(data) {\n        super.onHotspotDeactivate(data);\n        this.animateWithDelay();\n    }\n\n    createHint() {\n        if (!this.option('hint.message.enable')) { return; }\n\n        let hintMessage = '<div class=\"spin-hint-animation\"></div>';\n        const horizontal = 'spin-hint-horizontal-animation';\n        const vertical = 'spin-hint-vertical-animation';\n        let hintClass;\n\n        hintMessage += '<span>';\n        hintMessage += this.option('hint.message.text');\n        hintMessage += '</span>';\n\n        switch (this.imagesMap.getHintType()) {\n            case 'multi-row':\n                hintClass = horizontal + ' ' + vertical;\n                break;\n            case 'row':\n                hintClass = horizontal;\n                break;\n            case 'col':\n                hintClass = vertical;\n                break;\n            // no default\n        }\n\n        const hintOptions = {\n            html: hintMessage,\n            additionalClass: hintClass\n        };\n\n        if ($J.browser.mobile || this.option('autospin.enable')) {\n            hintOptions.autohide = 0;\n        }\n\n        this.hint = new Hint(this.coreNode, hintOptions);\n\n        if (this.isSlideShown && this.isInView && this.option('autospin.type') === 'infinite') {\n            this.showHint();\n        }\n    }\n\n    getImageClassContainer() {\n        return this.imagesMap;\n    }\n\n    createZoom() {\n        let result = null;\n        if (!this.destroyed && this.option('zoom.enable')) {\n            result = super.createZoom(this.coreNode, {});\n\n            if (this.zoomContainer) {\n                this.zoom.setLensContainer(this.zoomContainer);\n            }\n\n            this.coreNode.addEvent('btnclick dbltap', (e) => {\n                if (this.isFullscreenActionEnded()) {\n                    this.firstUserInteraction = true;\n                    this.openLens(e.x, e.y);\n                }\n            });\n\n            if ($J.browser.mobile) {\n                // this.setLongTapEvents();\n            }\n        }\n\n        return result;\n    }\n\n    onZoomGetImage(e) {\n        super.onZoomGetImage(e);\n\n        if (this.checkImage(e.data, e.data.dontLoad)) {\n            this.zoom.setImage(this.imagesMap.getCurrentImage(e.data));\n        } else {\n            this.imagesMap.loadImage(e.data);\n        }\n    }\n\n    onZoomCancelLoadingOfTiles(e) {\n        super.onZoomGetImage(e);\n        e.data.round = false;\n        this.imagesMap.cancelLoadingImage(e.data);\n    }\n\n    onZoomBeforeShow(e) {\n        this.canvas.addClass(this.zoomClassName);\n        if (this.hotspots) {\n            this.hotspots.hideAll();\n        }\n    }\n\n    onZoomShown(e) {\n        if (this.isSlideShown) {\n            this.startTimeForZommEvent = $J.now();\n\n            if (this.openedImg) {\n                this.sendStats('zoomIn', $J.now() - this.sessionStartTime, {\n                    frame: {\n                        row: this.openedImg.row,\n                        column: this.openedImg.col\n                    },\n                    clientX: e.data.clientPosition.x,\n                    clientY: e.data.clientPosition.y,\n                    pageX: e.data.pagePosition.x,\n                    pageY: e.data.pagePosition.y\n                });\n            }\n\n            this.sendEvent('zoomIn');\n        } else {\n            this.zoom.hide(true);\n        }\n    }\n\n    onZoomHidden(e) {\n        if (this.openedImg) {\n            this.canvas.removeClass(this.zoomClassName);\n\n            const now = $J.now();\n            this.sendStats('zoomOut', now - this.sessionStartTime, {\n                duration: now - this.startTimeForZommEvent,\n                frame: {\n                    row: this.openedImg.row,\n                    column: this.openedImg.col\n                },\n                clientX: e.data.clientPosition.x,\n                clientY: e.data.clientPosition.y,\n                pageX: e.data.pagePosition.x,\n                pageY: e.data.pagePosition.y\n            });\n\n            if (this.hotspots) {\n                this.hotspots.showAll();\n                if (this.isInView && this.isSlideShown) {\n                    this.hotspots.showNeededElements();\n                }\n            }\n        }\n\n        this.sendEvent('zoomOut');\n\n        if (this.isSlideShown) {\n            this.animateWithDelay();\n        }\n\n        this.startTimeForZommEvent = null;\n        this.openedImg = null;\n        if (this.pinchCloud) {\n            this.pinchCloud.addEvent();\n        }\n    }\n\n    setLongTapEvents() {\n        const pe = $J.W.node.navigator.pointerEnabled;\n        let move = false;\n        let touchDown = false;\n\n        this.coreNode.addEvent('touchstart ' + (pe ? 'pointerdown' : 'MSPointerDown'), (e) => {\n            if (!this.isDragMove && !this.pinchCloud.pinch && this.isFullscreenActionEnded()) {\n                clearTimeout(this.longTapTimer);\n                this.longTapTimer = setTimeout(() => {\n                    e.stop();\n                    move = true;\n                    this.customActionWas = true;\n                    const p  = e.getPageXY();\n                    if (this.touchDragCloud) {\n                        this.touchDragCloud.removeEvent();\n                    }\n                    this.firstUserInteraction = true;\n                    this.openLens(p.x, p.y, true);\n                }, 500);\n                touchDown = true;\n            }\n        });\n\n        this.coreNode.addEvent('touchmove ' + (pe ? 'pointermove' : 'MSPointerMove'), (e) => {\n            if (move && this.isFullscreenActionEnded()) {\n                e.stop();\n                const p  = e.getPageXY();\n                this.zoom.customMove(p.x, p.y);\n            }\n        }, 1);\n\n        this.coreNode.addEvent('touchend ' + (pe ? 'pointerup' : 'MSPointerUp'), (e) => {\n            if (touchDown) {\n                e.stop();\n                touchDown = false;\n                clearTimeout(this.longTapTimer);\n            }\n            if (move && this.isFullscreenActionEnded()) {\n                e.stop();\n                move = false;\n                // clearTimeout(this.longTapTimer);\n                this.zoom.hide(true);\n                if (this.touchDragCloud) {\n                    this.touchDragCloud.addEvent();\n                }\n            }\n        });\n    }\n\n    getZoomSize() {\n        const r = this.option('zoom.ratio');\n        const originWidth = this.infoSize.width;\n        const originHeight = this.infoSize.height;\n        let size = {\n            width: originWidth,\n            height: originHeight\n        };\n\n        if (r !== 'max') {\n            size.width = this.currentImageSize.width * r;\n            size.height = this.currentImageSize.height * r;\n            size = ResponsiveImage.roundImageSize(size);\n        }\n\n        size.width = Math.min(originWidth, size.width);\n        size.height = Math.min(originHeight, size.height);\n\n        return {\n            width: size.width,\n            height: size.height,\n            originWidth: originWidth,\n            originHeight: originHeight\n        };\n    }\n\n    openLens(x, y, longTap, toLevel) {\n        let result = false;\n\n        if (this.isZoomSizeExist()) {\n            const zoomSize = this.getZoomSize();\n            result = true;\n            this.stopSmoothing();\n            this.stopAnimation();\n            if (this.hint) { this.hint.hide(); }\n\n            if (this.hotspots) {\n                this.hotspots.hideActiveHotspotBox(true);\n            }\n\n            let round = false;\n            let lensImgWidth;\n            let lensImgHeight;\n\n            if (this.isFullscreenActionEnded() && this.imagesMap.isLoaded({ width: this.currentImageSize.width, height: this.currentImageSize.height })) {\n                lensImgWidth = this.currentImageSize.width;\n                lensImgHeight = this.currentImageSize.height;\n                round = true;\n            } else {\n                lensImgWidth = this.lastImg.serverWidth;\n                lensImgHeight = this.lastImg.serverHeight;\n            }\n\n            const img = this.imagesMap.getCurrentImage({\n                width: lensImgWidth,\n                height: lensImgHeight,\n                round: round\n            });\n\n            this.openedImg = img;\n\n            if (x === undefined) {\n                result = this.zoom.showCenter(img.node, zoomSize);\n            } else {\n                result = this.zoom.show(img.node, zoomSize, x, y, longTap, toLevel);\n            }\n        }\n\n        return result;\n    }\n\n    done() {\n        const rows = this.imagesMap.getCountOfRows();\n        const cols = this.imagesMap.getCountOfFrames();\n\n        if (this.loader) {\n            this.loader.setMaxOpacity(0.5);\n        }\n\n        this.setBrowserEvents();\n        this.createHint();\n        this.createZoom();\n        this.setZoomEvents();\n\n        if (rows > 1 && cols > 1) {\n            this.coreNode.setCssProp('touch-action', 'none');\n        } else {\n            if (rows > 1) {\n                this.coreNode.setCssProp('touch-action', 'pan-x');\n            } else {\n                this.coreNode.setCssProp('touch-action', 'pan-y');\n            }\n        }\n\n        this.boxBoundaries = this.coreNode.getRect();\n\n        this.animate('start');\n\n        if (this.accountInfo.branded) {\n            const nodeWithSirvClassName = globalFunctions.getNodeWithSirvClassName(this.instanceNode) || $J.D.node.head || $J.D.node.body;\n            globalFunctions.rootDOM.showSirvAd(nodeWithSirvClassName, this.instanceNode, BRAND_LANDING, '360-degree viewer by Sirv');\n        }\n\n        this.sendStats('viewerReady', $J.now() - this.sessionStartTime, {\n            rows: this.imagesMap.getCountOfRows(),\n            columns: this.imagesMap.getCountOfFrames(),\n            viewerSize: {\n                width: this.currentSize.width,\n                height: this.currentSize.height\n            }\n        });\n\n        if (this.isZoomSizeExist()) {\n            this.coreNode.addClass(globalVariables.CSS_CURSOR_ZOOM_IN);\n        }\n\n        this.setGlobalEvents();\n        this.turnOnOff();\n        super.done();\n\n        if (this.hotspots) {\n            if (!this.hotspots.getHotspots().length) {\n                this.hotspots.setInstanceComponentNode(this.canvasContainer);\n            }\n            this.hotspots.setContainerSize(this.canvasContainer.node.getBoundingClientRect());\n        }\n    }\n\n    setBrowserEvents() {\n        this.setDrag(this.coreNode);\n        this.setMouseWheel(this.coreNode);\n    }\n\n    setCanvas() {\n        if (!this.canvasPromise) {\n            let _resolve;\n            let canvasOpacityHandler;\n            let _timer = null;\n\n            this.canvasPromise = helper.makeQueryblePromise(new Promise((resolve1, reject) => {\n                _resolve = resolve1;\n                if (this.firstImageLoaded) {\n                    this.draw();\n                }\n\n                if (!this.isInView || !this.isSlideShown) {\n                    this.canvas.addClass(P + '-shown');\n                    resolve1();\n                } else {\n                    _timer = setTimeout(() => { // some times transitionend does not work\n                        if (this.canvas) { // we can remove slide from slider by API much faster then this animation\n                            this.canvas.removeEvent('transitionend', canvasOpacityHandler);\n                        }\n                        resolve1();\n                    }, 1100);\n\n                    canvasOpacityHandler = (e) => {\n                        if (e.propertyName === 'opacity') {\n                            e.stop();\n                            clearTimeout(_timer);\n                            this.canvas.removeEvent(e.type, canvasOpacityHandler);\n                            resolve1();\n                        }\n                    };\n\n                    this.canvas.addEvent('transitionend', canvasOpacityHandler);\n                    this.canvas.getSize();\n                    this.canvas.addClass(P + '-shown');\n                }\n            }));\n\n            this.canvasPromise.resolve = () => {\n                this.canvas.removeEvent('transitionend', canvasOpacityHandler);\n                _resolve();\n            };\n        }\n\n        return this.canvasPromise;\n    }\n\n    clearCanvas() {\n        if (this.ctx) {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n    }\n\n    draw(neededSize) {\n        if (this.ctx) {\n            const size = neededSize || this.currentImageSize;\n\n            const imageData = {\n                width: size.width,\n                height: size.height,\n                maxSize: true,\n                dppx: this.dppx\n            };\n\n            const img = this.imagesMap.getCurrentImage(imageData);\n\n            this.lastImg = img;\n\n            if (!img) { return; }\n\n            this.ctx.imageSmoothingQuality = 'high';\n\n            if (this.hotspots) {\n                this.hotspots.changeHotspotsPosition(img.row, img.col);\n            }\n\n            this.clearCanvas();\n\n            this.canvas.node.width = img.node.node.width;\n            this.canvas.node.height = img.node.node.height;\n\n            this.ctx.drawImage(img.node.node, 0, 0, this.canvas.node.width, this.canvas.node.height);\n        }\n    }\n\n    /*\n    draw(neededSize) {\n        const size = neededSize || this.currentImageSize;\n\n        const imageData = {\n            width: size.width,\n            height: size.height,\n            maxSize: true,\n            dppx: this.dppx\n        };\n\n        const img = this.imagesMap.getCurrentImage(imageData);\n        const ac = this.additionalCanvases;\n        let steps = 0;\n        let posX;\n        let posY;\n        let i;\n\n        if (!img || !size.width || !size.height) { return; }\n\n        this.lastImg = img;\n\n        // s.width = Math.min(s.width * 2, img.width * $J.DPPX);\n        // s.height = Math.min(s.height * 2, img.height * $J.DPPX);\n\n        const s = {\n            width: img.width * this.dppx,\n            height: img.height * this.dppx\n        };\n\n        // steps = Math.ceil(Math.log(Math.max(img.width / s.width, img.height / s.height)) / Math.LN2);\n        steps = Math.ceil(Math.log(Math.max(s.width / img.width, s.height / img.height)) / Math.LN2);\n\n        ac[0].node.node.width = s.width;\n        ac[0].node.node.height = s.height;\n        ac[1].node.node.width = s.width;\n        ac[1].node.node.height = s.height;\n\n        ac[0].ctx.drawImage(img.node.node, 0, 0, s.width, s.height);\n\n        for (i = steps - 1; i > 0; i--) {\n            // Scale down in tmp canvas\n            ac[1].node.node.width *= 0.5;\n            ac[1].node.node.height *= 0.5;\n            ac[1].ctx.drawImage(ac[0].node.node, 0, 0, ac[0].node.node.width, ac[0].node.node.height,\n                                        0, 0, ac[1].node.node.width, ac[1].node.node.height);\n\n            // Copy back\n            ac[0].node.node.width *= 0.5;\n            ac[0].node.node.height *= 0.5;\n            ac[0].ctx.drawImage(ac[1].node.node, 0, 0, ac[1].node.node.width, ac[1].node.node.height,\n                                        0, 0, ac[0].node.node.width, ac[0].node.node.height);\n        }\n\n        // this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        this.canvas.node.width = s.width;\n        this.canvas.node.height = s.height;\n\n        // this.canvas.setCss({\n        //     width: (s.width / 2) + 'px',\n        //     height: (s.height / 2) + 'px'\n        // });\n\n        if (this.hotspots) {\n            this.hotspots.changeHotspotsPosition(img.row, img.col);\n        }\n\n        this.clearCanvas();\n\n        if (this.ctx) {\n            posX = calcScalePosition(this.scale, s.width);\n            posY = calcScalePosition(this.scale, s.height);\n\n            this.ctx.drawImage(ac[0].node.node, 0, 0, ac[0].node.node.width, ac[0].node.node.height, posX, posY, s.width * this.scale, s.height * this.scale);\n        }\n    }\n    */\n\n    setCanvasSize() {\n        const s = this.currentSize;\n\n        this.canvas.setCss({\n            width: s.width,\n            height: s.height\n        });\n\n        this.canvasContainer.setCss({\n            width: s.width,\n            height: s.height\n        });\n\n        this.canvas.width = s.width;\n        this.canvas.height = s.height;\n    }\n\n    calcMinSizeForDrag() {\n        const s = this.currentSize;\n        this.minSizeOfFrame = this.imagesMap.pixelPerFrame(s.width);\n        this.minSizeOfRow = this.imagesMap.pixelPerRow(s.height);\n    }\n\n    smoothing(distance, time, direction) {\n        // direction - next, prev, down, up\n        if (!time) { return; }\n        let speed = distance / time;\n        const move = () => {\n            speed *= 0.97;\n            this.smooseTimeout = setTimeout(() => {\n                this.imagesMap.prepareFutureImage(direction);\n                this.imagesMap.setPreparedFutureImage();\n                this.draw();\n                if (speed > 0.3) { move(); }\n            }, (this.minSizeOfFrame / speed));\n        };\n\n        if (!this.isSmoothing) {\n            this.isSmoothing = true;\n            move();\n        }\n    }\n\n    stopSmoothing() {\n        if (this.isSmoothing) {\n            this.isSmoothing = false;\n            clearTimeout(this.smooseTimeout);\n            this.smooseTimeout = null;\n            this.imagesMap.resetPreparedImage();\n        }\n    }\n\n    animateWithDelay(action) {\n        let animateAction = 'inactive';\n        if (action) { animateAction = action; }\n\n        if (this.option('autospin.enable')) {\n            clearTimeout(this.autospinResumeTimer);\n            this.autospinResumeTimer = setTimeout(() => {\n                this.animate(animateAction);\n            }, this.option('autospin.resume'));\n        } else {\n            this.animate(animateAction);\n        }\n    }\n\n    setDrag(node) {\n        const rows = this.imagesMap.getCountOfRows();\n        const cols = this.imagesMap.getCountOfFrames();\n        const multi = rows > 1 && cols > 1;\n        const sphereValues = {\n            x: {\n                minSize: this.minSizeOfFrame,\n                count: cols\n            },\n\n            y: {\n                minSize: this.minSizeOfRow,\n                count: rows\n            }\n        };\n\n        const onAnyDrag = this.option('freeDrag');\n        let lastPoint = { x: 0, y: 0 };\n        let lastPartOfDistance = { x: 0, y: 0 };\n        let canMoveAxis = null;\n        if (!multi) {\n            canMoveAxis = (cols > 1) ? 'x' : 'y';\n        }\n\n        let lastTime = null;\n        let axis;\n        const fns = {};\n        let otherAxis;\n        let queue = {\n            x: { next: 0, prev: 0 },\n            y: { up: 0, down: 0 }\n        };\n\n        let startTime;\n        let rotate = false;\n        const rotateDebounce = helper.debounce(() => { rotate = false; }, 50);\n\n        const G = 9.8;\n        const COEFFICIENT_OF_FRICTION = 0.00065;\n\n        const FRICTION_FORCE = {\n            x: COEFFICIENT_OF_FRICTION * cols * G,\n            y: COEFFICIENT_OF_FRICTION * rows * G\n        };\n\n        const DIRECTIONS = {\n            x: ['prev', 'next'],\n            y: ['down', 'up']\n        };\n\n        if (!multi && onAnyDrag) {\n            if (cols > 1) {\n                DIRECTIONS.y = DIRECTIONS.x;\n            } else {\n                DIRECTIONS.x = DIRECTIONS.y;\n            }\n        }\n\n        const onDrag = (e) => {\n            clearTimeout(this.longTapTimer);\n            fns[e.state](e);\n        };\n\n        const addPoint = (_axis, _speed, _distance, _direction) => {\n            queue[_axis][_direction] += _distance;\n        };\n\n        const getPoints = (_axis) => {\n            const a = queue[_axis];\n            let result;\n\n            const dir = (_axis === 'x') ? ['next', 'prev'] : ['up', 'down'];\n\n            if (a[dir[0]] > a[dir[1]]) {\n                result = {\n                    distance: a[dir[0]],\n                    direction: dir[0]\n                };\n            } else {\n                result = {\n                    distance: a[dir[1]],\n                    direction: dir[1]\n                };\n            }\n\n            return result;\n        };\n\n        const getCountOfItems = (frictionForce, weight, distance, time, sizeOfItem) => {\n            let result;\n\n            // eslint-disable-next-line no-restricted-properties\n            result = (weight * Math.pow(distance / time, 2)) / (2 * frictionForce);\n            result = Math.floor(result / sizeOfItem);\n\n            return result;\n        };\n\n        const getTime = (frictionForce, weight, distance, time) => {\n            return (weight * (distance / time)) / frictionForce;\n        };\n\n        const getDirection = (value, _axis) => {\n            return DIRECTIONS[_axis][value >= 0 ? 0 : 1];\n        };\n\n        fns.dragstart = (e) => {\n            this.firstUserInteraction = true;\n            this.isDragMove = true;\n            this.stopSmoothing();\n            this.stopAnimation();\n            if (this.hint) { this.hint.hide(); }\n            if (this.hotspots) {\n                this.hotspots.hideNeededElements(true);\n            }\n\n            this.userColumn = this.imagesMap.getStartColumn();\n            this.userRow = this.imagesMap.getStartRow();\n\n            if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED) {\n                e.stop();\n            }\n\n            lastPoint.x = e.x;\n            lastPoint.y = e.y;\n            lastTime = e.timeStamp;\n\n            startTime = $J.now();\n\n            const t = $J.now() - this.sessionStartTime;\n            this.sendStats('dragStart', t, {\n                clientX: e.x - this.boxBoundaries.left,\n                clientY: e.y - this.boxBoundaries.top,\n                pageX: e.x,\n                pageY: e.y\n            });\n\n            this.sendEvent('spinStart');\n            this.sendEvent('rotate');\n            this.sendStats('rotate', t, {});\n\n            this.pinchCloud.removeEvent();\n        };\n\n        fns.dragend = (e) => {\n            let time;\n            let values;\n            let countOfItems;\n            let timeOfAnimation;\n            let timeOfAnimation2;\n            const animationValues = [];\n\n            if (this.isDragMove) {\n                e.stop();\n                this.isDragMove = false;\n                rotateDebounce.cancel();\n\n                if (rotate && canMoveAxis === axis || rotate && (multi || onAnyDrag)) {\n                    time = +new Date() - startTime;\n                    values = getPoints(axis);\n                    countOfItems = getCountOfItems(FRICTION_FORCE[axis], cols, values.distance, time, sphereValues[axis].minSize);\n                    timeOfAnimation = getTime(FRICTION_FORCE[axis], cols, values.distance, time);\n\n                    animationValues.push({\n                        items: countOfItems,\n                        direction: values.direction\n                    });\n\n                    if (multi) {\n                        values = getPoints(otherAxis);\n                        countOfItems = getCountOfItems(FRICTION_FORCE[otherAxis], cols, values.distance, time, sphereValues[otherAxis].minSize);\n                        timeOfAnimation2 = getTime(FRICTION_FORCE[otherAxis], cols, values.distance, time);\n\n                        if (timeOfAnimation2 > timeOfAnimation) {\n                            timeOfAnimation = timeOfAnimation2;\n                        }\n\n                        animationValues.push({\n                            items: countOfItems,\n                            direction: values.direction\n                        });\n                    }\n\n                    this.animateTo(timeOfAnimation, animationValues);\n                    this.pinchCloud.addEvent();\n                } else {\n                    if (this.hotspots && this.isInView && this.isSlideShown) {\n                        this.hotspots.showNeededElements();\n                    }\n\n                    this.animateWithDelay();\n                }\n\n                this.sendEvent('spinEnd');\n                const now = $J.now();\n                this.sendStats('dragEnd', now - this.sessionStartTime, {\n                    duration: now - startTime,\n                    clientX: e.x - this.boxBoundaries.left,\n                    clientY: e.y - this.boxBoundaries.top,\n                    pageX: e.x,\n                    pageY: e.y\n                });\n\n                lastPoint = { x: 0, y: 0 };\n                lastTime = null;\n                lastPartOfDistance = { x: 0, y: 0 };\n\n                queue = {\n                    x: { next: 0, prev: 0 },\n                    y: { up: 0, down: 0 }\n                };\n\n                rotate = false;\n            }\n        };\n\n        const setFrame = (currentAxis, direction) => {\n            let result = false;\n\n            if (lastPartOfDistance[currentAxis] > sphereValues[currentAxis].minSize) {\n                result = true;\n                const count = Math.floor(lastPartOfDistance[currentAxis] / sphereValues[currentAxis].minSize);\n                lastPartOfDistance[currentAxis] = lastPartOfDistance[currentAxis] % sphereValues[currentAxis].minSize;\n                this.imagesMap.prepareFutureImage(direction, count);\n                this.imagesMap.setPreparedFutureImage();\n            }\n\n            return result;\n        };\n\n        fns.dragmove = (e) => {\n            const directions = {};\n            const currentDistance = { x: 0, y: 0 };\n            const absCurrentDistance = { x: 0, y: 0 };\n            let currentSpeed;\n\n            if (this.isDragMove) {\n                rotate = true;\n                this.customActionWas = true;\n                currentDistance.x = e.x - lastPoint.x; // +prev, -next\n                currentDistance.y = e.y - lastPoint.y; // +down, -up\n                absCurrentDistance.x = Math.abs(currentDistance.x);\n                absCurrentDistance.y = Math.abs(currentDistance.y);\n                currentSpeed = e.timeStamp - lastTime;\n                lastTime = e.timeStamp;\n                axis = absCurrentDistance.x >= absCurrentDistance.y ? 'x' : 'y';\n                otherAxis = axis === 'x' ? 'y' : 'x';\n\n                if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED || multi || onAnyDrag || axis === 'x' && cols > 1 || axis === 'y' && rows > 1) {\n                    e.stop();\n                }\n\n                directions[axis] = getDirection(currentDistance[axis], axis);\n                directions[otherAxis] = getDirection(currentDistance[otherAxis], otherAxis);\n\n                addPoint(axis, currentSpeed, absCurrentDistance[axis], directions[axis]);\n                addPoint(otherAxis, currentSpeed, absCurrentDistance[otherAxis], directions[otherAxis]);\n\n                if (multi || onAnyDrag) {\n                    lastPartOfDistance.x += absCurrentDistance.x;\n                    lastPartOfDistance.y += absCurrentDistance.y;\n                } else if (canMoveAxis) {\n                    if (canMoveAxis === axis && canMoveAxis === 'x') {\n                        lastPartOfDistance.x += absCurrentDistance.x;\n                    } else if (canMoveAxis === axis && canMoveAxis === 'y') {\n                        lastPartOfDistance.y += absCurrentDistance.y;\n                    }\n                }\n\n                if (setFrame(axis, directions[axis]) && onAnyDrag) {\n                    lastPartOfDistance[otherAxis] = 0;\n                }\n\n                if (multi) {\n                    setFrame(otherAxis, directions[otherAxis]);\n                }\n\n                this.userColumn = this.imagesMap.getCurrentColumn();\n                this.userRow = this.imagesMap.getCurrentRow();\n\n                lastPoint.x = e.x;\n                lastPoint.y = e.y;\n\n                this.draw();\n\n                rotateDebounce();\n            }\n        };\n\n        const cloud = {\n            eventAdded: false\n        };\n\n        cloud.addEvent = () => {\n            if (!cloud.eventAdded) {\n                cloud.eventAdded = true;\n                node.addEvent('mousedrag touchdrag', onDrag);\n            }\n        };\n\n        cloud.removeEvent = () => {\n            if (cloud.eventAdded) {\n                cloud.eventAdded = false;\n                node.removeEvent('mousedrag touchdrag', onDrag);\n            }\n        };\n\n        this.touchDragCloud = cloud;\n\n        if (!this.slideDragEventStart) {\n            this.touchDragCloud.addEvent();\n        }\n    }\n\n    animateTo(time, values) {\n        const last = [];\n        const dirs = [];\n        const startObj = {};\n\n        clearTimeout(this.autospinResumeTimer);\n        if (this.animationFX) {\n            this.animationFX.stop();\n        }\n\n        for (let i = 0, l = values.length; i < l; i++) {\n            dirs.push(values[i].direction);\n            last.push(0);\n            startObj[values[i].direction] = [0, values[i].items];\n        }\n\n        this.animationFX = new $J.FX($J.$new('div'), {\n            duration: Math.abs(time),\n            transition: $J.FX.getTransition().inCubic,\n            onBeforeRender: $((ds, value) => {\n                let _i;\n                let frame;\n                for (_i = 0; _i < ds.length; _i++) {\n                    frame = Math.round(value[ds[_i]]);\n                    if (last[_i] !== frame) {\n                        this.imagesMap.prepareFutureImage(ds[_i], frame - last[_i]);\n                        this.imagesMap.setPreparedFutureImage();\n                        this.userColumn = this.imagesMap.getCurrentColumn();\n                        this.userRow = this.imagesMap.getCurrentRow();\n                        last[_i] = frame;\n                    }\n                }\n\n                this.draw();\n            }).bind(this, dirs),\n            onComplete: () => {\n                this.stopAnimation();\n                this.animateWithDelay();\n                if (this.hotspots && this.isInView && this.isSlideShown) {\n                    this.hotspots.showNeededElements();\n                }\n            }\n        }).start(startObj);\n    }\n\n    setMouseWheel(node) {\n        let delta;\n        let direction;\n        const correction = 8 / 54;\n        let count = 0;\n        let spinOnWheel = false;\n        // let stack = [];\n        const wheelStep = 3;\n        const wheelDebounce = helper.debounce((isMouse) => {\n                spinOnWheel = false;\n                // stack = [];\n                this.sendEvent('spinEnd');\n\n                if (isMouse) {\n                    count = 0;\n                } else {\n                    this.animateWithDelay();\n                }\n        }, 200);\n\n        const rows = this.imagesMap.getCountOfRows();\n        const cols = this.imagesMap.getCountOfFrames();\n        const multi = rows > 1 && cols > 1;\n        const onAnyDrag = this.option('freeDrag');\n\n        if (this.option('wheel')) {\n            let _shiftButtonIsPressed = false;\n            this.keyPressHandlerForShiftButton = (e) => {\n                if (e.oe.keyCode === 16) { // shift\n                    _shiftButtonIsPressed = e.type === 'keydown';\n                }\n            };\n            $J.W.addEvent('keydown keyup', this.keyPressHandlerForShiftButton);\n\n            node.addEvent('mousescroll', (e) => {\n                this.firstUserInteraction = true;\n                const shiftButtonIsPressed = e.isMouse ? _shiftButtonIsPressed : false;\n                const isX = Math.abs(e.deltaY) < Math.abs(e.deltaX);\n                // TODO chrome on windows 10 has just Y axis\n                // if (!isX && rows === 1) { return; }\n                if (!isX && !multi && !onAnyDrag) { return; }\n\n                this.customActionWas = true;\n\n                e.stop();\n\n                if (this.animationFX) {\n                    this.animationFX.stop();\n                    this.animationFX = null;\n                }\n\n                this.stopSmoothing();\n                this.stopAnimation();\n\n                if (this.hotspots) {\n                    this.hotspots.hideActiveHotspotBox();\n                }\n\n                if (!spinOnWheel) {\n                    spinOnWheel = true;\n                    this.sendEvent('spinStart');\n                    this.sendEvent('rotate');\n                    this.sendStats('rotate', $J.now() - this.sessionStartTime, {});\n                }\n\n                if (isX) {\n                    delta = e.deltaX;\n                    direction = delta >= 0 ? 'next' : 'prev';\n                } else {\n                    delta = e.deltaY;\n\n                    if (rows > 1 && !shiftButtonIsPressed) {\n                        direction = delta >= 0 ? 'down' : 'up';\n                    } else {\n                        direction = delta >= 0 ? 'next' : 'prev';\n                    }\n                }\n\n                if (e.isMouse) {\n                    delta = (delta / Math.abs(delta)) * wheelStep;\n                    count += Math.abs(delta);\n                    this.animateTo(200, [{ direction: direction, items: count }]);\n                } else {\n                    delta = delta * correction;\n                    count += delta;\n\n                    if (Math.abs(count) > 1) {\n                        delta = parseInt(count, 10);\n                        count -= delta;\n\n                        this.imagesMap.prepareFutureImage(direction, Math.abs(delta));\n                        this.imagesMap.setPreparedFutureImage();\n                        this.draw();\n                    }\n                }\n\n                wheelDebounce(e.isMouse);\n            });\n        }\n    }\n\n    animate(action, autoplayDuration, autoplayType, fromAPI) {\n        const isAutospin = action === 'autoplay' || this.option('autospin.enable');\n        if (!this.isInView || !this.isSlideShown || this.animationCloud.isMoving() || this.isDragMove || this.customActionWas && !isAutospin && !fromAPI) {\n            return;\n        }\n\n        if (this.animationCloud.isPaused()) {\n            this.animationCloud.resume();\n            return;\n        }\n\n        clearTimeout(this.animationCloud.hintTimer);\n        clearTimeout(this.autospinResumeTimer);\n\n        let delay = false;\n        let effect = null;\n\n        if (isAutospin) {\n            if (this.isAutoplayPaused) { return; }\n            effect = 'as-' + (autoplayType || this.option('autospin.type'));\n            if (action !== 'start') {\n                delay = true;\n            }\n        } else {\n            let nameOfEvent;\n\n            switch (action) {\n                case 'start':\n                    nameOfEvent = 'onStart';\n                    break;\n                case 'inView':\n                case 'slideIn':\n                    nameOfEvent = 'onVisible';\n                    break;\n                case 'inactive':\n                    delay = true;\n                    nameOfEvent = 'onInactive';\n                    break;\n                default:\n                    effect = action;\n            }\n\n            if (nameOfEvent && this.option('hint.' + nameOfEvent + '.enable')) {\n                const tmp = this.option('hint.' + nameOfEvent + '.effect');\n                if (tmp) {\n                    effect = tmp;\n                }\n            }\n            // showTextHint = false;\n        }\n\n        this.animationCloud.start({\n            speed: autoplayDuration || this.option('autospin.duration'),\n            type: effect,\n            infinite: isAutospin,\n            delay: delay,\n            isBackward: this.reflectDirection,\n            userInteraction: fromAPI\n        }, () => {\n            const r = this.showHint();\n            if (this.hotspots && this.isInView && this.isSlideShown) {\n                this.hotspots.showNeededElements();\n            }\n            if (this.option('hint.onInactive.enable')) {\n                if (r) {\n                    this.animationCloud.hintTimer = setTimeout(() => {\n                        this.animationCloud.hintTimer = null;\n                        this.animate('inactive');\n                    }, this.hint.getMovingTime());\n                } else {\n                    this.animate('inactive');\n                }\n            }\n        });\n    }\n\n    initAnimation() {\n        let isMoving = false;\n        let isPaused = false;\n        let isStopped = false;\n        let timer = null;\n        let delayTimer = null;\n        let step;\n        let currentIndex = 0;\n        let callback = null;\n        let framesLength = this.imagesMap.getCountOfFrames();\n        let options;\n\n        if (this.option('swapSides')) {\n            framesLength = this.imagesMap.getCountOfRows();\n        }\n\n        const clear = () => {\n            isMoving = false;\n            currentIndex = 0;\n        };\n\n        const end = () => {\n            clear();\n            if (callback) {\n                callback();\n            }\n        };\n\n        const move = () => {\n            let count = this.imagesMap.getNextBufferIndex(currentIndex);\n\n            if (count || options.infinite) {\n                if (!count && options.infinite) {\n                    count = 1;\n\n                    if (options.infinite) {\n                        currentIndex = -1;\n                    } else {\n                        currentIndex = 0;\n                    }\n                }\n\n                currentIndex = currentIndex + count;\n                this.imagesMap.setNextAnimationFrame(currentIndex);\n\n                timer = setTimeout(() => {\n                    this.imagesMap.setPreparedNextImage();\n                    this.draw();\n                    move();\n                }, count * step);\n            } else {\n                end();\n            }\n        };\n\n        const getSpeed = (currentSpeed, typeOfAnimation) => {\n            let r = currentSpeed;\n\n            if (!r) {\n                switch (typeOfAnimation) {\n                    case 'intro':\n                        r = 3600;\n                        break;\n                    case 'twitch':\n                        r = 2200;\n                        break;\n                    case 'spin':\n                        r = 3600;\n                        break;\n                    case 'momentum':\n                        r = 10;\n                        break;\n                    default:\n                        r = 3600;\n                }\n            }\n\n            return r;\n        };\n\n        const animationCloud = {\n            hintTimer: null,\n            isMoving: () => { return isMoving; },\n            isPaused: () => { return isPaused; },\n\n            start: (_options, cb) => {\n                if (isMoving) { return; }\n                isMoving = true;\n                isStopped = false;\n\n                const _move = () => {\n                    delayTimer = null;\n                    if (options.type) {\n                        if (!this.imagesMap) { return; }\n                        this.imagesMap.createAnimation(options.type, options.isBackward);\n                        if (options.userInteraction && this.imagesMap.getImagesBuffer() && this.imagesMap.getImagesBuffer().length) {\n                            const last = this.imagesMap.getImagesBuffer()[this.imagesMap.getImagesBuffer().length - 1];\n                            this.userColumn = last.col;\n                            this.userRow = last.row;\n                        }\n                        step = options.speed / framesLength;\n\n                        if (options.infinite) {\n                            this.showHint();\n                        }\n\n                        move();\n                    } else {\n                        end();\n                    }\n                };\n\n                callback = cb;\n\n                options = $J.extend({\n                    speed: 3600,\n                    type: 'row',\n                    delay: false,\n                    infinite: false,\n                    isBackward: false,\n                    userInteraction: false\n                }, _options);\n\n                options.speed = getSpeed(options.speed, options.type);\n\n                if (options.delay && !options.infinite) {\n                    delayTimer = setTimeout(_move, this.option('inactivity'));\n                } else {\n                    _move();\n                }\n            },\n\n            resume: () => {\n                if (isPaused) {\n                    isMoving = true;\n                    isPaused = false;\n                    move();\n                }\n            },\n\n            pause: () => {\n                if (!isPaused && !isStopped) {\n                    isMoving = false;\n                    isPaused = true;\n\n                    clearTimeout(animationCloud.hintTimer);\n                    clearTimeout(delayTimer);\n                    clearTimeout(timer);\n                }\n            },\n\n            stop: () => {\n                animationCloud.pause();\n                isStopped = true;\n                isPaused = false;\n\n                currentIndex = 0;\n                callback = null;\n\n                this.imagesMap.clearFramesQueue();\n                this.imagesMap.resetPreparedImage();\n            }\n        };\n\n        this.animationCloud = animationCloud;\n    }\n\n    stopAnimation() {\n        if (this.animationFX) {\n            this.animationFX.stop();\n            this.animationFX = null;\n        }\n\n        clearTimeout(this.autospinResumeTimer);\n        if (this.animationCloud) {\n            this.animationCloud.stop();\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    onBeforeFullscreenIn(data) {\n        this.stopSmoothing();\n        this.stopAnimation();\n\n        if (this.zoom) {\n           this.zoom.hide(true);\n        }\n\n        this.deactivateSpin();\n\n        this.boxBoundaries = this.coreNode.getRect();\n\n        super.onBeforeFullscreenIn(data);\n\n        if (this.hotspots) {\n            this.hotspots.hideAll();\n        }\n\n        if (this.isInited && this.isInView && this.isSlideShown) {\n            this.isHidden = true;\n            this.canvas.setCss({\n                opacity: 0,\n                visibility: 'hidden'\n            });\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    onAfterFullscreenIn(data) {\n        if (!this.infoSize) { return; }\n        // const insideIFrame = $J.W.node.parent !== $J.W.node.window;\n        // const pseudo = data.pseudo;\n\n        // if we use it, we do not have pinchend event and touchdrag after that\n        // if (this.pinchCloud) {\n        //     this.pinchCloud.removeEvent();\n        //     this.pinchCloud.addEvent();\n        // }\n\n        if (this.canvasPromise && this.canvasPromise.isPending()) {\n            this.canvasPromise.resolve();\n        }\n\n        const screenSize = this.coreNode.getSize();\n        this.currentSize = helper.spinLib.calcProportionSize(screenSize, this.infoSize, true, this.standardSize);\n        this.getDPPX(this.currentSize);\n\n        this.setImageSize();\n        this.setCanvasSize();\n\n        if (this._isReady) {\n            if (!this.imagesMap.isImagesExist({ width: this.currentImageSize.width, height: this.currentImageSize.height })) {\n                this.imagesMap.loadImages({\n                    width: this.currentImageSize.width,\n                    height: this.currentImageSize.height,\n                    dppx: this.dppx\n                });\n            }\n        }\n\n        if (this.firstImageLoaded) {\n            this.draw();\n        }\n\n        if (this.isHidden) {\n            this.isHidden = false;\n            setTimeout(() => {\n                this.canvas.setCss({\n                    opacity: '',\n                    visibility: ''\n                });\n            }, 0);\n        }\n\n        if (this.hotspots) {\n            if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED) {\n                this.hotspots.showAll();\n                if (this.isInView && this.isSlideShown) {\n                    this.hotspots.showNeededElements();\n                }\n            }\n        }\n\n        if (this._isReady) {\n            this.animate('inactive');\n            if (!$J.browser.mobile) {\n                this.showHint();\n            }\n\n            this.fullscreenStartTime = +new Date();\n            this.sendStats('fullscreenOpen', $J.now() - this.sessionStartTime);\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    onBeforeFullscreenOut(data) {\n        this.stopSmoothing();\n        this.stopAnimation();\n\n        if (this.zoom) {\n            this.zoom.hide(true);\n        }\n\n        this.deactivateSpin();\n\n        if (this.hint && this.always) {\n            this.hint.hide();\n        }\n\n        super.onBeforeFullscreenOut(data);\n\n        if (this.isInited && this.isInView && this.isSlideShown) {\n            this.isHidden = true;\n            this.canvas.setCss({\n                opacity: 0,\n                visibility: 'hidden'\n            });\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    onAfterFullscreenOut(data) {\n        if (!this.infoSize) { return; }\n        // const pseudo = data.pseudo;\n\n        // if we use it, we do not have pinchend event and touchdrag after that\n        // if (this.pinchCloud) {\n        //     this.pinchCloud.removeEvent();\n        //     this.pinchCloud.addEvent();\n        // }\n\n        if (this.canvasPromise && this.canvasPromise.isPending()) {\n            this.canvasPromise.resolve();\n        }\n\n        this.currentSize = helper.spinLib.calcProportionSize(this.coreNode.getSize(), this.infoSize);\n        this.getDPPX(this.currentSize);\n        this.standardSize.width = this.currentSize.width;\n        this.standardSize.height = this.currentSize.height;\n        this.currentImageSize.width = this.currentSize.width;\n        this.currentImageSize.height = this.currentSize.height;\n\n        this.setCanvasSize();\n\n        if (this._isReady) {\n            if (!this.imagesMap.isImagesExist({ width: this.currentSize.width, height: this.currentSize.height })) {\n                this.imagesMap.loadImages({\n                    width: this.currentSize.width,\n                    height: this.currentSize.height,\n                    dppx: this.dppx\n                });\n            }\n        }\n\n        if (this.firstImageLoaded) {\n            this.draw();\n        }\n\n        if (this.isHidden) {\n            this.isHidden = false;\n            setTimeout(() => {\n                if (!this.destroyed) {\n                    this.canvas.setCss({\n                        opacity: '',\n                        visibility: ''\n                    });\n                }\n            }, 0);\n        }\n\n        super.onAfterFullscreenOut(data);\n        if (this._isReady) {\n            this.animate('inactive');\n            if (!$J.browser.mobile) {\n                this.showHint();\n            }\n\n            const now = $J.now();\n            this.sendStats('fullscreenClose', now - this.sessionStartTime, {\n                duration: now - this.fullscreenStartTime\n            });\n        }\n    }\n\n    play(duration, effect) {\n        let result = false;\n\n        if (this._isReady && !this.isZoomed()) {\n            this.isAutoplayPaused = false;\n            this.stopSmoothing();\n            this.stopAnimation();\n\n            if (!this.instanceOptions.checkValue('autospin.duration', duration)) { duration = null; }\n            if (!this.instanceOptions.checkValue('autospin.type', effect)) { effect = null; }\n\n            this.animate('autoplay', duration, effect);\n\n            result = true;\n        }\n\n        return result;\n    }\n\n    pause() {\n        let result = false;\n\n        if (this._isReady && !this.isZoomed()) {\n            this.isAutoplayPaused = true;\n            this.stopSmoothing();\n            this.stopAnimation();\n\n            this.animateWithDelay();\n\n            result = true;\n        }\n\n        return result;\n    }\n\n    rotate(countOfCols, countOfRows) {\n        let result = false;\n        const normalizeValue = (value) => {\n            if (!value) {\n                value = 0;\n            } else if ($J.typeOf(value) === 'string') {\n                value = parseInt(value, 10);\n                if (isNaN(value)) { value = 0; }\n            }\n\n            return value;\n        };\n\n        if (this._isReady) {\n            countOfCols = normalizeValue(countOfCols);\n            countOfRows = normalizeValue(countOfRows);\n\n            if (countOfCols !== 0 || countOfRows !== 0) {\n                this.stopAnimation();\n                this.stopSmoothing();\n\n                if (!this.isDragMove) {\n                    this.sendEvent('rotate');\n                    this.sendStats('rotate', $J.now() - this.sessionStartTime, {});\n\n                    this.animate({\n                        cols: countOfCols,\n                        rows: countOfRows\n                    }, $J.U, $J.U, true);\n                    result = true;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    jumpTo(value, axis) {\n        let result = false;\n        let direction = null;\n\n        if (this._isReady) {\n            if ($J.typeOf(value) === 'string') {\n                value = value.trim();\n                direction = /^-/.test(value) ? 'prev' : 'next';\n            }\n\n            value = parseInt(value, 10);\n\n            if (!isNaN(value)) {\n                result = this.imagesMap.jump(axis, value, direction);\n                if (result && this.firstImageLoaded) {\n                    this.sendEvent('rotate');\n                    this.sendStats('rotate', $J.now() - this.sessionStartTime, {});\n                    this.draw();\n                }\n            }\n        }\n\n        return result;\n    }\n\n    zoomIn() {\n        if (this._isReady && this.zoom) {\n            if (!this.isDragMove && this.isFullscreenActionEnded()) {\n                return this.openLens();\n            }\n        }\n\n        return false;\n    }\n\n    zoomOut() {\n        if (this._isReady && this.zoom) {\n            return this.zoom.hide();\n        }\n\n        return false;\n    }\n\n    getCurrentFrame() {\n        if (this._isReady) {\n            const img = this.imagesMap.getCurrentImage({ width: this.currentSize.width, height: this.currentSize.height });\n\n            return {\n                row: img.row + 1,\n                column: img.col + 1\n            };\n        }\n\n        return false;\n    }\n\n    getOriginImageUrl() {\n        if (this._isReady) {\n            return this.imagesMap.getOriginImageUrl();\n        }\n\n        return null;\n    }\n\n    setCallback(name, fn) {\n        if (this._isReady) {\n            this.option(name, fn);\n            return true;\n        }\n\n        return false;\n    }\n\n    setImageSize() {\n        this.currentImageSize.width = this.currentSize.width;\n        this.currentImageSize.height = this.currentSize.height;\n    }\n\n    isZoomSizeExist() {\n        let result = false;\n        // const minZoom = 1.2;\n        const minZoomFactor = 100; // like in deep zoom level calculation\n\n        if (this.option('zoom.enable')) {\n            const cs = this.currentImageSize;\n            const zoomSize = this.getZoomSize();\n\n            if (zoomSize.originWidth - cs.width >= minZoomFactor) {\n                result = true;\n            }\n        }\n\n        return result;\n    }\n\n    getOrientation() {\n        return this.imagesMap.getHintType();\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    onResize() {\n        if (this.fullscreenState === globalVariables.FULLSCREEN.OPENING || !this.isStarted) { return false; }\n\n        const isFullscreen = this.fullscreenState === globalVariables.FULLSCREEN.OPENED;\n        this.stopSmoothing();\n\n        if (this.option('autospin.enable')) {\n            this.animationCloud.pause();\n        } else {\n            this.stopAnimation();\n        }\n\n        this.boxBoundaries = this.coreNode.getRect();\n\n        this.currentSize = helper.spinLib.calcProportionSize($(this.coreNode.node.parentNode).getSize(), this.infoSize, isFullscreen, this.standardSize);\n        this.getDPPX(this.currentSize);\n\n\n        this.standardSize.width = this.currentSize.width;\n        this.standardSize.height = this.currentSize.height;\n\n        this.setImageSize();\n\n        this.setCanvasSize();\n        this.calcMinSizeForDrag();\n\n        if (this.isZoomSizeExist()) {\n            this.coreNode.addClass(globalVariables.CSS_CURSOR_ZOOM_IN);\n        } else {\n            this.coreNode.removeClass(globalVariables.CSS_CURSOR_ZOOM_IN);\n        }\n\n        if (this.zoom) {\n            this.zoom.onResize();\n        }\n\n        if (!this.imagesMap.isImagesExist({ width: this.currentSize.width, height: this.currentSize.height })) {\n            this.imagesMap.loadImages({\n                width: this.currentSize.width,\n                height: this.currentSize.height,\n                dppx: this.dppx\n            });\n        }\n\n        if (this.firstImageLoaded) {\n            this.draw();\n        }\n\n        if (this._isReady && this.hotspots) {\n            this.hotspots.setContainerSize(this.canvasContainer.node.getBoundingClientRect());\n            this.hotspots.updateAndShow();\n        }\n\n        this.resizeAnimationTimer();\n\n        return true;\n    }\n\n    // @Override, HotspotInstance class\n    getContainerForBoundengClientRect() {\n        return this.canvasContainer;\n    }\n\n    destroy() {\n        this.instanceNode.removeEvent('touchmove', fnStopTouchMove);\n        $J.W.removeEvent('resize', this.windowResizeCallback);\n        clearTimeout(this.resizeWindowTimer);\n\n        if (this.isInited) {\n            this.sendStats('sessionEnd', $J.now() - this.sessionStartTime, { message: 'Stopped' });\n        }\n\n        this.coreNode.removeEvent('btnclick tap');\n        this.coreNode.del('instance');\n\n        this.resizeAnimationTimer.cancel();\n        this.resizeAnimationTimer = null;\n\n        if (this.touchDragCloud) {\n            this.touchDragCloud.removeEvent();\n            this.touchDragCloud = null;\n        }\n\n        if (this.placeholder) {\n            this.placeholder.setCssProp('display', '');\n        }\n\n        if (this.keyPressHandlerForShiftButton) {\n            $J.W.removeEvent('keydown keyup', this.keyPressHandlerForShiftButton);\n            this.keyPressHandlerForShiftButton = null;\n        }\n\n        if (this.cssId > -1) {\n            $J.removeCSS(this.id + '-css', this.cssId);\n            $J.$(this.id + '-css').remove();\n        }\n        this.cssId = -1;\n\n        if (this.initNameEvent) {\n            this.coreNode.removeEvent(this.initNameEvent, this.initFnEvent);\n        }\n\n        if (this.activatedCurtain) {\n            this.activatedCurtain.destroy();\n        }\n\n        this.stopSmoothing();\n        this.stopAnimation();\n\n        if (this.hint) {\n            this.hint.destroy();\n            this.hint = null;\n        }\n\n        this.coreNode.removeEvent('mousedrag touchdrag pinch');\n\n        if (this.loader) {\n            this.loader.destroy();\n            this.loader = null;\n        }\n\n        if (this.imagesMap) {\n            this.imagesMap.destroy();\n            this.imagesMap = null;\n            this.off('mapFirstImageLoaded');\n            this.off('mapImagesReady');\n            this.off('mapImageLoaded');\n            this.off('mapAllImagesLoaded');\n        }\n\n        // this.additionalCanvases = [];\n        this.clearCanvas();\n        if (this.canvas) {\n            this.canvas.removeEvent('transform');\n            this.canvas.removeClass(this.zoomClassName);\n            this.canvas.remove();\n        }\n\n        this.canvasContainer.removeEvent('transform');\n        this.canvasContainer.removeEvent('mouseover');\n        this.canvasContainer.removeEvent('mouseout');\n        this.canvasContainer.remove();\n        this.canvasContainer = null;\n\n        this.ctx = null;\n        this.canvas = null;\n\n        this.loadedImages = [];\n\n        this.off('isSingleSlide');\n        this.off('zoomUp');\n        this.off('zoomDown');\n        this.off('frameChange');\n\n        this.coreNode.remove();\n\n        this.infoSize = null;\n        this.startLoadingTime = null;\n        this.isInited = false;\n        this.openedImg = null;\n        this.coreNode = null;\n        this.firstUserInteraction = false;\n        if (this.animationCloud) {\n            clearTimeout(this.animationCloud.hintTimer);\n            this.animationCloud = null;\n        }\n        this.lastImg = null;\n        this.hotspotsData = null;\n        super.destroy();\n\n        return true;\n    }\n}\n\nreturn Spin;\n\n    }\n);\n"],"file":"spin.js"}