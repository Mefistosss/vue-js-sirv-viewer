{"version":3,"sources":["../sirv-modules/qualityselector.js"],"names":["Sirv","define","bHelpers","VideoLib","moduleName","MenuItem","videojs","getComponent","QualitySelectorMenuItem","player","options","selectable","multiSelectable","label","value","isSelected","isSelected_","getLabel","getValue","handleClick","event","plugin","hlsQualitySelectorAutoMode","selectedItem","currentSelection","selected","setQualityAndButtonLabel","dispose","registerComponent","MenuButton","Menu","QualitySelectorMenuButton","title","localize","name","levelItems","canShow","show","hide","createEl","el","labelEl_","dom","className","innerHTML","appendChild","buildCSSClass","buildWrapperCSSClass","createMenu","menu","forEach","item","addItem","menuItems","children","i","length","setDysplayedQuality","setNewItems","setQuality","height","l","options_","visibility","update","Plugin","getPlugin","defaults","registerPlugin","getNearestValue","arr","result","last","Math","abs","QualitySelectorPlugin","menuButton","isAuto","minHeight","Number","MAX_SAFE_INTEGER","minDiffBitrate","hlsSources","hls","onAddQualityLevelHandler","onAddQualityLevel","bind","onQualityLevelChangeHandler","onQualityLevelChange","vhs","tech","IWillNotUseThisInPlugins","isVHS","qualityLevels","currentStreamHeight","playPromise","firstPlay","lastHLSHeight","min","max","createQualityButton","bindPlayerEvents","createHLSLevels","on","getCurrentStreamHeight","currentHeight","position","controlBar","addChild","componentClass","createLevelItems","levels","heights","map","levels_","sort","a","b","h","push","setAndGetSelectedItem","setQualityHLS","reject","e","currentTime","isPaused","paused","src","host","index","type","play","catch","one","handleTechSeeked_","then","pause","error","smoothly","qualityList","selectedIndex","enabled","quality","setIsAuto","unpressButton","recalc","off","onPlayerReady","ready","mergeOptions"],"mappings":"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","sourcesContent":["Sirv.define(\n    'qualitySelector',\n    ['bHelpers','VideoLib'],\n    (bHelpers,VideoLib) => {\n        const moduleName = 'qualitySelector';\n        \n        \n        /* eslint-env es6 */\n/* global videojs */\n\n\nconst MenuItem = videojs.getComponent('MenuItem');\n\nclass QualitySelectorMenuItem extends MenuItem {\n    constructor(player, options) {\n        options.selectable = true;\n        options.multiSelectable = false;\n\n        super(player, options);\n\n        this.label = options.label;\n        this.value = options.value;\n    }\n\n    isSelected() { return this.isSelected_; }\n\n    getLabel() { return this.label; }\n\n    getValue() { return this.value; }\n\n    handleClick(event) {\n        if (!this.isSelected()) {\n            const plugin = this.player().hlsQualitySelectorAutoMode;\n            const selectedItem = plugin.currentSelection();\n\n            super.handleClick(event);\n\n            if (selectedItem && selectedItem !== this) {\n                selectedItem.selected(false);\n            }\n\n            plugin.setQualityAndButtonLabel(this.value, true);\n        }\n    }\n\n    dispose() {\n        this.label = '';\n        this.value = 0;\n        this.isSelected_ = false;\n        super.dispose();\n    }\n}\n\n\n// QualitySelectorMenuItem.prototype.contentElType = 'button'; // TODO I do not know why the 'contentElType' prop is necessary, because the prop does not use in videojs\nMenuItem.registerComponent('QualitySelectorMenuItem', QualitySelectorMenuItem);\n\n/* eslint-env es6 */\n/* global videojs */\n/* global QualitySelectorMenuItem */\n\n\nconst MenuButton = videojs.getComponent('MenuButton');\nconst Menu = videojs.getComponent('Menu');\n\nclass QualitySelectorMenuButton extends MenuButton {\n    constructor(player, options) {\n        options.title = player.localize('Quality');\n        options.name = player.localize('QualityButton');\n\n        super(player, options);\n\n        this.levelItems = [];\n\n        if (this.canShow()) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n\n    createEl() {\n        const el = super.createEl();\n\n        this.labelEl_ = videojs.dom.createEl('div', {\n            className: 'vjs-quality-button-auto-mode-label',\n            innerHTML: 'auto'\n        });\n\n        el.appendChild(this.labelEl_);\n\n        return el;\n    }\n\n    buildCSSClass() {\n        return super.buildCSSClass() + ' vjs-quality-button-auto-mode-button';\n    }\n\n    buildWrapperCSSClass() {\n        return super.buildWrapperCSSClass() + ' vjs-quality-button-auto-mode';\n    }\n\n    createMenu() {\n        const menu = new Menu(this.player());\n\n        (this.levelItems || []).forEach((item) => {\n            menu.addItem(\n                new QualitySelectorMenuItem(this.player(), {\n                    label: item.label,\n                    value: item.value,\n                    selected: item.selected\n                })\n            );\n        });\n\n        // this.setDysplayedQuality();\n\n        return menu;\n    }\n\n    currentSelection() {\n        if (this.menu) {\n            const menuItems = this.menu.children();\n\n            for (let i = 0; i < menuItems.length; i++) {\n                if (menuItems[i].isSelected()) {\n                    return menuItems[i];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    setDysplayedQuality() {\n        const currentSelection = this.currentSelection();\n        if (currentSelection) {\n            this.labelEl_.innerHTML = currentSelection.getLabel();\n        }\n    }\n\n    setNewItems(levelItems) {\n        this.levelItems = levelItems;\n    }\n\n    setQuality(height) {\n        const menuItems = this.menu.children();\n\n        for (let i = 0; i < menuItems.length; i++) {\n            if (menuItems[i].getValue() === height) {\n                menuItems[i].handleClick();\n                break;\n            }\n        }\n    }\n\n    canShow() {\n        const l = this.levelItems ? this.levelItems.length : 0;\n\n        if (this.options_.visibility && this.levelItems && (this.levelItems.length > 1 && this.levelItems[l - 1].value !== 'auto' || this.levelItems.length > 2)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    show() {\n        if (this.canShow()) {\n            super.show();\n        }\n    }\n\n    update() {\n        super.update();\n        this.setDysplayedQuality();\n    }\n\n    dispose() {\n        this.levelItems = [];\n        super.dispose();\n    }\n}\n\nMenuButton.registerComponent('QualitySelectorMenuButton', QualitySelectorMenuButton);\n\n/* eslint-env es6 */\n/* global videojs */\n/* global QualitySelectorMenuButton */\n\n\nconst Plugin = videojs.getPlugin('plugin');\n\n// Default options for the plugin.\nconst defaults = {\n    visibility: true\n};\n\n// Cross-compatibility for Video.js 5 and 6.\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n\n\n/**\n * Check if the level list has bitrate properties\n *\n */\n// const bitrateExist = (levels) => {\n//     return levels.filter((level) => { return !!level.bitrate; }).length === levels.length;\n// };\n\n/**\n * Calc min difference between bitrates\n *\n */\n// const getMinBitrateDifference = (levels, defDiff) => {\n//     let result = defDiff;\n\n//     for (let i = 1, l = levels.length; i < l; i++) {\n//         const diff = Math.abs(levels[i].bitrate - levels[i - 1].bitrate);\n//         if (diff < result) {\n//             result = diff;\n//         }\n//     }\n\n//     return result;\n// };\n\nconst getNearestValue = (value, arr) => {\n    let result = arr[0].value;\n    const l = arr.length - 1;\n    let last = l - 1;\n\n    if (last > -1) {\n        result = arr[last].value;\n        if (arr[last].value === 'auto') {\n            last -= 1;\n        }\n    }\n\n    if (l > 2) {\n        for (let i = last - 1; i >= 0; i--) {\n            if (value > arr[i + 1].value) {\n                if (value <= arr[i].value) {\n                    if (Math.abs(arr[i + 1].value - value) < Math.abs(arr[i].value - value)) {\n                        result = arr[i + 1].value;\n                    } else {\n                        result = arr[i].value;\n                    }\n                    break;\n                } else {\n                    result = arr[i].value;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    return result;\n};\n\nclass QualitySelectorPlugin extends Plugin {\n    constructor(player, options) {\n        super(player);\n\n        this.options = options;\n\n        this.menuButton = null;\n        this.isAuto = true;\n        this.minHeight = Number.MAX_SAFE_INTEGER;\n        this.minDiffBitrate = Number.MAX_SAFE_INTEGER;\n        this.hlsSources = options.hls || [];\n\n        this.onAddQualityLevelHandler = this.onAddQualityLevel.bind(this);\n        this.onQualityLevelChangeHandler = this.onQualityLevelChange.bind(this);\n        // this.onTimeupdateHandler = this.onTimeupdate.bind(this);\n\n        this.vhs = this.player.tech({ IWillNotUseThisInPlugins: true }).vhs;\n        this.isVHS = this.player.qualityLevels && this.vhs;\n\n        this.currentStreamHeight = 0;\n        this.levelItems = null;\n        this.playPromise = null;\n        this.firstPlay = true;\n        this.lastHLSHeight = null;\n        this.min = this.options.min;\n        this.max = this.options.max;\n\n\n        // If there is quality levels plugin and the VHS tech exists then continue.\n        if (this.isVHS) {\n            this.createQualityButton();\n            this.bindPlayerEvents();\n        } else if (this.hlsSources.length) {\n            this.isAuto = false;\n            this.createQualityButton();\n            this.createHLSLevels();\n        }\n    }\n\n    /**\n     * Binds listener for quality level changes.\n     */\n    bindPlayerEvents() {\n        const qualityLevels = this.player.qualityLevels();\n        qualityLevels.on('addqualitylevel', this.onAddQualityLevelHandler);\n        qualityLevels.on('change', this.onQualityLevelChangeHandler);\n        // this.player.on('timeupdate', this.onTimeupdateHandler);\n    }\n\n    onQualityLevelChange() {\n        this.menuButton.setDysplayedQuality();\n    }\n\n    // onTimeupdate() {\n    //     if (this.isAuto) {\n    //         this.checkCurrentQuality();\n    //     }\n    // }\n\n    getCurrentStreamHeight() {\n        if (this.levelItems) {\n            this.currentStreamHeight = getNearestValue(this.player.currentHeight(), this.levelItems);\n\n            if (this.currentStreamHeight < this.min) {\n                this.currentStreamHeight = this.min;\n            }\n\n            if (this.currentStreamHeight > this.max) {\n                this.currentStreamHeight = this.max;\n            }\n        }\n    }\n\n    /*\n    checkCurrentQuality(force) {\n        const currentBandwidth = this.vhs.systemBandwidth;\n\n        if (Math.abs(this.lastBandwidth - currentBandwidth) >= this.minDiffBitrate || force) {\n            let nextHeight = this.minHeight;\n\n            (this.player.qualityLevels().levels_ || []).forEach((level) => {\n                if (level.bitrate <= currentBandwidth && level.height > nextHeight) {\n                    nextHeight = level.height;\n\n                    if (this.currentStreamHeight && nextHeight > this.currentStreamHeight) {\n                        nextHeight = this.currentStreamHeight;\n                    }\n                }\n            });\n\n            if (nextHeight < this.min) {\n                nextHeight = this.min;\n            }\n\n            if (nextHeight > this.max) {\n                nextHeight = this.max;\n            }\n\n            this.setQuality(nextHeight, !force);\n\n            this.lastBandwidth = currentBandwidth;\n        }\n    }\n    */\n\n    /**\n     * Adds the quality menu button to the player control bar.\n     */\n    createQualityButton() {\n        this.menuButton = new QualitySelectorMenuButton(this.player, {\n            visibility: this.options.visibility\n        });\n\n        // const fst = this.player.controlBar.getChild('fullscreenToggle');\n        // this.player.controlBar.addChild(this.menuButton, { componentClass: 'qualitySelector' }, this.player.controlBar.options_.children.length - (fst ? 2 : 1));\n        const position = this.player.controlBar.options_.children.length - 2;\n        this.player.controlBar.addChild(this.menuButton, { componentClass: 'qualitySelector' }, position);\n    }\n\n    createLevelItems(levels) {\n        const heights = levels.map(l => l.height);\n\n        // Set min/max quality\n        this.min = Math.min(Math.max(...heights), this.options.min);\n        this.max = Math.max(Math.min(...heights), this.min, this.options.max);\n\n        this.minHeight = this.min;\n\n        // Quality levels\n        const levels_ = heights.sort((a, b) => b - a).map(h => ({ label: h + 'p', value: h, selected: false }));\n\n        if (levels_.length > 1) {\n            levels_.push({ label: 'auto', value: 'auto', selected: false });\n        }\n\n        return levels_;\n    }\n\n    setAndGetSelectedItem(levelItems) {\n        this.getCurrentStreamHeight();\n        const selectedItem = levelItems[levelItems.length - 1];\n        selectedItem.selected = true;\n        this.isAuto = selectedItem.value === 'auto';\n\n        return selectedItem;\n    }\n\n    createHLSLevels() {\n        this.levelItems = this.createLevelItems(this.hlsSources);\n\n        const selectedItem = this.setAndGetSelectedItem(this.levelItems);\n\n        this.setQualityHLS(selectedItem.value);\n        this.menuButton.setNewItems(this.levelItems);\n        this.menuButton.update();\n    }\n\n    /**\n     * Executed when a quality level is added from HLS playlist.\n     */\n    onAddQualityLevel() {\n        const levels = this.player.qualityLevels().levels_ || [];\n        this.levelItems = this.createLevelItems(levels);\n\n        // if (bitrateExist(levels)) {\n        //     this.minDiffBitrate = getMinBitrateDifference(levels, this.minDiffBitrate);\n        //     this.lastBandwidth = this.vhs.systemBandwidth;\n        // }\n\n        this.setAndGetSelectedItem(this.levelItems);\n\n        // this.checkCurrentQuality(true);\n        this.setQuality(null, true);\n\n        this.menuButton.setNewItems(this.levelItems);\n        this.menuButton.update();\n    }\n\n    setQualityHLS(height) {\n        const player = this.player;\n        let value = null;\n\n        if (height === 'auto') {\n            height = this.currentStreamHeight;\n        }\n\n        if (height === this.lastHLSHeight) { return; }\n\n        for (let i = 0, l = this.hlsSources.length; i < l; i++) {\n            if (height === this.hlsSources[i].height) {\n                value = this.hlsSources[i];\n                break;\n            }\n        }\n\n        if (value) {\n            if (this.playPromise) {\n                try {\n                    this.playPromise.reject();\n                } catch (e) {\n                    // empty\n                }\n\n                this.playPromise = null;\n            }\n\n            const currentTime = player.currentTime();\n            const isPaused = player.paused();\n\n            player.src({\n                src: this.options.host + value.index,\n                type: 'application/x-mpegURL'\n            });\n\n            this.lastHLSHeight = height;\n\n            if (!this.firstPlay) {\n                this.playPromise = this.player.play();\n                // eslint-disable-next-line\n                this.playPromise.catch((e) => { this.playPromise = null; });\n            }\n\n            player.one('loadedmetadata', () => {\n                if (currentTime) {\n                    this.player.currentTime(currentTime);\n                    this.player.handleTechSeeked_();\n                }\n\n                if (isPaused) {\n                    // if (!this.firstPlay) {\n                    //     player.pause();\n                    // }\n                    this.firstPlay = false;\n\n                    if (this.playPromise) {\n                        this.playPromise.then(() => {\n                            this.player.pause();\n                            this.playPromise = null;\n                        // eslint-disable-next-line\n                        }).catch((error) => {\n                            this.playPromise = null;\n                            // Auto-play was prevented\n                            // Show paused UI.\n                        });\n                    }\n                }\n            });\n        }\n    }\n\n    setQuality(height, smoothly) {\n        const qualityList = this.player.qualityLevels();\n\n        // Force VHS module to re-select quality levels.\n        // Don't force reselection upon level is added (height == null).\n        if (smoothly && height !== null) {\n            for (let i = qualityList.length - 1; i >= 0; i--) {\n                if (i !== qualityList.selectedIndex) {\n                    qualityList[i].enabled = false;\n                }\n            }\n        }\n\n        for (let i = 0, l = qualityList.length; i < l; i++) {\n            const quality = qualityList[i];\n            if (smoothly) {\n                // quality.enabled = quality.height >= height && quality.height >= this.min && quality.height <= this.max;\n                quality.enabled = quality.height >= this.min && quality.height <= this.max;\n            } else {\n                quality.enabled = quality.height === height;\n            }\n        }\n    }\n\n    /**\n     * Sets quality (based on media height)\n     *\n     * @param {number} height - A number representing HLS playlist.\n     */\n    setQualityAndButtonLabel(height, setIsAuto) {\n        if (setIsAuto) { // by control\n            this.isAuto = height === 'auto';\n        }\n\n        if (this.isVHS) {\n            if (this.isAuto) {\n                // this.checkCurrentQuality();\n                this.setQuality(height, true);\n            } else {\n                this.setQuality(height);\n            }\n        } else {\n            this.setQualityHLS(height);\n        }\n\n        this.menuButton.setDysplayedQuality();\n        this.menuButton.unpressButton();\n    }\n\n    currentSelection() {\n        return this.menuButton.currentSelection();\n    }\n\n    recalc() {\n        this.getCurrentStreamHeight();\n\n        if (this.isAuto) {\n            this.setQualityAndButtonLabel(this.currentStreamHeight);\n        }\n    }\n\n    dispose() {\n        // this.player.off('timeupdate', this.onTimeupdateHandler);\n\n        if (this.isVHS) {\n            const qualityLevels = this.player.qualityLevels();\n            qualityLevels.off('addqualitylevel', this.onAddQualityLevelHandler);\n            qualityLevels.off('change', this.onQualityLevelChangeHandler);\n        }\n\n\n        try {\n            super.dispose();\n        } catch (e) {\n            // empty\n        }\n    }\n}\n\n/**\n * Function to invoke when the player is ready.\n *\n * This is a great place for your plugin to initialize itself. When this\n * function is called, the player will have its DOM and child components\n * in place.\n *\n * @function onPlayerReady\n * @param    {Player} player\n *           A Video.js player object.\n *\n * @param    {Object} [options={}]\n *           A plain object containing options for the plugin.\n */\nconst onPlayerReady = (player, options) => {\n    player.hlsQualitySelectorAutoMode = new QualitySelectorPlugin(player, options);\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @function hlsQualitySelector\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nconst hlsQualitySelectorAutoMode = function (options) {\n    this.ready(() => {\n        onPlayerReady(this, videojs.mergeOptions(defaults, options));\n    });\n};\n\n// Register the plugin with video.js.\nregisterPlugin('hlsQualitySelectorAutoMode', hlsQualitySelectorAutoMode);\n\nreturn hlsQualitySelectorAutoMode;\n\n    }\n);\n"],"file":"qualityselector.js"}