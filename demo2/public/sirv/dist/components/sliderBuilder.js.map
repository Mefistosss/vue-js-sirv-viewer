{"version":3,"sources":["../sirv-modules/sliderBuilder.js"],"names":["Sirv","define","bHelpers","magicJS","EventEmitter","helper","globalVariables","globalFunctions","Promise","moduleName","$J","$","SLIDER_BUILDER_CONF_VER","getInfoUrl","url","callbackName","stringHas","SliderBuilder","sirvOption","node","mainNode","sirvOptions","deepExtend","nodes","configURL","dataJSON","configHash","attrbMainNode","cfCallbackName","urlParams","componentsList","referrerPolicy","attr","getOptions","resolve","reject","checkNode","buildCallBackName","getRemoteData","then","result","assets","buildOptions","contentType","SLIDE","TYPES","IMAGE","layers","SPIN","catch","error","buildViewer","parsedURL","exec","pathname","dirname","prepareListComponents","generateComponents","addAllComponents","listComponents","origin","folderPath","forEach","component","path","is3rd","test","name","push","normalizeURL","NAMES","indexOf","type","template","common","settings","mobile","replace","REG_URL_QUERY_STRING","getHashCode","item","$new","innerHTML","appendChild","destroy"],"mappings":"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","sourcesContent":["Sirv.define(\n    'SliderBuilder',\n    ['bHelpers','magicJS','EventEmitter','helper','globalVariables','globalFunctions','Promise!'],\n    (bHelpers,magicJS,EventEmitter,helper,globalVariables,globalFunctions,Promise) => {\n        const moduleName = 'SliderBuilder';\n        \n        const $J = magicJS;\n        const $ = $J.$;\n        \n        \n        /* eslint-env es6 */\n/* global $J, helper, Promise */\n/* eslint-disable no-extra-semi */\n/* eslint-disable no-unused-vars */\n/* eslint class-methods-use-this: [\"error\", {\"exceptMethods\": [\"loadData\"]}] */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n\nconst SLIDER_BUILDER_CONF_VER = 1;\n\nconst getInfoUrl = (url, callbackName) => {\n    return url + ($J.stringHas(url, '?') ? '&' : '?') + 'nometa&info=' + callbackName;\n};\n\nclass SliderBuilder {\n    constructor(sirvOption, node) {\n        this.mainNode = $(node);\n        this.sirvOptions = helper.deepExtend({}, sirvOption || {});\n\n        this.nodes = [];\n        this.configURL = null;\n        this.dataJSON = null;\n        this.configHash = null;\n        this.attrbMainNode = null;\n        this.cfCallbackName = null;\n        this.urlParams = null;\n        this.componentsList = [];\n        this.referrerPolicy = this.mainNode.attr('data-referrerpolicy') || this.mainNode.attr('referrerpolicy') || 'no-referrer-when-downgrade';\n    }\n\n    getOptions() {\n        return new Promise((resolve, reject) => {\n            if (this.checkNode()) {\n                this.buildCallBackName();\n                helper.getRemoteData(getInfoUrl(this.configURL, this.cfCallbackName), this.cfCallbackName, this.referrerPolicy)\n                    .then((result) => {\n                        if (result && result.assets) {\n                            this.dataJSON = result;\n                            this.buildOptions();\n                            resolve({ 'dataOptions': this.sirvOptions });\n                        } else {\n                            let contentType = globalVariables.SLIDE.TYPES.IMAGE;\n\n                            if (result.layers) {\n                                contentType = globalVariables.SLIDE.TYPES.SPIN;\n                            }\n\n                            resolve({ 'content': contentType, 'dataOptions': this.sirvOptions });\n                        }\n                    }).catch((error) => {\n                        error = this.configURL;\n                        reject({ 'error': this.configURL, 'dataOptions': this.sirvOptions });\n                    });\n            } else {\n                resolve({ 'dataOptions': this.sirvOptions });\n            }\n        });\n    }\n\n    buildViewer() {\n        return new Promise((resolve, reject) => {\n            if (this.dataJSON) {\n                const parsedURL = /(^https?:\\/\\/[^/]*)([^#?]*)\\/.*$/.exec(this.configURL);\n                const pathname = this.dataJSON.dirname || parsedURL[2];\n\n                this.prepareListComponents(this.dataJSON.assets, parsedURL[1], pathname);\n                this.generateComponents();\n                this.addAllComponents();\n            }\n\n            resolve({ 'mainNode': this.mainNode });\n        });\n    }\n\n    prepareListComponents(listComponents, origin, folderPath) {\n        listComponents.forEach((component) => {\n            let path;\n            const is3rd = /^(https?:)?\\/\\/[^/]/.test(component.name);\n\n            if (is3rd) {\n                path = component.name;\n            } else if (/^\\//.test(component.name)) {\n                path = origin + component.name;\n            } else {\n                path = origin + folderPath + '/' + component.name;\n            }\n\n            this.componentsList.push({\n                'path': is3rd ? path : globalFunctions.normalizeURL(path),\n                'type': globalVariables.SLIDE.NAMES.indexOf(component.type),\n                'is3rd': is3rd\n            });\n        });\n    }\n\n    checkNode() {\n        let result = false;\n        const template = /([^#?]+)\\/?([^#?]+\\.view)(\\?([^#]*))?(#(.*))?$/;\n        if (this.mainNode) {\n            this.attrbMainNode = this.mainNode.attr('data-src');\n            if (this.attrbMainNode && template.test(this.attrbMainNode)) {\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    buildOptions() {\n        this.sirvOptions.common = helper.deepExtend(this.sirvOptions.common, this.dataJSON.settings || {});\n        this.sirvOptions.mobile = helper.deepExtend(this.sirvOptions.mobile, this.dataJSON.settings || {});\n    }\n\n    buildCallBackName() {\n        this.configURL = globalFunctions.normalizeURL(this.attrbMainNode.replace(globalVariables.REG_URL_QUERY_STRING, '$1'));\n        this.urlParams = this.attrbMainNode.replace(globalVariables.REG_URL_QUERY_STRING, '$2');\n        if (this.urlParams) { this.configURL += ('?' + this.urlParams); }\n        this.configHash = $J.getHashCode(this.configURL.replace(/^http(s)?:\\/\\//, ''));\n        this.cfCallbackName = 'view-' + SLIDER_BUILDER_CONF_VER + '_' + this.configHash;\n    }\n\n    generateComponents() {\n        this.componentsList.forEach((item) => {\n            let node = $J.$new('div');\n            if (item.type === globalVariables.SLIDE.TYPES.IMAGE) {\n                if (item.is3rd) {\n                    node = $J.$new('img');\n                    node.attr('data-type', 'static');\n                } else {\n                    node.attr('data-type', 'zoom');\n                }\n            }\n\n            let path = item.path;\n            if (this.urlParams) {\n                path += ('?' + this.urlParams);\n            }\n\n            node.attr('data-src', path);\n            this.nodes.push(node);\n        });\n    }\n\n    addAllComponents() {\n        this.mainNode.node.innerHTML = '';\n        this.nodes.forEach((item) => {\n            this.mainNode.node.appendChild(item.node);\n        });\n    }\n\n    destroy() {\n        this.mainNode = null;\n        this.sirvOptions = null;\n\n        this.nodes = [];\n        this.configURL = null;\n        this.dataJSON = null;\n        this.configHash = null;\n        this.cfCallbackName = null;\n        this.componentsList = [];\n    }\n}\n\nreturn SliderBuilder;\n\n    }\n);\n"],"file":"sliderBuilder.js"}