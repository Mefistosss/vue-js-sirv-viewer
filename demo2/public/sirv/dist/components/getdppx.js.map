{"version":3,"sources":["../sirv-modules/getdppx.js"],"names":["Sirv","define","bHelpers","magicJS","helper","ResponsiveImage","moduleName","$J","$","getDPPX","currentWidth","currentHeight","originWidth","originHeight","round","upscale","result","tmp","DPPX","roundImageSize","height","width"],"mappings":"AAAAA,IAAI,CAACC,MAAL,CACI,SADJ,EAEI,CAAC,UAAD,EAAY,SAAZ,EAAsB,QAAtB,EAA+B,iBAA/B,CAFJ,EAGI,UAACC,QAAD,EAAUC,OAAV,EAAkBC,MAAlB,EAAyBC,eAAzB,EAA6C;AACzC,MAAMC,UAAU,GAAG,SAAnB;AAEA,MAAMC,EAAE,GAAGJ,OAAX;AACA,MAAMK,CAAC,GAAGD,EAAE,CAACC,CAAb;AAGA;;AACR;;AACA;;AAEA,MAAMC,OAAO,GAAG,UAACC,YAAD,EAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,YAA3C,EAAyDC,KAAzD,EAAgEC,OAAhE,EAA4E;AACxF,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,GAAJ;;AAEA,QAAIV,EAAE,CAACW,IAAH,GAAU,CAAd,EAAiB;AACb,UAAIP,aAAa,GAAGD,YAApB,EAAkC;AAC9BO,QAAAA,GAAG,GAAGN,aAAN;;AACA,YAAIG,KAAJ,EAAW;AACPG,UAAAA,GAAG,GAAGZ,eAAe,CAACc,cAAhB,CAA+B;AAAEC,YAAAA,MAAM,EAAET;AAAV,WAA/B,EAA0DS,MAAhE;AACH;;AACDJ,QAAAA,MAAM,GAAGZ,MAAM,CAACK,OAAP,CAAeQ,GAAf,EAAoBJ,YAApB,EAAkCE,OAAlC,CAAT;AACH,OAND,MAMO;AACHE,QAAAA,GAAG,GAAGP,YAAN;;AACA,YAAII,KAAJ,EAAW;AACPG,UAAAA,GAAG,GAAGZ,eAAe,CAACc,cAAhB,CAA+B;AAAEE,YAAAA,KAAK,EAAEX;AAAT,WAA/B,EAAwDW,KAA9D;AACH;;AACDL,QAAAA,MAAM,GAAGZ,MAAM,CAACK,OAAP,CAAeQ,GAAf,EAAoBL,WAApB,EAAiCG,OAAjC,CAAT;AACH;AACJ;;AAED,WAAOC,MAAP;AACH,GArBD;;AAuBA,SAAOP,OAAP;AAEK,CAvCL","sourcesContent":["Sirv.define(\n    'getDPPX',\n    ['bHelpers','magicJS','helper','ResponsiveImage'],\n    (bHelpers,magicJS,helper,ResponsiveImage) => {\n        const moduleName = 'getDPPX';\n        \n        const $J = magicJS;\n        const $ = $J.$;\n        \n        \n        /* eslint-env es6 */\n/* global ResponsiveImage, helper */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"getDPPX\" }] */\n\nconst getDPPX = (currentWidth, currentHeight, originWidth, originHeight, round, upscale) => {\n    let result = 1;\n    let tmp;\n\n    if ($J.DPPX > 1) {\n        if (currentHeight > currentWidth) {\n            tmp = currentHeight;\n            if (round) {\n                tmp = ResponsiveImage.roundImageSize({ height: currentHeight }).height;\n            }\n            result = helper.getDPPX(tmp, originHeight, upscale);\n        } else {\n            tmp = currentWidth;\n            if (round) {\n                tmp = ResponsiveImage.roundImageSize({ width: currentWidth }).width;\n            }\n            result = helper.getDPPX(tmp, originWidth, upscale);\n        }\n    }\n\n    return result;\n};\n\nreturn getDPPX;\n\n    }\n);\n"],"file":"getdppx.js"}