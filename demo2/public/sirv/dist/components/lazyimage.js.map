{"version":3,"sources":["../lazyimage/lazyimage.js"],"names":["Sirv","define","bHelpers","magicJS","globalVariables","globalFunctions","helper","Promise","ResponsiveImage","BaseInstance","getDPPX","moduleName","$J","$","defaultOptions","resize","type","defaults","threshold","minimum","fit","quality","maximum","hdQuality","autostart","oneOf","onReady","Appearance","node","state","states","setState","numberOfState","removeClass","addClass","destroy","forEach","className","P","smv","inView","rect","getBoundingClientRect","top","right","bottom","left","width","height","LazyImage","options","force","common","mobile","local","instanceNode","SLIDE","TYPES","IMAGE","isLazy","option","image","isInfoLoaded","infoSize","isNotSirv","isInView","isStaticImage","dppx","getImageInfoPromise","loadStaticImagePromise","upscale","size","maxSize","lastImageSize","srcWasSetted","originAlt","infoAlt","originTitle","src","srcset","startedSrc","dataSrc","imageUrl","dontLoad","appearanceState","dataBgSrc","inViewModule","rootMargin","fitSize","backgroundNodeSize","isMaxWidthSet","cropPosition","x","y","cssBackgroundSize","isPlaceholder","isRun","inited","resizeDebounce","debounce","_setRootMargin","onResize","resizeHandler","e","as","instanceOptions","get","preInit","InViewModule","entries","entry","iv","isIntersecting","intersectionRatio","init","inViewCallback","observe","maxWidth","style","ex","_getBaseData","browser","ready","D","readyState","startFullInit","createSirvImage","stop","getOptionsForStartFullInit","lazyImage","checkReadiness","eventname","component","_isReady","value","parseInt","typeOf","W","innerHeight","documentElement","clientHeight","_getQueryParams","queryParams","paramsFromQueryString","replace","REG_URL_QUERY_STRING","q","isNaN","queryParamsQuality","attr","isSVG","getTagName","referrerPolicy","normalizeURL","on","stopAll","replaceSrc","done","showImage","data","loadImage","finally","console","log","imageSettings","round","convertSmallerSideToZero","setParent","getInfoSize","catch","err","_isplaceholder","isStartedFullInit","run","resolve","reject","getImageInfo","then","info","getDescription","getOriginSize","getCropPosition","status","getId","idPrefix","df","id","imageLib","getBackgroundSize","disconnect","addEvent","fixHeight","blockSize","getCss","result","removeAttr","setCss","display","getSize","dataSize","destroyed","fixSize","innerWidth","calcProportionalBackgroundSize","calcProportionSize","objectFit","loadStaticImage","getImage","_setSrc","backgroundImage","_setHDQuality","opt","isset","img","_getImageCreateSettings","serverWidth","serverHeight","complete","setts","checkMaxSize","DPPX","setCrop","getInnerSize","crop","getNonSirvImg","getSirvImg","getImageClassContainer","originSize","defined","checkImage","checkSize","w","h","sendEvent","isStarted","nameOfEvent","event","url","instanceUrl","extend","api","timestamp","Date","emit","getOriginImageUrl","contains","parentNode","Math","abs","setCssProp","removeEvent","cancel","off","hasAttribute"],"mappings":"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","sourcesContent":["Sirv.define(\n    'LazyImage',\n    ['bHelpers','magicJS','globalVariables','globalFunctions','helper','Promise!','ResponsiveImage','BaseInstance','getDPPX'],\n    (bHelpers,magicJS,globalVariables,globalFunctions,helper,Promise,ResponsiveImage,BaseInstance,getDPPX) => {\n        const moduleName = 'LazyImage';\n        \n        const $J = magicJS;\n        const $ = $J.$;\n        \n        \n        /* eslint-env es6 */\n/* eslint-disable no-extra-semi */\n/* eslint-disable no-unused-vars */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n\nconst defaultOptions = {\n    resize: { type: 'boolean', defaults: true },\n\n    // A distance from the viewport within which images should be loaded.\n    threshold: { type: 'number', minimum: 0, defaults: 0 },\n    fit: { type: 'string', 'enum': ['contain', 'cover', 'crop', 'none'], defaults: 'contain' },\n\n    // Quality applied to images (1x - 1.49x).\n    quality: { type: 'number', minimum: 0, maximum: 100, defaults: 80 },\n    // Quality applied to hi-res images (1.5x - 2x).\n    hdQuality: { type: 'number', minimum: 0, maximum: 100, defaults: 60 },\n\n    autostart: {\n        oneOf: [\n            /*\n                created - init and load\n                visible - init and load in view\n                off - not init\n            */\n            { type: 'string', 'enum': ['created', 'visible', 'off'] },\n            { type: 'boolean', 'enum': [false] }\n        ],\n        defaults: 'visible'\n    },\n\n    onReady: { type: 'function', defaults: () => {} }\n};\n\n\n/*\n    image without slider\n\n    If image is as background\n    background-size: auto;\n    background-size: contain;\n    background-size: cover;\n    background-size: 100px;\n    background-size: 50%;\n    background-size: 100px, 150px;\n*/\n\n/* eslint-env es6 */\n/* eslint-disable no-unused-vars */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n\n\nclass Appearance {\n    constructor(node) {\n        this.node = $(node);\n        this.state = 0; // 0 - nothing, 1 - before loading image, 2 - after loading high quality image\n        this.states = $(['sirv-image-loading', 'sirv-image-loaded']);\n    }\n\n    setState(numberOfState) {\n        if (this.state !== numberOfState) {\n            if (this.state - 1 >= 0) {\n                this.node.removeClass(this.states[this.state - 1]);\n            }\n            this.state = numberOfState;\n            this.node.addClass(this.states[numberOfState - 1]);\n        }\n    }\n\n    destroy() {\n        this.state = 0;\n\n        this.states.forEach((className) => {\n            this.node.removeClass(className);\n        });\n\n        this.node = null;\n    }\n}\n\n/* eslint-env es6 */\n/* global BaseInstance */\n/* global ResponsiveImage */\n/* global helper */\n/* global globalFunctions */\n/* global globalVariables */\n/* global Appearance */\n/* global getDPPX */\n/* global defaultOptions */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"_imageOnerrorHandler\", \"_setHDQuality\"] }] */\n/* eslint no-unused-vars: [\"error\", { \"args\": \"none\", \"varsIgnorePattern\": \"LazyImage\" }] */\n\n\n// const calcCropPositionForBGImage = (position, nodeSize, originImageSize) => {\n//     let result = helper.round((originImageSize - nodeSize) / 100 * position);\n//     if (result < 0) { result = 0; }\n//     return result;\n// };\n\nconst P = globalVariables.smv;\n\nconst inView = (node) => {\n    var rect = node.getBoundingClientRect();\n    return !(rect.top === 0 && rect.right === 0  && rect.bottom === 0 && rect.left === 0 && rect.width === 0 && rect.height === 0); // hidden\n};\n\nclass LazyImage extends BaseInstance {\n    constructor(node, options, force) {\n        options.options = {\n            common: { common: options.options.common, mobile: {} },\n            local: { common: '', mobile: '' }\n        };\n\n        super(node, options, defaultOptions);\n\n        this.node = this.instanceNode;\n        this.type = globalVariables.SLIDE.TYPES.IMAGE;\n        this.isLazy = this.option('autostart') === 'visible';\n        this.image = null;\n        this.isInfoLoaded = false;\n        this.infoSize = { width: 0, height: 0 };\n        this.isNotSirv = false;\n        this.isInView = false;\n        this.isStaticImage = false;\n        this.dppx = 1;\n        this.getImageInfoPromise = null;\n        this.loadStaticImagePromise = null;\n        this.upscale = false;\n        this.size = { width: 0, height: 0 };\n        this.maxSize = {};\n        this.lastImageSize = { width: 0, height: 0 };\n        this.srcWasSetted = false;\n        this.originAlt = null;\n        this.infoAlt = null;\n        this.originTitle = null;\n        this.src = null;\n        this.srcset = null;\n        this.startedSrc = null;\n        this.dataSrc = null;\n        this.imageUrl = null;\n        this.dontLoad = true;\n\n        this.appearanceState = null;\n        this.dataBgSrc = null;\n        this.inViewModule = null;\n        this.rootMargin = 0;\n        this.fitSize = null;\n        this.backgroundNodeSize = null;\n        this.isMaxWidthSet = false;\n        this.cropPosition = { x: null, y: null };\n        this.cssBackgroundSize = null;\n        this.isPlaceholder = false;\n        this.isRun = false;\n        this.inited = false;\n\n        this.resizeDebounce = helper.debounce(() => {\n            this._setRootMargin();\n            this.onResize();\n        }, 50);\n\n        this.resizeHandler = (e) => { this.resizeDebounce(); };\n\n        const as = this.instanceOptions.get('autostart');\n\n        if (as && as !== 'off' || force) {\n            this.preInit();\n        }\n    }\n\n    preInit() {\n        this.isRun = true;\n        this.inViewModule = new helper.InViewModule((entries) => {\n            entries.forEach((entry) => {\n                // https://github.com/verlok/vanilla-lazyload/issues/293#issuecomment-469100338\n                // Sometimes 'intersectionRatio' can be 0 but 'isIntersecting' is true\n                const iv = entry.isIntersecting || entry.intersectionRatio > 0;\n\n                if (this.isInView !== iv) {\n                    if (!this.inited) {\n                        this.isInView = iv;\n                        if (iv) {\n                            this.init();\n                        } else if (inView(this.instanceNode.node)) {\n                            this.init();\n                        }\n                    } else {\n                        this.inViewCallback(iv);\n                    }\n                }\n            });\n        }, {\n            rootMargin: this.rootMargin + 'px 0px'\n        });\n\n        this.inViewModule.observe(this.instanceNode);\n\n        if (inView(this.instanceNode.node)) {\n            this.init();\n        }\n    }\n\n    init() {\n        this.inited = true;\n        try {\n            this.maxWidth = this.instanceNode.node.style.maxWidth;\n        } catch (ex) { /* empty */ }\n\n        this._getBaseData();\n\n        if (this.imageUrl && ($J.browser.ready || $J.D.node.readyState !== 'loading')) {\n            this.startFullInit();\n        }\n\n        this.createSirvImage();\n    }\n\n    stop() {\n        this.destroy();\n        return true;\n    }\n\n    getOptionsForStartFullInit(options) {\n        if (options) {\n            options = {\n                common: { common: options.common.lazyImage, mobile: options.mobile.lazyImage },\n                local: { common: '', mobile: '' }\n            };\n        }\n\n        super.getOptionsForStartFullInit(options);\n    }\n\n    checkReadiness(eventname, component) {\n        if (eventname === 'onLoad') {\n            return this._isReady;\n        }\n\n        return false;\n    }\n\n    _setRootMargin() {\n        let value = parseInt(this.option('threshold'), 10);\n\n        if ($J.typeOf(this.option('threshold')) === 'string') {\n            value = ($J.W.node.innerHeight || $J.D.node.documentElement.clientHeight) / 100 * value; // eslint-disable-line operator-assignment\n        }\n\n        this.rootMargin = value;\n    }\n\n    _getQueryParams() {\n        if (this.imageUrl) {\n            this.queryParams = helper.paramsFromQueryString(this.imageUrl.replace(globalVariables.REG_URL_QUERY_STRING, '$2'));\n            if (this.queryParams) {\n                const q = parseInt(this.queryParams.quality, 10);\n                if (isNaN(q)) {\n                    delete this.queryParams.quality;\n                } else {\n                    this.queryParams.quality = q;\n                }\n            }\n\n            this.queryParamsQuality = this.queryParams.quality || null;\n        }\n    }\n\n    _getBaseData() {\n        this.originAlt = this.instanceNode.attr('alt');\n        this.originTitle = this.instanceNode.attr('title');\n\n        this.src = this.instanceNode.attr('src');\n        this.srcset = this.instanceNode.attr('srcset');\n        this.startedSrc = this.src;\n        this.dataSrc = this.instanceNode.attr('data-src');\n\n        this.isStaticImage = (this.src && !this.dataSrc);\n        this.imageUrl = this.dataSrc || this.src;\n\n        if (helper.isSVG(this.imageUrl) || this.instanceNode.attr('data-type') === 'static') {\n            this.isNotSirv = true;\n        }\n\n        this.dataBgSrc = this.instanceNode.attr('data-bg-src');\n        this.isStaticImage = this.isStaticImage && !this.dataBgSrc;\n\n        this.imageUrl = this.dataBgSrc || this.imageUrl;\n\n        if (this.instanceNode.getTagName() === 'img') {\n            this.instanceNode.attr('referrerpolicy', this.referrerPolicy);\n\n            if (this.dataBgSrc) {\n                if (!this.dataSrc) {\n                    this.dataSrc = this.dataBgSrc;\n                }\n                this.dataBgSrc = null;\n            }\n        }\n\n        if (this.dataBgSrc) {\n            this.dontLoad = false;\n        }\n\n        if (this.imageUrl) {\n            // Image URL\n            this.src = globalFunctions.normalizeURL(this.imageUrl.replace(globalVariables.REG_URL_QUERY_STRING, '$1'));\n        }\n\n        // Image default params\n        this._getQueryParams();\n\n        if (this.startedSrc && this.dataSrc && this.startedSrc !== this.dataSrc) {\n            this.isPlaceholder = this.instanceNode.attr('src');\n        }\n    }\n\n    createSirvImage() {\n        if (!this.imageUrl || this.isNotSirv) { return; }\n\n        this.on('imageOnload', (e) => {\n            e.stopAll();\n\n            this.replaceSrc();\n            if (!this._isReady) {\n                if (this.isStaticImage) {\n                    this.done();\n                } else {\n                    const showImage = () => {\n                        if (this.appearanceState) {\n                            this.appearanceState.setState(2);\n                            this.done();\n                        }\n                    };\n\n                    if (e.data.node) {\n                        showImage();\n                    } else {\n                        helper.loadImage(this.instanceNode).finally(() => {\n                            showImage();\n                        });\n                    }\n                }\n            }\n        });\n\n        this.on('imageOnerror', (e) => {\n            e.stopAll();\n            console.log('image error');\n        });\n\n        this.image = new ResponsiveImage(this.imageUrl, {\n            imageSettings: this.queryParams,\n            round: true,\n            dontLoad: this.dontLoad,\n            convertSmallerSideToZero: this.option('fit') !== 'crop',\n            referrerPolicy: this.referrerPolicy\n        });\n        this.image.setParent(this);\n        this.getInfoSize()\n            .catch((err) => {\n                if (err._isplaceholder) {\n                    this.infoSize = err;\n                    this.isNotSirv = true;\n                }\n            })\n            .finally(() => {\n                if ($J.D.node.readyState !== 'loading') {\n                    if (this.isStartedFullInit) {\n                        this.run();\n                    }\n                }\n            });\n    }\n\n    getInfoSize() {\n        if (!this.getImageInfoPromise) {\n            this.getImageInfoPromise = new Promise((resolve, reject) => {\n                if (this.image) {\n                    this.image.getImageInfo()\n                        .then((info) => {\n                            this.isInfoLoaded = true;\n                            this.infoAlt = this.image.getDescription();\n                            this.infoSize = this.image.getOriginSize();\n                            this.cropPosition = this.image.getCropPosition();\n                            resolve(info);\n                        })\n                        .catch((err) => {\n                            this.isInfoLoaded = true;\n                            if (!err.status || err.status !== 404) {\n                                this.isNotSirv = true;\n                            }\n                            reject(err);\n                        });\n                } else {\n                    reject();\n                }\n            });\n        }\n\n        return this.getImageInfoPromise;\n    }\n\n    getId(idPrefix, df) {\n        this.id = this.instanceNode.attr('id');\n\n        if (!this.id && !this.isStaticImage) {\n            super.getId(idPrefix, df);\n        }\n    }\n\n    startFullInit(options, force) {\n        if (this.isStartedFullInit || !this.inited) { return; }\n        this.getOptionsForStartFullInit(options);\n\n        const as = this.option('autostart');\n        if (!this.inited && !(as && as !== 'off' || force)) { return; }\n\n        super.startFullInit(options);\n\n        if (options) {\n            this.isLazy = this.option('autostart') === 'visible';\n        }\n\n        this.getId('responsive-image-', ' ');\n\n        if (this.dataBgSrc) {\n            this.cssBackgroundSize = helper.imageLib.getBackgroundSize(this.instanceNode);\n            if (this.cssBackgroundSize) {\n                this.option('fit', 'none');\n            }\n            this.instanceNode.addClass(P + '-bg-image');\n            if (this.option('fit') !== 'none') {\n                if (this.option('fit') === 'contain') {\n                    this.instanceNode.addClass(P + '-bg-contain');\n                } else {\n                    this.instanceNode.addClass(P + '-bg-cover');\n                }\n            }\n        }\n\n        this._setRootMargin();\n\n        if (this.isStaticImage) {\n            this.isLazy = false;\n        } else {\n            this.appearanceState = new Appearance(this.instanceNode);\n            if (!this.isPlaceholder) {\n                this.appearanceState.setState(1);\n            }\n        }\n\n        if (!this.isLazy) {\n            this.isInView = true;\n            this.inViewModule.disconnect();\n            this.inViewModule = null;\n        }\n\n        if (this.isInfoLoaded || this.isNotSirv) {\n            if ($J.D.node.readyState !== 'loading') {\n                this.run();\n            }\n        }\n\n        $J.W.addEvent('resize', this.resizeHandler);\n    }\n\n    fixHeight(height) {\n        if (height !== 0) {\n            const blockSize = parseInt(this.instanceNode.getCss('block-size'), 10);\n\n            if (height === blockSize || height <= 16) {\n                height = 0;\n            }\n        }\n\n        return height;\n    }\n\n    run() {\n        const result = super.run();\n\n        if (result) {\n            // Remove ALT to properly calculate image size.\n            // Safari and Edge/IE return image size with a height if ALT text is present.\n            this.instanceNode.removeAttr('alt');\n            // Remove TITLE to properly calculate image size.\n            // The latest version(s) of Chrome returns image size with a height if TITLE is set.\n            this.instanceNode.removeAttr('title');\n\n            // This force browsers to re-layout image and recalculate its dimensions.\n            this.instanceNode.setCss({ display: 'inline-flex' }).getSize();\n            this.instanceNode.setCss({ display: '' }).getSize();\n\n            let size = null;\n\n            helper.imageLib.getSize(this.instanceNode)\n                .then((dataSize) => { size = dataSize; })\n                .finally(() => {\n                    if (this.destroyed) { return; }\n                    size = helper.fixSize(this.instanceNode, size);\n\n                    // if (this.dataBgSrc) {\n                    //     this.fitSize = helper.imageLib.getBackgroundSize(this.instanceNode);\n                    // }\n                    if (size.width === 0 && size.height === 0) {\n                        this.instanceNode.setCss({ width: '100%' });\n                        size.width = this.instanceNode.getSize().width;\n                    }\n\n                    if (size.width === 0 && size.height === 0) {\n                        size.width = $J.W.node.innerWidth;\n                    }\n\n                    if (this.option('fit') === 'contain') {\n                        this.fitSize = { width: 'contain', height: 'contain' };\n                    } else {\n                        this.fitSize = { width: 'cover', height: 'cover' };\n                    }\n\n                    if (this.option('fit') === 'none') {\n                        if (this.cssBackgroundSize) {\n                            this.size = helper.imageLib.calcProportionalBackgroundSize(this.cssBackgroundSize, this.infoSize);\n                        } else {\n                            this.size = this.infoSize;\n                        }\n                    } else {\n                        this.size = helper.imageLib.calcProportionSize(size, this.infoSize, this.fitSize);\n                    }\n\n                    if (!this.dataBgSrc) {\n                        // Set the max-width to prevent image stretching beyond its original maximum width\n                        const objectFit = this.instanceNode.getCss('objectFit');\n                        if (!this.maxWidth && this.infoSize.width > 0 && ((!objectFit || objectFit === 'fill') && !this.instanceNode.attr('width'))) {\n                            this.isMaxWidthSet = true;\n                            this.instanceNode.setCss({ maxWidth: this.infoSize.width });\n                        }\n                    }\n\n                    if (this.originAlt || this.infoAlt) { // Restore ALT text\n                        this.instanceNode.attr('alt', this.originAlt || this.infoAlt);\n                    }\n                    if (this.originTitle) { // Restore TITLE text\n                        this.instanceNode.attr('title', this.originTitle);\n                    }\n\n                    if (this.isStaticImage) {\n                        this.loadStaticImage().finally(() => {\n                            if (this.isInfoLoaded) {\n                                this.done();\n                            }\n                        });\n                    } else if (!this.isLazy || this.isInView) {\n                        this.getImage();\n                    }\n                });\n        }\n\n        return result;\n    }\n\n    _setSrc(src, srcset) {\n        if (this.dataBgSrc) {\n            this.instanceNode.setCss({\n                backgroundImage: 'url(\"' + (srcset || src) + '\")'\n            });\n        } else {\n            this.instanceNode.attr('src', src);\n\n            if (srcset) {\n                if (!this.isNotSirv && this.dppx > 1) {\n                    this.instanceNode.attr('srcset', srcset + ' ' + this.dppx + 'x');\n                }\n            } else {\n                this.instanceNode.removeAttr('srcset');\n            }\n        }\n    }\n\n    _setHDQuality(opt) {\n        if (opt.dppx > 1 && opt.dppx < 1.5) {\n            const quality = this.instanceOptions.isset('quality') ? this.option('quality') : null;\n            if (this.queryParamsQuality === null && quality !== null) {\n                opt.srcset.quality = quality;\n            } else if (opt.srcset) {\n                delete opt.srcset.quality;\n            }\n        }\n\n        return opt;\n    }\n\n    replaceSrc() {\n        let img;\n\n        if (this.isNotSirv) {\n            if (this.srcWasSetted) { return; }\n            this.srcWasSetted = true;\n            img = { src: this.imageUrl };\n        } else {\n            let opt = this._getImageCreateSettings();\n\n            if (opt.dppx > 1 && opt.dppx < 1.5) {\n                delete opt.srcset.quality;\n            }\n\n            opt = this._setHDQuality(opt);\n\n            img = this.image.getImage(opt);\n\n            this.lastImageSize.width = img.width || img.serverWidth;\n            this.lastImageSize.height = img.height || img.serverHeight;\n        }\n\n        this._setSrc(img.src, img.srcset);\n    }\n\n    loadStaticImage() {\n        if (!this.loadStaticImagePromise) {\n            this.loadStaticImagePromise = new Promise((resolve, reject) => {\n                if (this.isStaticImage) {\n                    if (this.instanceNode.node.complete) {\n                        resolve();\n                    } else {\n                        this.instanceNode.addEvent('load', (e) => {\n                            resolve();\n                        });\n\n                        this.instanceNode.addEvent('error', (e) => {\n                            reject();\n                        });\n                    }\n                } else {\n                    resolve();\n                }\n            });\n        }\n        return this.loadStaticImagePromise;\n    }\n\n    _getImageCreateSettings() {\n        let setts = { src: {}, srcset: {} };\n\n        const quality = this.instanceOptions.isset('quality') ? this.option('quality') : null;\n\n        if (quality !== null && this.queryParamsQuality === null) {\n            setts.src.quality = quality;\n        }\n\n        const hdQuality = this.option('hdQuality');\n\n        if (this.queryParamsQuality === null || this.instanceOptions.isset('hdQuality') && hdQuality < this.queryParamsQuality) {\n            setts.srcset = { quality: hdQuality };\n        }\n\n        setts.width = this.size.width;\n\n        if (this.size.height) {\n            setts.height = this.size.height;\n        }\n\n        setts = helper.imageLib.checkMaxSize(setts, this.infoSize);\n\n        if (this.infoSize.width === setts.width || this.infoSize.height === setts.height) {\n            setts.round = false;\n        }\n\n        if ($J.DPPX > 1) {\n            setts.dppx = this.dppx;\n        }\n\n        if (this.option('fit') === 'crop') {\n            setts.round = false;\n        }\n\n        // if (this.dataBgSrc && this.option('fit') === 'crop') {\n        //     this.backgroundNodeSize = this.instanceNode.getSize();\n        //     let crop = null;\n        //     let cropX2 = null;\n        //     // const roundedSize = ResponsiveImage.roundImageSize(this.size);\n        //     const roundedSize = this.size;\n        //     const originSize = this.image.getOriginSize();\n        //     const dppx = getDPPX(roundedSize.width, roundedSize.height, originSize.width, originSize.height, (!$J.defined(setts.round) || setts.round), this.upscale);\n\n        //     if (!this.cropPosition.type) {\n        //         if (this.backgroundNodeSize.width < roundedSize.width) {\n        //             if (!crop) { crop = {}; cropX2 = {}; }\n        //             // crop.x = calcCropPositionForBGImage(50, this.backgroundNodeSize.width, roundedSize.width);\n        //             crop.x = calcCropPositionForBGImage(this.cropPosition.x ? parseFloat(this.cropPosition.x) : 50, this.backgroundNodeSize.width, roundedSize.width);\n        //             // cropX2.x = calcCropPositionForBGImage(50, this.backgroundNodeSize.width * setts.dppx, roundedSize.width * dppx);\n        //             cropX2.x = calcCropPositionForBGImage(this.cropPosition.x ? parseFloat(this.cropPosition.x) : 50, this.backgroundNodeSize.width * setts.dppx, roundedSize.width * dppx);\n        //             crop.width = this.backgroundNodeSize.width;\n        //             cropX2.width = this.backgroundNodeSize.width * dppx;\n        //         }\n\n        //         if (this.backgroundNodeSize.height < roundedSize.height) {\n        //             if (!crop) { crop = {}; cropX2 = {}; }\n        //             // crop.y = calcCropPositionForBGImage(50, this.backgroundNodeSize.height, roundedSize.height);\n        //             crop.y = calcCropPositionForBGImage(this.cropPosition.y ? parseFloat(this.cropPosition.y) : 50, this.backgroundNodeSize.height, roundedSize.height);\n        //             // cropX2.y = calcCropPositionForBGImage(50, this.backgroundNodeSize.height * setts.dppx, roundedSize.height * dppx);\n        //             cropX2.y = calcCropPositionForBGImage(this.cropPosition.y ? parseFloat(this.cropPosition.y) : 50, this.backgroundNodeSize.height * setts.dppx, roundedSize.height * dppx);\n        //             crop.height = this.backgroundNodeSize.height;\n        //             cropX2.height = this.backgroundNodeSize.height * dppx;\n        //         }\n\n        //         if (crop) {\n        //             if (!setts.src) { setts.src = {}; }\n        //             setts.src.crop = crop;\n        //             if (!setts.srcset) { setts.srcset = {}; }\n        //             setts.srcset.crop = cropX2;\n        //         }\n        //     }\n        // }\n\n        setts = this.setCrop(setts);\n\n        return setts;\n    }\n\n    setCrop(setts) {\n        if (this.option('fit') === 'crop') {\n            const size = $(this.instanceNode.node).getInnerSize(!!this.dataBgSrc);\n\n            if (!setts.imageSettings) { setts.imageSettings = {}; }\n            if (!setts.imageSettings.crop) { setts.imageSettings.crop = {}; }\n            setts.imageSettings.crop = {\n                x: this.cropPosition.x || 'center',\n                y: this.cropPosition.y || 'center',\n                width: size.width,\n                height: size.height\n            };\n        }\n\n        return setts;\n    }\n\n    getImage() {\n        if (this.isStaticImage) { return; }\n\n        if (this.isNotSirv) {\n            this.getNonSirvImg();\n        } else {\n            this.getSirvImg();\n        }\n    }\n\n    getNonSirvImg() {\n        if (this.isPlaceholder) {\n            helper.loadImage(this.dataSrc).finally(() => {\n                this.replaceSrc();\n                this.appearanceState.setState(2);\n                this.done();\n            });\n        } else {\n            this.replaceSrc();\n            this.appearanceState.setState(2);\n            this.done();\n        }\n    }\n\n    getImageClassContainer() {\n        return this.image;\n    }\n\n    getSirvImg() {\n        let setts = this._getImageCreateSettings();\n\n        if (setts.width) {\n            this.maxSize.width = setts.width;\n        }\n\n        if (setts.height) {\n            this.maxSize.height = setts.height;\n        }\n\n        if ($J.DPPX > 1) {\n            const originSize = this.image.getOriginSize();\n            this.dppx = getDPPX(setts.width, setts.height, originSize.width, originSize.height, (!$J.defined(setts.round) || setts.round), this.upscale);\n            setts.dppx = this.dppx;\n        }\n\n        setts = this._setHDQuality(setts);\n\n        if (this.checkImage(setts)) {\n            this.replaceSrc();\n        } else {\n            this.image.getImage(setts);\n        }\n    }\n\n    checkSize(size) {\n        const w = this.infoSize.width;\n        const h = this.infoSize.height;\n\n        if (size.width > w || size.height > h) {\n            size.width = w;\n            if (size.height) {\n                size.height = h;\n            }\n            size.round = false;\n        }\n\n        return size;\n    }\n\n    done() {\n        super.done();\n\n        // if (!this.dataBgSrc) {\n        //     this.instanceNode.setCss({ width: '', height: '' });\n        // }\n\n        this.option('onReady')(this.id);\n        this.sendEvent('ready');\n    }\n\n    inViewCallback(value) {\n        if (value && !this.isStaticImage) {\n            if (!this._isReady && !this.isInView) {\n                if (this.isStarted) {\n                    this.isInView = true;\n                    if (this.isNotSirv) {\n                        if (!this.srcWasSetted) {\n                            this.getImage();\n                        }\n                    } else if (this.isInfoLoaded) {\n                        this.getImage();\n                    }\n                }\n            }\n        }\n\n        this.isInView = value;\n    }\n\n    sendEvent(nameOfEvent, data) {\n        /*\n            image events: [\n                'ready',\n            ]\n        */\n\n        if (!data) { data = {}; }\n        if (!data.image) { data.image = {}; }\n        if (!data.image.event) { data.image.event = {}; }\n\n        if (nameOfEvent === 'ready') {\n            nameOfEvent = 'onLoad';\n        }\n\n        data.type = nameOfEvent;\n        data.image.id = this.id;\n        data.image.url = this.instanceUrl;\n        $J.extend(data.image, this.api);\n\n        data.node = this.instanceNode;\n        data.image.node = this.instanceNode.node;\n\n        data.image.event.timestamp = +(new Date());\n        data.image.event.type = 'lazyimage:' + nameOfEvent;\n\n        this.emit('imagePublicEvent', { data: data });\n    }\n\n    getOriginImageUrl() {\n        return this.src;\n    }\n\n    onResize() {\n        if (!this.isStarted || this.isStaticImage || !this.option('resize') || this.isNotSirv) { return false; }\n\n        let size;\n\n        if ($J.contains(['crop', 'cover'], this.option('fit'))) {\n            size = $(this.instanceNode.node.parentNode).getSize();\n        } else {\n            size = this.instanceNode.getSize();\n            // sometimes before the image appear in view the resize event can work and size of height of this image is 16px on android in chrome\n            size.height = this.fixHeight(size.height);\n        }\n\n        size = helper.imageLib.calcProportionSize(size, this.infoSize, this.fitSize);\n\n        this.size.width = size.width;\n        if (this.size.height) {\n            this.size.height = size.height;\n        }\n\n        if (this._isReady && !this.isNotSirv) {\n            const upscale = 50;\n            if (this.option('fit') === 'crop') {\n                if (Math.abs(this.size.width - this.lastImageSize.width) > upscale || Math.abs(this.size.height - this.lastImageSize.height) > upscale) {\n                    this.getImage();\n                }\n            } else if (this.size.width - this.lastImageSize.width > upscale || this.size.height - this.lastImageSize.height > upscale) {\n                this.getImage();\n            }\n        }\n\n        return true;\n    }\n\n    destroy() {\n        if (this.dataBgSrc) {\n            this.instanceNode.removeClass(P + '-bg-image');\n            this.instanceNode.setCssProp('background-image', '');\n        }\n\n        if (this.isMaxWidthSet) {\n            this.isMaxWidthSet = false;\n            this.instanceNode.setCss({ maxWidth: '' });\n        }\n\n        if (this.appearanceState) {\n            this.appearanceState.destroy();\n        }\n\n        if (this.inViewModule) {\n            this.inViewModule.disconnect();\n            this.inViewModule = null;\n        }\n\n        $J.W.removeEvent('resize', this.resizeHandler);\n        this.resizeDebounce.cancel();\n        this.resizeDebounce = null;\n\n        if (this.image) {\n            this.off('imageOnload');\n            this.off('imageOnerror');\n            this.image.destroy();\n            this.image = null;\n        }\n\n        if (this.instanceNode.node.hasAttribute('src')) {\n            try {\n                this.instanceNode.removeAttr('src');\n                if (this.isStaticImage) {\n                    this.instanceNode.attr('src', this.imageUrl);\n                }\n            } catch (e) {\n                // empty\n            }\n        }\n\n        if (!this.isStaticImage) {\n            this.instanceNode.removeAttr('src');\n        } else {\n            this.instanceNode.attr('src', this.src);\n        }\n\n        if (this.srcset) {\n            this.instanceNode.attr('srcset', this.srcset);\n        } else {\n            try {\n                this.instanceNode.removeAttr('srcset');\n            } catch (e) {\n                // empty\n            }\n        }\n        this.srcset = null;\n\n        if (!this.originAlt && this.infoAlt) {\n            this.instanceNode.removeAttr('alt');\n        }\n\n        this.instanceNode.removeEvent('load');\n\n        if (this.isPlaceholder) {\n            this.instanceNode.attr('src', this.isPlaceholder);\n            this.isPlaceholder = false;\n        }\n\n        super.destroy();\n    }\n}\n\nreturn LazyImage;\n\n    }\n);\n"],"file":"lazyimage.js"}