{"version":3,"sources":["../viewerimage/image.js"],"names":["Sirv","define","bHelpers","magicJS","globalVariables","globalFunctions","helper","Promise","ResponsiveImage","HotspotInstance","Hotspots","getDPPX","moduleName","$J","$","rootDOM","addModuleCSSByName","BRAND_LANDING","ViewerImage","node","options","type","SLIDE","TYPES","IMAGE","instanceNode","attr","referrerPolicy","image","isInfoLoaded","getImageInfoPromise","loadStaticImagePromise","imageShowPromise","srcWasSetted","lastImageSize","width","height","imageIndex","dppx","upscale","size","dontLoad","accountInfo","countOfTries","isFullscreen","nativeFullscreen","infoAlt","originAlt","originTitle","src","srcset","startedSrc","dataSrc","isStaticImage","imageUrl","getImageTimer","debounce","getImage","firstSlideAhead","normalizeURL","replace","REG_URL_QUERY_STRING","queryParamsQuality","queryParams","paramsFromQueryString","getQueryParams","isNotSirv","isSVG","createHotspotsClass","createSirvImage","sendEvent","typeOfEvent","data","getInfo","gettingInfoPromise","resolve","reject","waitGettingInfo","wait","getImageInfo","then","info","destroyed","getDescription","infoSize","getOriginSize","getAccountInfo","hotspotsData","hotspots","setOriginImageSize","catch","err","status","q","parseInt","quality","isNaN","getImageCreateSettings","setts","hdQuality","isHDQualitySet","imageLib","checkMaxSize","round","DPPX","setHDQuality","opt","replaceSrc","img","serverWidth","serverHeight","removeAttr","showImage","setCssProp","isInView","isSlideShown","addEvent","e","propertyName","stop","removeEvent","setCss","opacity","transition","getSize","on","stopAll","_isReady","finally","done","loadImage","sendContentLoadedEvent","console","log","imageSettings","setParent","getInfoSize","error","isPlaceholder","_isplaceholder","startFullInit","isStartedFullInit","getId","run","isShown","preload","loadContent","result","display","parentNode","dataSize","calcProportionSize","loadStaticImage","dataAlt","startGettingInfo","complete","setTimeout","isStarted","waitToStart","start","getSirvImg","getImageClassContainer","originSize","defined","checkImage","getOriginImageUrl","branded","n","getTagName","nodeWithSirvClassName","getNodeWithSirvClassName","D","head","body","showSirvAd","setContainerSize","getBoundingClientRect","isFullscreenEnabled","pinchCloud","getSelectorImgUrl","defOpt","extend","getThumbnail","alt","referrerpolicy","getThumbnailData","createPinchEvent","FS_OUT","FS_IN","onPinchStart","contains","FULLSCREEN","OPENING","CLOSING","fullscreenState","pinch","scale","onPinchMove","block","OPENED","onStartActions","onResize","always","onStopActions","onInView","value","onBeforeFullscreenIn","cancel","disableAll","onAfterFullscreenIn","enableAll","showNeededElements","onBeforeFullscreenOut","visibility","onAfterFullscreenOut","isFullscreenActionEnded","getType","destroy","off","hotspot","hasAttribute"],"mappings":"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","sourcesContent":["Sirv.define(\n    'ViewerImage',\n    ['bHelpers','magicJS','globalVariables','globalFunctions','helper','Promise!','ResponsiveImage','HotspotInstance','Hotspots','getDPPX'],\n    (bHelpers,magicJS,globalVariables,globalFunctions,helper,Promise,ResponsiveImage,HotspotInstance,Hotspots,getDPPX) => {\n        const moduleName = 'ViewerImage';\n        \n        const $J = magicJS;\n        const $ = $J.$;\n        \n        \n        /* start-removable-module-css */\n        globalFunctions.rootDOM.addModuleCSSByName(moduleName, () => {\n            return '.smv .smv-slides-box .smv-slides .smv-slide .smv-content .sirv-hotspot-container{position:absolute!important}.smv .smv-slides-box .smv-slides .smv-slide .smv-content .sirv-hotspot-container.sirv-hotspot-overwrite-pointer-event{pointer-events:auto!important}';\n        });\n        /* end-removable-module-css */\n        \n        /* global $, $J */\n/* global helper */\n/* global HotspotInstance */\n/* global globalVariables */\n/* global ResponsiveImage */\n/* global Hotspots */\n/* global getDPPX */\n/* eslint-disable indent */\n/* eslint quote-props: [\"error\", \"as-needed\", { \"keywords\": true, \"unnecessary\": false }] */\n/* eslint-env es6 */\n\n\nconst BRAND_LANDING = 'https://sirv.com/about-image/?utm_source=client&utm_medium=sirvembed&utm_content=typeofembed(image)&utm_campaign=branding';\n\n// eslint-disable-next-line no-unused-vars\nclass ViewerImage extends HotspotInstance {\n    constructor(node, options) {\n        super(node, options, {});\n\n        this.type = globalVariables.SLIDE.TYPES.IMAGE;\n\n        this.instanceNode.attr('referrerpolicy', this.referrerPolicy);\n\n        this.image = null;\n        this.isInfoLoaded = false;\n        this.getImageInfoPromise = null;\n        this.loadStaticImagePromise = null;\n        this.imageShowPromise = null;\n        this.srcWasSetted = false;\n        this.lastImageSize = { width: 0, height: 0 };\n        this.imageIndex = options.imageIndex;\n\n        this.dppx = 1;\n        this.upscale = false;\n        this.size = { width: 0, height: 0 };\n        this.dontLoad = true;\n        this.accountInfo = {};\n        this.countOfTries = 1;\n\n        this.isFullscreen = options.isFullscreen;\n        this.nativeFullscreen = options.nativeFullscreen;\n\n        this.infoAlt = null;\n        this.originAlt = this.instanceNode.attr('alt');\n        this.originTitle = this.instanceNode.attr('title');\n\n        this.src = this.instanceNode.attr('src');\n        this.srcset = this.instanceNode.attr('srcset');\n        this.startedSrc = this.src;\n        this.dataSrc = this.instanceNode.attr('data-src');\n\n        this.isStaticImage = (this.src && !this.dataSrc);\n        this.imageUrl = this.dataSrc || this.src;\n        this.getImageTimer = helper.debounce(() => { this.getImage(); }, 32);\n        this.firstSlideAhead = false;\n\n        // Image URL\n        this.src = globalFunctions.normalizeURL(this.imageUrl.replace(globalVariables.REG_URL_QUERY_STRING, '$1'));\n\n        this.queryParamsQuality = null;\n        this.queryParams = helper.paramsFromQueryString(this.imageUrl.replace(globalVariables.REG_URL_QUERY_STRING, '$2'));\n        // Image default params\n        this.getQueryParams();\n\n        this.isNotSirv = false;\n        if (helper.isSVG(this.imageUrl)) {\n            this.isNotSirv = true;\n        }\n\n        // this.api = $J.extend(this.api, {\n        //     isReady: this.isReady.bind(this), // parent class\n        //     resize: this.resize.bind(this), // parent class\n        //     getOptions: this.getOptions.bind(this) // parent class\n        //     hotspots: {} // parent class, hotspots api\n        // });\n\n        this.createHotspotsClass(Hotspots);\n        this.createSirvImage();\n    }\n\n    sendEvent(typeOfEvent, data) {\n        if (!data) { data = {}; }\n        data.imageIndex = this.imageIndex;\n        super.sendEvent(typeOfEvent, data);\n    }\n\n    getInfo() {\n        if (!this.gettingInfoPromise) {\n            this.gettingInfoPromise = new Promise((resolve, reject) => {\n                this.waitGettingInfo.wait(() => {\n                    this.image.getImageInfo()\n                        .then((info) => {\n                            if (!this.destroyed) {\n                                this.isInfoLoaded = true;\n                                this.infoAlt = this.image.getDescription();\n                                this.infoSize = this.image.getOriginSize();\n                                this.accountInfo = this.image.getAccountInfo();\n                                this.hotspotsData = info.hotspots;\n\n                                if (this.hotspots) {\n                                    this.hotspots.setOriginImageSize(this.infoSize.width, this.infoSize.height);\n                                }\n\n                                resolve();\n                            }\n                        })\n                        .catch((err) => {\n                            if (!this.destroyed) {\n                                this.isInfoLoaded = true;\n\n                                if (!err.status || err.status !== 404) {\n                                    this.isNotSirv = true;\n                                }\n\n                                reject(err);\n                            }\n                        });\n                });\n            });\n        }\n\n        return this.gettingInfoPromise;\n    }\n\n    getQueryParams() {\n        if (this.imageUrl) {\n            if (this.queryParams) {\n                const q = parseInt(this.queryParams.quality, 10);\n                if (isNaN(q)) {\n                    delete this.queryParams.quality;\n                } else {\n                    this.queryParams.quality = q;\n                }\n            }\n\n            this.queryParamsQuality = this.queryParams.quality || null;\n        }\n    }\n\n    getImageCreateSettings() {\n        let setts = { src: {}, srcset: {} };\n\n        if (this.quality !== null && this.queryParamsQuality === null) {\n            setts.src.quality = this.quality;\n        }\n\n        const hdQuality = this.hdQuality;\n\n        if (this.queryParamsQuality === null || this.isHDQualitySet && hdQuality < this.queryParamsQuality) {\n            setts.srcset = { quality: hdQuality };\n        }\n\n        setts.width = this.size.width;\n\n        if (this.size.height) {\n            setts.height = this.size.height;\n        }\n\n        setts = helper.imageLib.checkMaxSize(setts, this.infoSize);\n\n        if (this.infoSize.width === setts.width || this.infoSize.height === setts.height) {\n            setts.round = false;\n        }\n\n        if ($J.DPPX > 1) {\n            setts.dppx = this.dppx;\n        }\n\n        return setts;\n    }\n\n    setHDQuality(opt) {\n        if (opt.dppx > 1 && opt.dppx < 1.5) {\n            if (this.queryParamsQuality === null && this.quality !== null) {\n                opt.srcset.quality = this.quality;\n            } else if (opt.srcset) {\n                delete opt.srcset.quality;\n            }\n        }\n\n        return opt;\n    }\n\n    replaceSrc() {\n        let img;\n\n        if (this.isNotSirv) {\n            if (this.srcWasSetted) { return; }\n            this.srcWasSetted = true;\n            img = { src: this.imageUrl };\n        } else {\n            let opt = this.getImageCreateSettings();\n\n            if (opt.dppx > 1 && opt.dppx < 1.5) {\n                delete opt.srcset.quality;\n            }\n\n            opt = this.setHDQuality(opt);\n\n            img = this.image.getImage(opt);\n\n            this.lastImageSize.width = img.width || img.serverWidth;\n            this.lastImageSize.height = img.height || img.serverHeight;\n        }\n\n        this.instanceNode.attr('src', img.src);\n\n        if (img.srcset) {\n            if (!this.isNotSirv && this.dppx > 1) {\n                this.instanceNode.attr('srcset', img.srcset + ' ' + this.dppx + 'x');\n            }\n        } else {\n            this.instanceNode.removeAttr('srcset');\n        }\n    }\n\n    showImage() {\n        if (!this.imageShowPromise) {\n            // eslint-disable-next-line\n            this.imageShowPromise = new Promise((resolve, reject) => {\n                if (this.isStaticImage) {\n                    this.instanceNode.setCssProp('opacity', '');\n                    resolve();\n                } else if (this.isInView && this.isSlideShown) {\n                    this.instanceNode.addEvent('transitionend', (e) => {\n                        if (e.propertyName === 'opacity') {\n                            e.stop();\n                            this.instanceNode.removeEvent('transitionend');\n                            this.instanceNode.setCss({ opacity: '', transition: '' });\n                            resolve();\n                        }\n                    });\n                    this.instanceNode.getSize();\n                    this.instanceNode.setCss({\n                        opacity: 1,\n                        transition: 'opacity 0.3s linear'\n                    });\n                } else {\n                    this.instanceNode.setCssProp('opacity', '');\n                    resolve();\n                }\n            });\n        }\n\n        return this.imageShowPromise;\n    }\n\n    createSirvImage() {\n        if (!this.imageUrl || this.isNotSirv) { return; }\n\n        this.on('imageOnload', (e) => {\n            e.stopAll();\n            this.replaceSrc();\n\n            if (!this._isReady) {\n                if (e.data.node) {\n                    this.showImage().finally(() => { this.done(); });\n                } else {\n                    helper.loadImage(this.instanceNode).finally(() => {\n                        this.showImage().finally(() => { this.done(); this.sendContentLoadedEvent(); });\n                    });\n                }\n            }\n        });\n\n        this.on('imageOnerror', (e) => {\n            e.stopAll();\n            console.log('image error');\n        });\n\n        this.image = new ResponsiveImage(this.imageUrl, {\n            imageSettings: this.queryParams,\n            round: true,\n            dontLoad: this.dontLoad,\n            referrerPolicy: this.referrerPolicy\n        });\n        this.image.setParent(this);\n        this.getInfo();\n    }\n\n    getInfoSize() {\n        if (!this.getImageInfoPromise) {\n            this.getImageInfoPromise = new Promise((resolve, reject) => {\n                if (this.image) {\n                    this.getInfo()\n                        .then(() => {\n                            resolve({\n                                size: this.infoSize,\n                                imageIndex: this.imageIndex\n                            });\n                        })\n                        .catch((err) => {\n                            reject({\n                                error: err,\n                                isPlaceholder: err._isplaceholder,\n                                imageIndex: this.imageIndex\n                            });\n                        });\n                } else {\n                    reject({\n                        error: 'nonsirv',\n                        isPlaceholder: false,\n                        imageIndex: this.imageIndex\n                    });\n                }\n            });\n        }\n\n        return this.getImageInfoPromise;\n    }\n\n    startFullInit(options) {\n        if (this.isStartedFullInit) { return; }\n\n        super.startFullInit(options);\n\n        this.getId('responsive-image-'); // TODO check css\n\n        if (!this.isStaticImage) {\n            this.instanceNode.setCssProp('opacity', 0);\n        }\n    }\n\n    run(isShown, preload, firstSlideAhead, loadContent) {\n        this.firstSlideAhead = firstSlideAhead;\n        let result = super.run(isShown, preload, firstSlideAhead);\n\n        if (result) {\n            if (this.destroyed) {\n                result = false;\n            } else {\n                // Remove ALT to properly calculate image size.\n                // Safari and Edge/IE return image size with a height if ALT text is present.\n                this.instanceNode.removeAttr('alt');\n                // Remove TITLE to properly calculate image size.\n                // The latest version(s) of Chrome returns image size with a height if TITLE is set.\n                this.instanceNode.removeAttr('title');\n\n                // This force browsers to re-layout image and recalculate its dimensions.\n                this.instanceNode.setCss({ display: 'inline-flex' }).getSize();\n                this.instanceNode.setCss({ display: '' }).getSize();\n\n                let size = null;\n                helper.imageLib.getSize(this.instanceNode.node.parentNode)\n                    .then((dataSize) => { size = dataSize; })\n                    .finally(() => {\n                        if (!this.destroyed) {\n                            // sometimes when we have very slow internet connection and the image is first slide and thumbnails have left position we get wrong height\n                            if (size.width && size.height <= 20) {\n                                size.height = 0;\n                            }\n\n                            // size = helper.fixSize(this.instanceNode, size);\n                            this.size = helper.imageLib.calcProportionSize(size, this.infoSize);\n\n                            if (this.originAlt || this.infoAlt) { // Restore ALT text\n                                $(this.instanceNode).attr('alt', this.originAlt || this.infoAlt);\n                            }\n\n                            if (this.originTitle) { // Restore TITLE text\n                                $(this.instanceNode).attr('title', this.originTitle);\n                            }\n\n                            if (this.isStaticImage) {\n                                this.loadStaticImage().finally(() => {\n                                    if (this.isInfoLoaded) {\n                                        this.done();\n                                    }\n                                });\n                            } else {\n                                if (this.originAlt) { // Restore ALT text\n                                    $(this.instanceNode).attr('alt', this.originAlt);\n                                }\n\n                                if (this.isInView && (this.isSlideShown || this.preload || loadContent)) {\n                                    this.getImage();\n                                }\n                            }\n\n                            if (this.dataAlt) {\n                                $(this.instanceNode).attr('alt', this.dataAlt);\n                            }\n                        }\n                    });\n\n                this.startGettingInfo();\n            }\n        }\n\n        return result;\n    }\n\n    loadContent() { this.getImage(true); }\n\n    loadStaticImage() {\n        if (!this.loadStaticImagePromise) {\n            this.loadStaticImagePromise = new Promise((resolve, reject) => {\n                if (this.isStaticImage) {\n                    if (this.instanceNode.node.complete) {\n                        resolve();\n                    } else {\n                        // eslint-disable-next-line\n                        this.instanceNode.addEvent('load', (e) => { this.sendContentLoadedEvent(); resolve(); });\n                        // eslint-disable-next-line\n                        this.instanceNode.addEvent('error', (e) => { reject(); });\n                    }\n                } else {\n                    resolve();\n                }\n            });\n        }\n        return this.loadStaticImagePromise;\n    }\n\n    getImage(loadContent) {\n        if (this.isStaticImage) { return; }\n\n        if (!this.isNotSirv && !this._isReady && !this.size.width && !this.size.height) {\n            // fix for if the viewer was with display none\n            if (this.countOfTries < 100) {\n                setTimeout(() => {\n                    this.countOfTries += 1;\n                    this.isStarted = false;\n                    this.run(this.isSlideShown, this.preload, this.firstSlideAhead, loadContent);\n                }, 16 * this.countOfTries);\n            }\n\n            return;\n        }\n\n        this.waitToStart.start();\n\n        if (this.isNotSirv) {\n            this.replaceSrc();\n        } else {\n            this.getSirvImg();\n        }\n    }\n\n    getImageClassContainer() {\n        return this.image;\n    }\n\n    getSirvImg() {\n        let setts = this.getImageCreateSettings();\n\n        if ($J.DPPX > 1) {\n            const originSize = this.image.getOriginSize();\n            this.dppx = getDPPX(setts.width, setts.height, originSize.width, originSize.height, (!$J.defined(setts.round) || setts.round), this.upscale);\n            setts.dppx = this.dppx;\n        }\n\n        setts = this.setHDQuality(setts);\n\n        if (this.checkImage(setts, this.dontLoad)) {\n            this.replaceSrc();\n        } else {\n            this.image.getImage(setts);\n        }\n    }\n\n    getOriginImageUrl() {\n        return this.src;\n    }\n\n    done() {\n        if (!this._isReady) {\n            if (this.accountInfo.branded) {\n                let n = this.instanceNode;\n                if (n.getTagName() === 'img') { n = n.node.parentNode; }\n                const nodeWithSirvClassName = globalFunctions.getNodeWithSirvClassName(this.instanceNode) || $J.D.node.head || $J.D.node.body;\n                globalFunctions.rootDOM.showSirvAd(nodeWithSirvClassName, n, BRAND_LANDING, 'Image viewer by Sirv');\n            }\n\n            super.done();\n\n            if (this.hotspots) {\n                this.hotspots.setContainerSize(this.instanceNode.node.getBoundingClientRect());\n            }\n\n            if (!this.isFullscreenEnabled) {\n                this.pinchCloud.removeEvent();\n                this.pinchCloud = null;\n            }\n        }\n    }\n\n    getSelectorImgUrl(data) {\n        return new Promise((resolve, reject) => {\n            const defOpt = this.getImageCreateSettings();\n            if (defOpt.src) { data.src = defOpt.src; }\n            data.srcset = defOpt.srcset;\n\n            if (this.isInfoLoaded) {\n                this.waitToStart.wait(() => {\n                    resolve($J.extend(this.image.getThumbnail(data), {\n                        imageIndex: this.imageIndex,\n                        alt: this.dataAlt || this.originAlt || this.infoAlt,\n                        'referrerpolicy': this.instanceNode.attr('referrerpolicy')\n                    }));\n                });\n            } else {\n                this.getInfo()\n                    .then(() => {\n                        this.waitToStart.wait(() => {\n                            resolve($J.extend(this.image.getThumbnail(data), {\n                                imageIndex: this.imageIndex,\n                                alt: this.dataAlt || this.originAlt || this.infoAlt,\n                                referrerpolicy: this.instanceNode.attr('referrerpolicy')\n                            }));\n                        });\n                    })\n                    .catch(reject);\n            }\n        });\n    }\n\n    getThumbnailData(opt) {\n        return this.image.getThumbnail(opt);\n    }\n\n    createPinchEvent() {\n        // difference between scale\n        const FS_OUT = 0.2;\n        const FS_IN = 2;\n\n        super.createPinchEvent(this.instanceNode);\n\n        this.pinchCloud.onPinchStart = (e) => {\n            if ($J.contains([globalVariables.FULLSCREEN.OPENING, globalVariables.FULLSCREEN.CLOSING], this.fullscreenState)) { return; }\n            this.pinchCloud.pinch = true;\n            this.pinchCloud.scale = e.scale;\n            this.sendEvent('pinchStart');\n        };\n\n        this.pinchCloud.onPinchMove = (e) => {\n            if (this.pinchCloud.pinch && !this.pinchCloud.block) {\n                if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED) {\n                    if (e.scale < FS_OUT) {\n                        this.pinchCloud.block = true;\n                        this.sendEvent('fullscreenOut');\n                    }\n                } else if (e.scale >= FS_IN) {\n                    this.pinchCloud.block = true;\n                    this.sendEvent('fullscreenIn');\n                }\n            }\n        };\n    }\n\n    onStartActions() {\n        if (!this._isReady) {\n            if (this.isInView && this.isStarted) {\n                if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED) {\n                    this.onResize();\n                }\n\n                if (this.always) {\n                    /*\n                        it can happen when fullscreen always is true and we came to this slide by thumbnail\n                        we need timer to clear it in 'onBeforeFullscreenIn' handler and don't if we are in standard mode\n                    */\n                    this.getImageTimer();\n                } else {\n                    this.getImage();\n                }\n            }\n        }\n\n        super.onStartActions();\n    }\n\n    onStopActions() {\n        super.onStopActions();\n    }\n\n    onInView(value) {\n        if (value && !this.isStaticImage) {\n            if (!this._isReady && !this.isInView) {\n                if (this.isStarted) {\n                    this.isInView = true;\n                    if (this.isInfoLoaded && (this.preload || this.isSlideShown)) {\n                        this.getImage();\n                    }\n                }\n            }\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    onBeforeFullscreenIn(data) {\n        this.getImageTimer.cancel();\n        if (this._isReady && !this.isStaticImage) {\n            this.instanceNode.setCssProp('visibility', 'hidden');\n        }\n\n        super.onBeforeFullscreenIn(data);\n        if (this.hotspots) {\n            this.hotspots.disableAll();\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars, class-methods-use-this\n    onAfterFullscreenIn(data) {\n        // if we use it, we do not have pinchend event and touchdrag after that\n        // if (this.pinchCloud) {\n        //     this.pinchCloud.removeEvent();\n        //     this.pinchCloud.addEvent();\n        // }\n\n        if (this.always && !this._isReady && this.isInView && this.isStarted) {\n            this.onResize();\n            this.getImage();\n        }\n\n        if (this.hotspots) {\n            setTimeout(() => { // we have to wait a little bit for 'onResize' function\n                if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED) { // if we will exit from fullscreen before the timeout end\n                    this.hotspots.enableAll();\n                    if (this.isInView && this.isSlideShown) {\n                        this.hotspots.showNeededElements();\n                    }\n                }\n            }, 100);\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    onBeforeFullscreenOut(data) {\n        this.instanceNode.setCss({ width: '', height: '', visibility: '' });\n        super.onBeforeFullscreenOut(data);\n    }\n\n    // eslint-disable-next-line no-unused-vars, class-methods-use-this\n    onAfterFullscreenOut(data) {\n        // if we use it, we do not have pinchend event and touchdrag after that\n        // if (this.pinchCloud) {\n        //     this.pinchCloud.removeEvent();\n        //     this.pinchCloud.addEvent();\n        // }\n\n        super.onAfterFullscreenOut(data);\n    }\n\n    onResize() {\n        if (!this.isStarted || this.isStaticImage || this.isNotSirv) { return false; }\n\n        if (this.isFullscreenActionEnded()) {\n            let size = $(this.instanceNode.node.parentNode).getSize();\n            size = helper.imageLib.calcProportionSize(size, this.infoSize);\n\n            if (this.fullscreenState === globalVariables.FULLSCREEN.OPENED) {\n                this.instanceNode.setCss({\n                    width: size.width + 'px',\n                    height: size.height + 'px'\n                });\n\n                this.instanceNode.setCssProp('visibility', '');\n            }\n\n            this.size.width = size.width;\n            if (this.size.height) {\n                this.size.height = size.height;\n            }\n\n            if (this._isReady) {\n                const upscale = 50;\n                if (this.size.width - this.lastImageSize.width > upscale || this.size.height - this.lastImageSize.height > upscale) {\n                    this.getImage();\n                }\n\n                if (this.hotspots) {\n                    this.hotspots.setContainerSize(this.instanceNode.node.getBoundingClientRect());\n                    if (this.isInView && this.isSlideShown) {\n                        this.hotspots.showNeededElements();\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    destroy() {\n        if (this.image) {\n            this.off('imageOnload');\n            this.off('imageOnerror');\n            this.image.destroy();\n            this.image = null;\n        }\n\n        this.getImageTimer.cancel();\n        this.getImageTimer = null;\n\n        this.instanceNode.setCssProp('opacity', '');\n\n        if (this.hotspot) {\n            $(this.instanceNode.node.parentNode).removeEvent('tap');\n        }\n\n        if (this.instanceNode.node.hasAttribute('src')) {\n            try {\n                this.instanceNode.removeAttr('src');\n                if (this.isStaticImage) {\n                    this.instanceNode.attr('src', this.imageUrl);\n                }\n            } catch (e) {\n                // empty\n            }\n        }\n\n        if (!this.isStaticImage) {\n            this.instanceNode.removeAttr('src');\n        } else {\n            this.instanceNode.attr('src', this.src);\n        }\n\n        if (this.srcset) {\n            this.instanceNode.attr('srcset', this.srcset);\n        } else {\n            try {\n                this.instanceNode.removeAttr('srcset');\n            } catch (e) {\n                // empty\n            }\n        }\n        this.srcset = null;\n\n        if (!this.originAlt && (this.infoAlt || this.dataAlt)) {\n            this.instanceNode.removeAttr('alt');\n        }\n\n        this.instanceNode.removeEvent('load');\n        this.hotspotsData = null;\n        super.destroy();\n\n        return true;\n    }\n}\n\nreturn ViewerImage;\n\n    }\n);\n"],"file":"image.js"}